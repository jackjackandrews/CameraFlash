

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 16 12:38:33 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001                     _dpowers:
    60                           	opt stack 0
    61  001001  0001               	dw	1
    62  001003  000A               	dw	10
    63  001005  0064               	dw	100
    64  001007  03E8               	dw	1000
    65  001009  2710               	dw	10000
    66  00100B                     __end_of_dpowers:
    67                           	opt stack 0
    68  0000                     _ADCON0	set	4034
    69  0000                     _ADCON0bits	set	4034
    70  0000                     _ADCON1	set	4033
    71  0000                     _ADCON2	set	4032
    72  0000                     _ADRESH	set	4036
    73  0000                     _ADRESL	set	4035
    74  0000                     _INTCON2bits	set	4081
    75  0000                     _INTCONbits	set	4082
    76  0000                     _LATDbits	set	3980
    77  0000                     _LATGbits	set	3983
    78  0000                     _LATHbits	set	3984
    79  0000                     _LATJbits	set	3985
    80  0000                     _PIE1bits	set	3997
    81  0000                     _PIR1bits	set	3998
    82  0000                     _PORTB	set	3969
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PORTJbits	set	3976
    85  0000                     _RCONbits	set	4048
    86  0000                     _T0CON	set	4053
    87  0000                     _T0CONbits	set	4053
    88  0000                     _TMR0H	set	4055
    89  0000                     _TMR0L	set	4054
    90  0000                     _TRISBbits	set	3987
    91  0000                     _TRISDbits	set	3989
    92  0000                     _TRISFbits	set	3991
    93  0000                     _TRISGbits	set	3992
    94  0000                     _TRISHbits	set	3993
    95  0000                     _TRISJbits	set	3994
    96  00100B                     STR_3:
    97  00100B  43                 	db	67	;'C'
    98  00100C  6F                 	db	111	;'o'
    99  00100D  6E                 	db	110	;'n'
   100  00100E  6E                 	db	110	;'n'
   101  00100F  65                 	db	101	;'e'
   102  001010  63                 	db	99	;'c'
   103  001011  74                 	db	116	;'t'
   104  001012  20                 	db	32
   105  001013  4C                 	db	76	;'L'
   106  001014  45                 	db	69	;'E'
   107  001015  44                 	db	68	;'D'
   108  001016  20                 	db	32
   109  001017  6D                 	db	109	;'m'
   110  001018  6F                 	db	111	;'o'
   111  001019  64                 	db	100	;'d'
   112  00101A  75                 	db	117	;'u'
   113  00101B  6C                 	db	108	;'l'
   114  00101C  65                 	db	101	;'e'
   115  00101D  00                 	db	0
   116  00101E                     STR_1:
   117  00101E  4C                 	db	76	;'L'
   118  00101F  45                 	db	69	;'E'
   119  001020  44                 	db	68	;'D'
   120  001021  20                 	db	32
   121  001022  44                 	db	68	;'D'
   122  001023  72                 	db	114	;'r'
   123  001024  69                 	db	105	;'i'
   124  001025  76                 	db	118	;'v'
   125  001026  65                 	db	101	;'e'
   126  001027  72                 	db	114	;'r'
   127  001028  20                 	db	32
   128  001029  4D                 	db	77	;'M'
   129  00102A  6F                 	db	111	;'o'
   130  00102B  64                 	db	100	;'d'
   131  00102C  75                 	db	117	;'u'
   132  00102D  6C                 	db	108	;'l'
   133  00102E  65                 	db	101	;'e'
   134  00102F  00                 	db	0
   135  001030                     STR_5:
   136  001030  44                 	db	68	;'D'
   137  001031  49                 	db	73	;'I'
   138  001032  53                 	db	83	;'S'
   139  001033  43                 	db	67	;'C'
   140  001034  48                 	db	72	;'H'
   141  001035  41                 	db	65	;'A'
   142  001036  52                 	db	82	;'R'
   143  001037  47                 	db	71	;'G'
   144  001038  45                 	db	69	;'E'
   145  001039  3A                 	db	58	;':'
   146  00103A  20                 	db	32
   147  00103B  30                 	db	48	;'0'
   148  00103C  00                 	db	0
   149  00103D                     STR_2:
   150  00103D  53                 	db	83	;'S'
   151  00103E  69                 	db	105	;'i'
   152  00103F  67                 	db	103	;'g'
   153  001040  6E                 	db	110	;'n'
   154  001041  61                 	db	97	;'a'
   155  001042  6C                 	db	108	;'l'
   156  001043  20                 	db	32
   157  001044  54                 	db	84	;'T'
   158  001045  65                 	db	101	;'e'
   159  001046  73                 	db	115	;'s'
   160  001047  74                 	db	116	;'t'
   161  001048  00                 	db	0
   162  001049                     STR_6:
   163  001049  4C                 	db	76	;'L'
   164  00104A  45                 	db	69	;'E'
   165  00104B  44                 	db	68	;'D'
   166  00104C  20                 	db	32
   167  00104D  45                 	db	69	;'E'
   168  00104E  4E                 	db	78	;'N'
   169  00104F  41                 	db	65	;'A'
   170  001050  3A                 	db	58	;':'
   171  001051  20                 	db	32
   172  001052  30                 	db	48	;'0'
   173  001053  00                 	db	0
   174  001054                     STR_7:
   175  001054  4C                 	db	76	;'L'
   176  001055  45                 	db	69	;'E'
   177  001056  44                 	db	68	;'D'
   178  001057  3A                 	db	58	;':'
   179  001058  25                 	db	37
   180  001059  34                 	db	52	;'4'
   181  00105A  75                 	db	117	;'u'
   182  00105B  00                 	db	0
   183  00105C                     STR_8:
   184  00105C  43                 	db	67	;'C'
   185  00105D  41                 	db	65	;'A'
   186  00105E  50                 	db	80	;'P'
   187  00105F  3A                 	db	58	;':'
   188  001060  25                 	db	37
   189  001061  34                 	db	52	;'4'
   190  001062  75                 	db	117	;'u'
   191  001063  00                 	db	0
   192  001064                     STR_9:
   193  001064  25                 	db	37
   194  001065  64                 	db	100	;'d'
   195  001066  00                 	db	0
   196  0000                     
   197                           ; #config settings
   198  001067  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	cinit
   201  001F10                     __pcinit:
   202                           	opt stack 0
   203  001F10                     start_initialization:
   204                           	opt stack 0
   205  001F10                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Clear objects allocated to COMRAM (18 bytes)
   209  001F10  EE00  F033         	lfsr	0,__pbssCOMRAM
   210  001F14  0E12               	movlw	18
   211  001F16                     clear_0:
   212  001F16  6AEE               	clrf	postinc0,c
   213  001F18  06E8               	decf	wreg,f,c
   214  001F1A  E1FD               	bnz	clear_0
   215  001F1C                     end_of_initialization:
   216                           	opt stack 0
   217  001F1C                     __end_of__initialization:
   218                           	opt stack 0
   219  001F1C  0100               	movlb	0
   220  001F1E  EF89  F009         	goto	_main	;jump to C main() function
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssCOMRAM
   225  000033                     __pbssCOMRAM:
   226                           	opt stack 0
   227  000033                     _counter:
   228                           	opt stack 0
   229  000033                     	ds	2
   230  000035                     _systick_tmr_reload:
   231                           	opt stack 0
   232  000035                     	ds	2
   233  000037                     _buttons_interrupt_priority:
   234                           	opt stack 0
   235  000037                     	ds	1
   236  000038                     _buttons_use_interrupts:
   237                           	opt stack 0
   238  000038                     	ds	1
   239  000039                     _enc_A:
   240                           	opt stack 0
   241  000039                     	ds	1
   242  00003A                     _enc_A_prev:
   243                           	opt stack 0
   244  00003A                     	ds	1
   245  00003B                     _enc_B:
   246                           	opt stack 0
   247  00003B                     	ds	1
   248  00003C                     _sig_statuses:
   249                           	opt stack 0
   250  00003C                     	ds	1
   251  00003D                     _systick_interrupt_priority:
   252                           	opt stack 0
   253  00003D                     	ds	1
   254  00003E                     _enc_state:
   255                           	opt stack 0
   256  00003E                     	ds	3
   257  000041                     _lcd_state:
   258                           	opt stack 0
   259  000041                     	ds	3
   260  000044                     _button_state_bits:
   261                           	opt stack 0
   262  000044                     	ds	1
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           
   266                           	psect	cstackBANK0
   267  000060                     __pcstackBANK0:
   268                           	opt stack 0
   269  000060                     main@buff:
   270                           	opt stack 0
   271                           
   272                           ; 21 bytes @ 0x0
   273  000060                     	ds	21
   274  000075                     main@adc_value:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x15
   278  000075                     	ds	2
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	opt stack 0
   285  000001                     ??i2_scan_buttons:
   286  000001                     i2WriteTimer0@timer0:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x0
   290  000001                     	ds	1
   291  000002                     
   292                           ; 0 bytes @ 0x1
   293  000002                     	ds	1
   294  000003                     i2WriteTimer0@timer:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298  000003                     	ds	2
   299  000005                     ??_ISR:
   300  000005                     
   301                           ; 0 bytes @ 0x4
   302  000005                     	ds	14
   303  000013                     ??_scan_buttons:
   304  000013                     ??_SetChanADC:
   305  000013                     ??_Delay10KTCYx:
   306  000013                     ??_isdigit:
   307  000013                     ??_write_port:
   308  000013                     ??_write_cmd:
   309  000013                     ??_write_data:
   310  000013                     ?_ReadADC:
   311                           	opt stack 0
   312  000013                     ?___wmul:
   313                           	opt stack 0
   314  000013                     ?___lwdiv:
   315                           	opt stack 0
   316  000013                     IO_Buttons_configureIO@interrupt_priority:
   317                           	opt stack 0
   318  000013                     OpenADC@config2:
   319                           	opt stack 0
   320  000013                     WriteTimer0@timer0:
   321                           	opt stack 0
   322  000013                     ___wmul@multiplier:
   323                           	opt stack 0
   324  000013                     ___lwdiv@dividend:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x12
   328  000013                     	ds	1
   329  000014                     IO_Buttons_configureIO@use_interrupts:
   330                           	opt stack 0
   331  000014                     IO_Buttons_getButton@button:
   332                           	opt stack 0
   333  000014                     write_port@data:
   334                           	opt stack 0
   335  000014                     OpenADC@portconfig:
   336                           	opt stack 0
   337  000014                     SetChanADC@channel:
   338                           	opt stack 0
   339  000014                     Delay10KTCYx@unit:
   340                           	opt stack 0
   341  000014                     _isdigit$2281:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x13
   345  000014                     	ds	1
   346  000015                     ??_OpenADC:
   347  000015                     ??_ReadADC:
   348  000015                     write_cmd@cmd:
   349                           	opt stack 0
   350  000015                     write_data@data:
   351                           	opt stack 0
   352  000015                     isdigit@c:
   353                           	opt stack 0
   354  000015                     WriteTimer0@timer:
   355                           	opt stack 0
   356  000015                     ___wmul@multiplicand:
   357                           	opt stack 0
   358  000015                     ___lwdiv@divisor:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x14
   362  000015                     	ds	1
   363  000016                     ??_IO_LCD_Init:
   364  000016                     ??_IO_LCD_ClearDisplay:
   365  000016                     IO_LCD_SetCursor@col:
   366                           	opt stack 0
   367  000016                     IO_LCD_puts@str:
   368                           	opt stack 0
   369  000016                     IO_LCD_putrs@str:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x15
   373  000016                     	ds	1
   374  000017                     IO_LCD_SetCursor@row:
   375                           	opt stack 0
   376  000017                     TMR_SysTick_configure@interrupt_priority:
   377                           	opt stack 0
   378  000017                     OpenADC@config:
   379                           	opt stack 0
   380  000017                     ___lwdiv@counter:
   381                           	opt stack 0
   382  000017                     ___wmul@product:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x16
   386  000017                     	ds	1
   387  000018                     ??_IO_LCD_putrs:
   388  000018                     IO_LCD_puts@i:
   389                           	opt stack 0
   390  000018                     ___lwdiv@quotient:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x17
   394  000018                     	ds	2
   395  00001A                     ?___lwmod:
   396                           	opt stack 0
   397  00001A                     IO_LCD_putrs@i:
   398                           	opt stack 0
   399  00001A                     ___lwmod@dividend:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x19
   403  00001A                     	ds	2
   404  00001C                     ___lwmod@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x1B
   408  00001C                     	ds	2
   409  00001E                     ___lwmod@counter:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x1D
   413  00001E                     	ds	1
   414  00001F                     ?_sprintf:
   415                           	opt stack 0
   416  00001F                     sprintf@sp:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00001F                     	ds	2
   421  000021                     sprintf@f:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000021                     	ds	4
   426  000025                     ??_sprintf:
   427                           
   428                           ; 0 bytes @ 0x24
   429  000025                     	ds	4
   430  000029                     sprintf@prec:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x28
   434  000029                     	ds	1
   435  00002A                     sprintf@ap:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x29
   439  00002A                     	ds	2
   440  00002C                     sprintf@flag:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x2B
   444  00002C                     	ds	1
   445  00002D                     sprintf@val:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x2C
   449  00002D                     	ds	2
   450  00002F                     sprintf@width:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2E
   454  00002F                     	ds	2
   455  000031                     sprintf@c:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x30
   459  000031                     	ds	1
   460  000032                     ??_main:
   461                           
   462                           ; 0 bytes @ 0x31
   463  000032                     	ds	1
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467 ;;
   468 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   469 ;;
   470 ;; *************** function _main *****************
   471 ;; Defined at:
   472 ;;		line 39 in file "LED_driver_sig_control.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  buff           21    0[BANK0 ] unsigned char [21]
   477 ;;  adc_value       2   21[BANK0 ] unsigned int 
   478 ;;  count           1    0        unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;		None               void
   481 ;; Registers used:
   482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;Total ram usage:       24 bytes
   493 ;; Hardware stack levels required when called:    8
   494 ;; This function calls:
   495 ;;		_BusyADC
   496 ;;		_ConvertADC
   497 ;;		_Delay10KTCYx
   498 ;;		_IO_Buttons_configureIO
   499 ;;		_IO_Buttons_getButton
   500 ;;		_IO_LCD_ClearDisplay
   501 ;;		_IO_LCD_Init
   502 ;;		_IO_LCD_SetCursor
   503 ;;		_IO_LCD_configureIO
   504 ;;		_IO_LCD_putrs
   505 ;;		_IO_LCD_puts
   506 ;;		_IO_LED_configureIO
   507 ;;		_OpenADC
   508 ;;		_ReadADC
   509 ;;		_SetChanADC
   510 ;;		_TMR_SysTick_configure
   511 ;;		_sprintf
   512 ;; This function is called by:
   513 ;;		Startup code after reset
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text0
   518  001312                     __ptext0:
   519                           	opt stack 0
   520  001312                     _main:
   521                           	opt stack 23
   522                           
   523                           ;LED_driver_sig_control.c: 41: unsigned char count;
   524                           ;LED_driver_sig_control.c: 42: char buff[21];
   525                           ;LED_driver_sig_control.c: 43: unsigned int adc_value;
   526                           ;LED_driver_sig_control.c: 45: RCONbits.IPEN = 0;
   527                           
   528                           ;incstack = 0
   529  001312  9ED0               	bcf	4048,7,c	;volatile
   530                           
   531                           ;LED_driver_sig_control.c: 47: INTCONbits.PEIE = 0;
   532  001314  9CF2               	bcf	intcon,6,c	;volatile
   533                           
   534                           ;LED_driver_sig_control.c: 48: INTCONbits.GIE = 0;
   535  001316  9EF2               	bcf	intcon,7,c	;volatile
   536                           
   537                           ;LED_driver_sig_control.c: 50: LATGbits.LATG4 = 0;
   538  001318  988F               	bcf	3983,4,c	;volatile
   539                           
   540                           ;LED_driver_sig_control.c: 51: LATGbits.LATG3 = 0;
   541  00131A  968F               	bcf	3983,3,c	;volatile
   542                           
   543                           ;LED_driver_sig_control.c: 52: LATDbits.LATD3 = 0;
   544  00131C  968C               	bcf	3980,3,c	;volatile
   545                           
   546                           ;LED_driver_sig_control.c: 54: TRISGbits.TRISG4 = 0;
   547  00131E  9898               	bcf	3992,4,c	;volatile
   548                           
   549                           ;LED_driver_sig_control.c: 55: TRISGbits.TRISG3 = 0;
   550  001320  9698               	bcf	3992,3,c	;volatile
   551                           
   552                           ;LED_driver_sig_control.c: 56: TRISDbits.TRISD3 = 0;
   553  001322  9695               	bcf	3989,3,c	;volatile
   554                           
   555                           ;LED_driver_sig_control.c: 58: TRISBbits.TRISB2 = 1;
   556  001324  8493               	bsf	3987,2,c	;volatile
   557                           
   558                           ;LED_driver_sig_control.c: 59: TRISFbits.TRISF0 = 1;
   559  001326  8097               	bsf	3991,0,c	;volatile
   560                           
   561                           ;LED_driver_sig_control.c: 60: TRISFbits.TRISF1 = 1;
   562  001328  8297               	bsf	3991,1,c	;volatile
   563                           
   564                           ;LED_driver_sig_control.c: 62: sig_statuses.CHARGE = 0;
   565  00132A  923C               	bcf	_sig_statuses,1,c
   566                           
   567                           ;LED_driver_sig_control.c: 63: sig_statuses.DISCHARGE = 0;
   568  00132C  903C               	bcf	_sig_statuses,0,c
   569                           
   570                           ;LED_driver_sig_control.c: 64: sig_statuses.ENA = 0;
   571  00132E  943C               	bcf	_sig_statuses,2,c
   572                           
   573                           ;LED_driver_sig_control.c: 66: OpenADC(0b11011111 &
   574                           ;LED_driver_sig_control.c: 67: 0b11111111 &
   575                           ;LED_driver_sig_control.c: 68: 0b11110011,
   576                           ;LED_driver_sig_control.c: 69: 0b10000111 &
   577                           ;LED_driver_sig_control.c: 70: 0b01111111 &
   578                           ;LED_driver_sig_control.c: 71: 0b11111110 &
   579                           ;LED_driver_sig_control.c: 72: 0b11111101,
   580                           ;LED_driver_sig_control.c: 73: 8);
   581  001330  0E04               	movlw	4
   582  001332  6E13               	movwf	OpenADC@config2,c
   583  001334  0E08               	movlw	8
   584  001336  6E14               	movwf	OpenADC@portconfig,c
   585  001338  0ED3               	movlw	211
   586  00133A  ECBC  F00D         	call	_OpenADC
   587                           
   588                           ;LED_driver_sig_control.c: 75: SetChanADC(0b10101111);
   589  00133E  0EAF               	movlw	175
   590  001340  EC7D  F00F         	call	_SetChanADC
   591                           
   592                           ;LED_driver_sig_control.c: 77: TMR_SysTick_configure(0);
   593  001344  0E00               	movlw	0
   594  001346  EC01  F00F         	call	_TMR_SysTick_configure
   595                           
   596                           ;LED_driver_sig_control.c: 78: IO_Buttons_configureIO(0, 0);
   597  00134A  0E00               	movlw	0
   598  00134C  6E13               	movwf	IO_Buttons_configureIO@interrupt_priority,c
   599  00134E  0E00               	movlw	0
   600  001350  ECD2  F00E         	call	_IO_Buttons_configureIO
   601                           
   602                           ;LED_driver_sig_control.c: 79: IO_LED_configureIO();
   603  001354  EC9A  F00F         	call	_IO_LED_configureIO	;wreg free
   604                           
   605                           ;LED_driver_sig_control.c: 80: IO_LCD_configureIO();
   606  001358  EC59  F00F         	call	_IO_LCD_configureIO	;wreg free
   607                           
   608                           ;LED_driver_sig_control.c: 82: IO_LCD_Init();
   609  00135C  ECF5  F00B         	call	_IO_LCD_Init	;wreg free
   610                           
   611                           ;LED_driver_sig_control.c: 84: IO_LCD_putrs("LED Driver Module");
   612  001360  0E1E               	movlw	low STR_1
   613  001362  6E16               	movwf	IO_LCD_putrs@str,c
   614  001364  0E10               	movlw	high STR_1
   615  001366  6E17               	movwf	IO_LCD_putrs@str+1,c
   616  001368  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   617                           
   618                           ;LED_driver_sig_control.c: 85: IO_LCD_SetCursor(2,1);
   619  00136C  0E01               	movlw	1
   620  00136E  6E16               	movwf	IO_LCD_SetCursor@col,c
   621  001370  0E02               	movlw	2
   622  001372  EC48  F00E         	call	_IO_LCD_SetCursor
   623                           
   624                           ;LED_driver_sig_control.c: 86: IO_LCD_putrs("Signal Test");
   625  001376  0E3D               	movlw	low STR_2
   626  001378  6E16               	movwf	IO_LCD_putrs@str,c
   627  00137A  0E10               	movlw	high STR_2
   628  00137C  6E17               	movwf	IO_LCD_putrs@str+1,c
   629  00137E  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   630                           
   631                           ;LED_driver_sig_control.c: 88: Delay10KTCYx(250);
   632  001382  0EFA               	movlw	250
   633  001384  EC71  F00F         	call	_Delay10KTCYx
   634                           
   635                           ;LED_driver_sig_control.c: 90: IO_LCD_ClearDisplay();
   636  001388  EC65  F00F         	call	_IO_LCD_ClearDisplay	;wreg free
   637                           
   638                           ;LED_driver_sig_control.c: 92: if(PORTBbits.RB2 != 1) {
   639  00138C  B481               	btfsc	3969,2,c	;volatile
   640  00138E  D00B               	goto	l2760
   641                           
   642                           ;LED_driver_sig_control.c: 94: IO_LCD_putrs("Connect LED module");
   643  001390  0E0B               	movlw	low STR_3
   644  001392  6E16               	movwf	IO_LCD_putrs@str,c
   645  001394  0E10               	movlw	high STR_3
   646  001396  6E17               	movwf	IO_LCD_putrs@str+1,c
   647  001398  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   648                           
   649                           ;LED_driver_sig_control.c: 96: while(PORTBbits.RB2 != 1);
   650  00139C  D000               	goto	l360
   651  00139E                     l360:
   652  00139E  B481               	btfsc	3969,2,c	;volatile
   653  0013A0  D002               	goto	l2760
   654  0013A2  D7FD               	goto	l360
   655  0013A4  D000               	goto	l2760
   656  0013A6                     l2760:
   657                           
   658                           ;LED_driver_sig_control.c: 98: }
   659                           ;LED_driver_sig_control.c: 100: IO_LCD_ClearDisplay();
   660  0013A6  EC65  F00F         	call	_IO_LCD_ClearDisplay	;wreg free
   661  0013AA                     l363:
   662                           
   663                           ;LED_driver_sig_control.c: 104: IO_LCD_SetCursor(1,12);
   664  0013AA  0E0C               	movlw	12
   665  0013AC  6E16               	movwf	IO_LCD_SetCursor@col,c
   666  0013AE  0E01               	movlw	1
   667  0013B0  EC48  F00E         	call	_IO_LCD_SetCursor
   668                           
   669                           ;LED_driver_sig_control.c: 105: IO_LCD_putrs("CHARGE: 0");
   670  0013B4  0E33               	movlw	low (STR_5+3)
   671  0013B6  6E16               	movwf	IO_LCD_putrs@str,c
   672  0013B8  0E10               	movlw	high (STR_5+3)
   673  0013BA  6E17               	movwf	IO_LCD_putrs@str+1,c
   674  0013BC  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   675                           
   676                           ;LED_driver_sig_control.c: 107: IO_LCD_SetCursor(2,9);
   677  0013C0  0E09               	movlw	9
   678  0013C2  6E16               	movwf	IO_LCD_SetCursor@col,c
   679  0013C4  0E02               	movlw	2
   680  0013C6  EC48  F00E         	call	_IO_LCD_SetCursor
   681                           
   682                           ;LED_driver_sig_control.c: 108: IO_LCD_putrs("DISCHARGE: 0");
   683  0013CA  0E30               	movlw	low STR_5
   684  0013CC  6E16               	movwf	IO_LCD_putrs@str,c
   685  0013CE  0E10               	movlw	high STR_5
   686  0013D0  6E17               	movwf	IO_LCD_putrs@str+1,c
   687  0013D2  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   688                           
   689                           ;LED_driver_sig_control.c: 110: IO_LCD_SetCursor(3,11);
   690  0013D6  0E0B               	movlw	11
   691  0013D8  6E16               	movwf	IO_LCD_SetCursor@col,c
   692  0013DA  0E03               	movlw	3
   693  0013DC  EC48  F00E         	call	_IO_LCD_SetCursor
   694                           
   695                           ;LED_driver_sig_control.c: 111: IO_LCD_putrs("LED ENA: 0");
   696  0013E0  0E49               	movlw	low STR_6
   697  0013E2  6E16               	movwf	IO_LCD_putrs@str,c
   698  0013E4  0E10               	movlw	high STR_6
   699  0013E6  6E17               	movwf	IO_LCD_putrs@str+1,c
   700  0013E8  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   701                           
   702                           ;LED_driver_sig_control.c: 114: while(PORTBbits.RB2 == 1) {
   703  0013EC  D0D1               	goto	l2834
   704  0013EE                     l2770:
   705                           
   706                           ;LED_driver_sig_control.c: 116: SetChanADC(0b10101111);
   707  0013EE  0EAF               	movlw	175
   708  0013F0  EC7D  F00F         	call	_SetChanADC
   709                           
   710                           ;LED_driver_sig_control.c: 118: ConvertADC();
   711  0013F4  ECE4  F00F         	call	_ConvertADC	;wreg free
   712                           
   713                           ;LED_driver_sig_control.c: 119: while(BusyADC());
   714  0013F8  D000               	goto	l2774
   715  0013FA                     l2774:
   716  0013FA  ECBB  F00F         	call	_BusyADC	;wreg free
   717  0013FE  0900               	iorlw	0
   718  001400  A4D8               	btfss	status,2,c
   719  001402  D7FB               	goto	l2774
   720                           
   721                           ;LED_driver_sig_control.c: 120: adc_value = ReadADC();
   722  001404  ECAC  F00F         	call	_ReadADC	;wreg free
   723  001408  C013  F075         	movff	?_ReadADC,main@adc_value
   724  00140C  C014  F076         	movff	?_ReadADC+1,main@adc_value+1
   725                           
   726                           ;LED_driver_sig_control.c: 122: sprintf(buff, "LED:%4u", adc_value);
   727  001410  0E60               	movlw	low main@buff
   728  001412  6E1F               	movwf	sprintf@sp,c
   729  001414  0E00               	movlw	high main@buff
   730  001416  6E20               	movwf	sprintf@sp+1,c
   731  001418  0E54               	movlw	low STR_7
   732  00141A  6E21               	movwf	sprintf@f,c
   733  00141C  0E10               	movlw	high STR_7
   734  00141E  6E22               	movwf	sprintf@f+1,c
   735  001420  C075  F023         	movff	main@adc_value,?_sprintf+4
   736  001424  C076  F024         	movff	main@adc_value+1,?_sprintf+5
   737  001428  EC34  F008         	call	_sprintf	;wreg free
   738                           
   739                           ;LED_driver_sig_control.c: 123: IO_LCD_SetCursor(4,1);
   740  00142C  0E01               	movlw	1
   741  00142E  6E16               	movwf	IO_LCD_SetCursor@col,c
   742  001430  0E04               	movlw	4
   743  001432  EC48  F00E         	call	_IO_LCD_SetCursor
   744                           
   745                           ;LED_driver_sig_control.c: 124: IO_LCD_puts(buff);
   746  001436  0E60               	movlw	low main@buff
   747  001438  6E16               	movwf	IO_LCD_puts@str,c
   748  00143A  0E00               	movlw	high main@buff
   749  00143C  6E17               	movwf	IO_LCD_puts@str+1,c
   750  00143E  ECB6  F00E         	call	_IO_LCD_puts	;wreg free
   751                           
   752                           ;LED_driver_sig_control.c: 126: SetChanADC(0b10110111);
   753  001442  0EB7               	movlw	183
   754  001444  EC7D  F00F         	call	_SetChanADC
   755                           
   756                           ;LED_driver_sig_control.c: 128: ConvertADC();
   757  001448  ECE4  F00F         	call	_ConvertADC	;wreg free
   758                           
   759                           ;LED_driver_sig_control.c: 129: while(BusyADC());
   760  00144C  D000               	goto	l2788
   761  00144E                     l2788:
   762  00144E  ECBB  F00F         	call	_BusyADC	;wreg free
   763  001452  0900               	iorlw	0
   764  001454  A4D8               	btfss	status,2,c
   765  001456  D7FB               	goto	l2788
   766                           
   767                           ;LED_driver_sig_control.c: 130: adc_value = ReadADC();
   768  001458  ECAC  F00F         	call	_ReadADC	;wreg free
   769  00145C  C013  F075         	movff	?_ReadADC,main@adc_value
   770  001460  C014  F076         	movff	?_ReadADC+1,main@adc_value+1
   771                           
   772                           ;LED_driver_sig_control.c: 132: sprintf(buff, "CAP:%4u", adc_value);
   773  001464  0E60               	movlw	low main@buff
   774  001466  6E1F               	movwf	sprintf@sp,c
   775  001468  0E00               	movlw	high main@buff
   776  00146A  6E20               	movwf	sprintf@sp+1,c
   777  00146C  0E5C               	movlw	low STR_8
   778  00146E  6E21               	movwf	sprintf@f,c
   779  001470  0E10               	movlw	high STR_8
   780  001472  6E22               	movwf	sprintf@f+1,c
   781  001474  C075  F023         	movff	main@adc_value,?_sprintf+4
   782  001478  C076  F024         	movff	main@adc_value+1,?_sprintf+5
   783  00147C  EC34  F008         	call	_sprintf	;wreg free
   784                           
   785                           ;LED_driver_sig_control.c: 133: IO_LCD_SetCursor(4,10);
   786  001480  0E0A               	movlw	10
   787  001482  6E16               	movwf	IO_LCD_SetCursor@col,c
   788  001484  0E04               	movlw	4
   789  001486  EC48  F00E         	call	_IO_LCD_SetCursor
   790                           
   791                           ;LED_driver_sig_control.c: 134: IO_LCD_puts(buff);
   792  00148A  0E60               	movlw	low main@buff
   793  00148C  6E16               	movwf	IO_LCD_puts@str,c
   794  00148E  0E00               	movlw	high main@buff
   795  001490  6E17               	movwf	IO_LCD_puts@str+1,c
   796  001492  ECB6  F00E         	call	_IO_LCD_puts	;wreg free
   797                           
   798                           ;LED_driver_sig_control.c: 136: if(IO_Buttons_getButton(PB_1) == 1) {
   799  001496  0E00               	movlw	0
   800  001498  EC86  F00D         	call	_IO_Buttons_getButton
   801  00149C  06E8               	decf	wreg,f,c
   802  00149E  A4D8               	btfss	status,2,c
   803  0014A0  D023               	goto	l2810
   804                           
   805                           ;LED_driver_sig_control.c: 138: if(sig_statuses.DISCHARGE != 1) {
   806  0014A2  B03C               	btfsc	_sig_statuses,0,c
   807  0014A4  D071               	goto	l2832
   808                           
   809                           ;LED_driver_sig_control.c: 139: LATGbits.LATG3 ^= 1;
   810  0014A6  768F               	btg	3983,3,c	;volatile
   811                           
   812                           ;LED_driver_sig_control.c: 140: sig_statuses.CHARGE ^= 1;
   813  0014A8  723C               	btg	_sig_statuses,1,c
   814                           
   815                           ;LED_driver_sig_control.c: 141: sprintf(buff, "%d", sig_statuses.CHARGE);
   816  0014AA  0E60               	movlw	low main@buff
   817  0014AC  6E1F               	movwf	sprintf@sp,c
   818  0014AE  0E00               	movlw	high main@buff
   819  0014B0  6E20               	movwf	sprintf@sp+1,c
   820  0014B2  0E64               	movlw	low STR_9
   821  0014B4  6E21               	movwf	sprintf@f,c
   822  0014B6  0E10               	movlw	high STR_9
   823  0014B8  6E22               	movwf	sprintf@f+1,c
   824  0014BA  A23C               	btfss	_sig_statuses,1,c
   825  0014BC  D003               	goto	u2520
   826  0014BE  6A32               	clrf	??_main& (0+255),c
   827  0014C0  2A32               	incf	??_main& (0+255),f,c
   828  0014C2  D001               	goto	u2528
   829  0014C4                     u2520:
   830  0014C4  6A32               	clrf	??_main& (0+255),c
   831  0014C6                     u2528:
   832  0014C6  5032               	movf	??_main,w,c
   833  0014C8  6E23               	movwf	?_sprintf+4,c
   834  0014CA  6A24               	clrf	?_sprintf+5,c
   835  0014CC  EC34  F008         	call	_sprintf	;wreg free
   836                           
   837                           ;LED_driver_sig_control.c: 143: IO_LCD_SetCursor(1,20);
   838  0014D0  0E14               	movlw	20
   839  0014D2  6E16               	movwf	IO_LCD_SetCursor@col,c
   840  0014D4  0E01               	movlw	1
   841  0014D6  EC48  F00E         	call	_IO_LCD_SetCursor
   842                           
   843                           ;LED_driver_sig_control.c: 144: IO_LCD_puts(buff);
   844  0014DA  0E60               	movlw	low main@buff
   845  0014DC  6E16               	movwf	IO_LCD_puts@str,c
   846  0014DE  0E00               	movlw	high main@buff
   847  0014E0  6E17               	movwf	IO_LCD_puts@str+1,c
   848  0014E2  ECB6  F00E         	call	_IO_LCD_puts	;wreg free
   849                           
   850                           ;LED_driver_sig_control.c: 145: }
   851                           ;LED_driver_sig_control.c: 149: }
   852  0014E6  D050               	goto	l2832
   853  0014E8                     l2810:
   854                           
   855                           ;LED_driver_sig_control.c: 151: else if(IO_Buttons_getButton(PB_2) == 1) {
   856  0014E8  0E01               	movlw	1
   857  0014EA  EC86  F00D         	call	_IO_Buttons_getButton
   858  0014EE  06E8               	decf	wreg,f,c
   859  0014F0  A4D8               	btfss	status,2,c
   860  0014F2  D023               	goto	l2822
   861                           
   862                           ;LED_driver_sig_control.c: 153: if(sig_statuses.CHARGE != 1) {
   863  0014F4  B23C               	btfsc	_sig_statuses,1,c
   864  0014F6  D048               	goto	l2832
   865                           
   866                           ;LED_driver_sig_control.c: 154: LATGbits.LATG4 ^= 1;
   867  0014F8  788F               	btg	3983,4,c	;volatile
   868                           
   869                           ;LED_driver_sig_control.c: 155: sig_statuses.DISCHARGE ^= 1;
   870  0014FA  703C               	btg	_sig_statuses,0,c
   871                           
   872                           ;LED_driver_sig_control.c: 156: sprintf(buff, "%d", sig_statuses.DISCHARGE);
   873  0014FC  0E60               	movlw	low main@buff
   874  0014FE  6E1F               	movwf	sprintf@sp,c
   875  001500  0E00               	movlw	high main@buff
   876  001502  6E20               	movwf	sprintf@sp+1,c
   877  001504  0E64               	movlw	low STR_9
   878  001506  6E21               	movwf	sprintf@f,c
   879  001508  0E10               	movlw	high STR_9
   880  00150A  6E22               	movwf	sprintf@f+1,c
   881  00150C  A03C               	btfss	_sig_statuses,0,c
   882  00150E  D003               	goto	u2550
   883  001510  6A32               	clrf	??_main& (0+255),c
   884  001512  2A32               	incf	??_main& (0+255),f,c
   885  001514  D001               	goto	u2558
   886  001516                     u2550:
   887  001516  6A32               	clrf	??_main& (0+255),c
   888  001518                     u2558:
   889  001518  5032               	movf	??_main,w,c
   890  00151A  6E23               	movwf	?_sprintf+4,c
   891  00151C  6A24               	clrf	?_sprintf+5,c
   892  00151E  EC34  F008         	call	_sprintf	;wreg free
   893                           
   894                           ;LED_driver_sig_control.c: 158: IO_LCD_SetCursor(2,20);
   895  001522  0E14               	movlw	20
   896  001524  6E16               	movwf	IO_LCD_SetCursor@col,c
   897  001526  0E02               	movlw	2
   898  001528  EC48  F00E         	call	_IO_LCD_SetCursor
   899                           
   900                           ;LED_driver_sig_control.c: 159: IO_LCD_puts(buff);
   901  00152C  0E60               	movlw	low main@buff
   902  00152E  6E16               	movwf	IO_LCD_puts@str,c
   903  001530  0E00               	movlw	high main@buff
   904  001532  6E17               	movwf	IO_LCD_puts@str+1,c
   905  001534  ECB6  F00E         	call	_IO_LCD_puts	;wreg free
   906                           
   907                           ;LED_driver_sig_control.c: 160: }
   908                           ;LED_driver_sig_control.c: 164: }
   909  001538  D027               	goto	l2832
   910  00153A                     l2822:
   911                           
   912                           ;LED_driver_sig_control.c: 166: else if(IO_Buttons_getButton(PB_3) == 1) {
   913  00153A  0E02               	movlw	2
   914  00153C  EC86  F00D         	call	_IO_Buttons_getButton
   915  001540  06E8               	decf	wreg,f,c
   916  001542  A4D8               	btfss	status,2,c
   917  001544  D021               	goto	l2832
   918                           
   919                           ;LED_driver_sig_control.c: 168: LATDbits.LATD3 ^= 1;
   920  001546  768C               	btg	3980,3,c	;volatile
   921                           
   922                           ;LED_driver_sig_control.c: 169: sig_statuses.ENA ^= 1;
   923  001548  743C               	btg	_sig_statuses,2,c
   924                           
   925                           ;LED_driver_sig_control.c: 170: sprintf(buff, "%d", sig_statuses.ENA);
   926  00154A  0E60               	movlw	low main@buff
   927  00154C  6E1F               	movwf	sprintf@sp,c
   928  00154E  0E00               	movlw	high main@buff
   929  001550  6E20               	movwf	sprintf@sp+1,c
   930  001552  0E64               	movlw	low STR_9
   931  001554  6E21               	movwf	sprintf@f,c
   932  001556  0E10               	movlw	high STR_9
   933  001558  6E22               	movwf	sprintf@f+1,c
   934  00155A  A43C               	btfss	_sig_statuses,2,c
   935  00155C  D003               	goto	u2570
   936  00155E  6A32               	clrf	??_main& (0+255),c
   937  001560  2A32               	incf	??_main& (0+255),f,c
   938  001562  D001               	goto	u2578
   939  001564                     u2570:
   940  001564  6A32               	clrf	??_main& (0+255),c
   941  001566                     u2578:
   942  001566  5032               	movf	??_main,w,c
   943  001568  6E23               	movwf	?_sprintf+4,c
   944  00156A  6A24               	clrf	?_sprintf+5,c
   945  00156C  EC34  F008         	call	_sprintf	;wreg free
   946                           
   947                           ;LED_driver_sig_control.c: 172: IO_LCD_SetCursor(3,20);
   948  001570  0E14               	movlw	20
   949  001572  6E16               	movwf	IO_LCD_SetCursor@col,c
   950  001574  0E03               	movlw	3
   951  001576  EC48  F00E         	call	_IO_LCD_SetCursor
   952                           
   953                           ;LED_driver_sig_control.c: 173: IO_LCD_puts(buff);
   954  00157A  0E60               	movlw	low main@buff
   955  00157C  6E16               	movwf	IO_LCD_puts@str,c
   956  00157E  0E00               	movlw	high main@buff
   957  001580  6E17               	movwf	IO_LCD_puts@str+1,c
   958  001582  ECB6  F00E         	call	_IO_LCD_puts	;wreg free
   959  001586  D000               	goto	l2832
   960  001588                     l2832:
   961                           
   962                           ;LED_driver_sig_control.c: 175: }
   963                           ;LED_driver_sig_control.c: 178: Delay10KTCYx(10);
   964  001588  0E0A               	movlw	10
   965  00158A  EC71  F00F         	call	_Delay10KTCYx
   966  00158E  D000               	goto	l2834
   967  001590                     l2834:
   968  001590  B481               	btfsc	3969,2,c	;volatile
   969  001592  D72D               	goto	l2770
   970                           
   971                           ;LED_driver_sig_control.c: 180: }
   972                           ;LED_driver_sig_control.c: 182: IO_LCD_ClearDisplay();
   973  001594  EC65  F00F         	call	_IO_LCD_ClearDisplay	;wreg free
   974                           
   975                           ;LED_driver_sig_control.c: 183: IO_LCD_putrs("Connect LED module");
   976  001598  0E0B               	movlw	low STR_3
   977  00159A  6E16               	movwf	IO_LCD_putrs@str,c
   978  00159C  0E10               	movlw	high STR_3
   979  00159E  6E17               	movwf	IO_LCD_putrs@str+1,c
   980  0015A0  ECEB  F00D         	call	_IO_LCD_putrs	;wreg free
   981                           
   982                           ;LED_driver_sig_control.c: 185: while(PORTBbits.RB2 != 1);
   983  0015A4  D000               	goto	l380
   984  0015A6                     l380:
   985  0015A6  B481               	btfsc	3969,2,c	;volatile
   986  0015A8  D700               	goto	l363
   987  0015AA  D7FD               	goto	l380
   988  0015AC  D6FE               	goto	l363
   989  0015AE  EF0C  F000         	goto	start
   990  0015B2                     __end_of_main:
   991                           	opt stack 0
   992                           intcon	equ	0xFF2
   993                           postinc0	equ	0xFEE
   994                           wreg	equ	0xFE8
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _sprintf *****************
   998 ;; Defined at:
   999 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  sp              2   30[COMRAM] PTR unsigned char 
  1002 ;;		 -> main@buff(21), 
  1003 ;;  f               2   32[COMRAM] PTR const unsigned char 
  1004 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(8), 
  1005 ;;		 -> STR_7(8), 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  tmpval          4    0        struct .
  1008 ;;  cp              3    0        PTR const unsigned char 
  1009 ;;  width           2   46[COMRAM] int 
  1010 ;;  val             2   44[COMRAM] unsigned int 
  1011 ;;  ap              2   41[COMRAM] PTR void [1]
  1012 ;;		 -> ?_sprintf(2), 
  1013 ;;  len             2    0        unsigned int 
  1014 ;;  c               1   48[COMRAM] char 
  1015 ;;  flag            1   43[COMRAM] unsigned char 
  1016 ;;  prec            1   40[COMRAM] char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2   30[COMRAM] int 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:       19 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    5
  1033 ;; This function calls:
  1034 ;;		___lwdiv
  1035 ;;		___lwmod
  1036 ;;		___wmul
  1037 ;;		_isdigit
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text1
  1044  001068                     __ptext1:
  1045                           	opt stack 0
  1046  001068                     _sprintf:
  1047                           	opt stack 25
  1048                           
  1049                           ;doprnt.c: 494: va_list ap;
  1050                           ;doprnt.c: 499: signed char c;
  1051                           ;doprnt.c: 501: int width;
  1052                           ;doprnt.c: 506: signed char prec;
  1053                           ;doprnt.c: 508: unsigned char flag;
  1054                           ;doprnt.c: 523: union {
  1055                           ;doprnt.c: 524: unsigned long vd;
  1056                           ;doprnt.c: 525: double integ;
  1057                           ;doprnt.c: 526: } tmpval;
  1058                           ;doprnt.c: 528: unsigned int val;
  1059                           ;doprnt.c: 529: unsigned len;
  1060                           ;doprnt.c: 530: const char * cp;
  1061                           ;doprnt.c: 533: *ap = __va_start();
  1062                           
  1063                           ;incstack = 0
  1064  001068  0E23               	movlw	low (?_sprintf+4)
  1065  00106A  6E2A               	movwf	sprintf@ap,c
  1066  00106C  0E00               	movlw	high (?_sprintf+4)
  1067  00106E  6E2B               	movwf	sprintf@ap+1,c
  1068                           
  1069                           ;doprnt.c: 536: while(c = *f++) {
  1070  001070  D138               	goto	l2636
  1071  001072                     l2546:
  1072                           
  1073                           ;doprnt.c: 538: if(c != '%')
  1074  001072  0E25               	movlw	37
  1075  001074  1831               	xorwf	sprintf@c,w,c
  1076  001076  B4D8               	btfsc	status,2,c
  1077  001078  D009               	goto	l2552
  1078                           
  1079                           ;doprnt.c: 540: {
  1080                           ;doprnt.c: 541: ((*sp++ = (c)));
  1081  00107A  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1082  00107E  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1083  001082  C031  FFDF         	movff	sprintf@c,indf2
  1084  001086  4A1F               	infsnz	sprintf@sp,f,c
  1085  001088  2A20               	incf	sprintf@sp+1,f,c
  1086                           
  1087                           ;doprnt.c: 542: continue;
  1088  00108A  D12B               	goto	l2636
  1089  00108C                     l2552:
  1090                           
  1091                           ;doprnt.c: 543: }
  1092                           ;doprnt.c: 546: width = 0;
  1093  00108C  0E00               	movlw	0
  1094  00108E  6E30               	movwf	sprintf@width+1,c
  1095  001090  0E00               	movlw	0
  1096  001092  6E2F               	movwf	sprintf@width,c
  1097                           
  1098                           ;doprnt.c: 548: flag = 0;
  1099  001094  0E00               	movlw	0
  1100  001096  6E2C               	movwf	sprintf@flag,c
  1101                           
  1102                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1103  001098  C021  FFF6         	movff	sprintf@f,tblptrl
  1104  00109C  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1105  0010A0                     	if	0	;tblptru may be non-zero
  1106  0010A0                     	endif
  1107  0010A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1108  0010A0  0E00               	movlw	low (__mediumconst shr (0+16))
  1109  0010A2  6EF8               	movwf	tblptru,c
  1110  0010A4                     	endif
  1111  0010A4  0008               	tblrd		*
  1112  0010A6  50F5               	movf	tablat,w,c
  1113  0010A8  EC39  F00F         	call	_isdigit
  1114  0010AC  A0D8               	btfss	status,0,c
  1115  0010AE  D03E               	goto	l2570
  1116                           
  1117                           ;doprnt.c: 598: width = 0;
  1118  0010B0  0E00               	movlw	0
  1119  0010B2  6E30               	movwf	sprintf@width+1,c
  1120  0010B4  0E00               	movlw	0
  1121  0010B6  6E2F               	movwf	sprintf@width,c
  1122  0010B8  D000               	goto	l2558
  1123  0010BA                     l2558:
  1124                           
  1125                           ;doprnt.c: 600: width *= 10;
  1126  0010BA  C02F  F013         	movff	sprintf@width,___wmul@multiplier
  1127  0010BE  C030  F014         	movff	sprintf@width+1,___wmul@multiplier+1
  1128  0010C2  0E00               	movlw	0
  1129  0010C4  6E16               	movwf	___wmul@multiplicand+1,c
  1130  0010C6  0E0A               	movlw	10
  1131  0010C8  6E15               	movwf	___wmul@multiplicand,c
  1132  0010CA  ECED  F00E         	call	___wmul	;wreg free
  1133  0010CE  C013  F02F         	movff	?___wmul,sprintf@width
  1134  0010D2  C014  F030         	movff	?___wmul+1,sprintf@width+1
  1135                           
  1136                           ;doprnt.c: 601: width += *f++ - '0';
  1137  0010D6  0ED0               	movlw	208
  1138  0010D8  6E25               	movwf	??_sprintf& (0+255),c
  1139  0010DA  0EFF               	movlw	255
  1140  0010DC  6E26               	movwf	(??_sprintf+1)& (0+255),c
  1141  0010DE  C021  FFF6         	movff	sprintf@f,tblptrl
  1142  0010E2  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1143  0010E6                     	if	0	;tblptru may be non-zero
  1144  0010E6                     	endif
  1145  0010E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1146  0010E6  0E00               	movlw	low (__mediumconst shr (0+16))
  1147  0010E8  6EF8               	movwf	tblptru,c
  1148  0010EA                     	endif
  1149  0010EA  0008               	tblrd		*
  1150  0010EC  50F5               	movf	tablat,w,c
  1151  0010EE  6E27               	movwf	(??_sprintf+2)& (0+255),c
  1152  0010F0  6A28               	clrf	(??_sprintf+3)& (0+255),c
  1153  0010F2  5025               	movf	??_sprintf,w,c
  1154  0010F4  2627               	addwf	??_sprintf+2,f,c
  1155  0010F6  5026               	movf	??_sprintf+1,w,c
  1156  0010F8  2228               	addwfc	??_sprintf+3,f,c
  1157  0010FA  5027               	movf	??_sprintf+2,w,c
  1158  0010FC  262F               	addwf	sprintf@width,f,c
  1159  0010FE  5028               	movf	??_sprintf+3,w,c
  1160  001100  2230               	addwfc	sprintf@width+1,f,c
  1161  001102  4A21               	infsnz	sprintf@f,f,c
  1162  001104  2A22               	incf	sprintf@f+1,f,c
  1163                           
  1164                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1165  001106  C021  FFF6         	movff	sprintf@f,tblptrl
  1166  00110A  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1167  00110E                     	if	0	;tblptru may be non-zero
  1168  00110E                     	endif
  1169  00110E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1170  00110E  0E00               	movlw	low (__mediumconst shr (0+16))
  1171  001110  6EF8               	movwf	tblptru,c
  1172  001112                     	endif
  1173  001112  0008               	tblrd		*
  1174  001114  50F5               	movf	tablat,w,c
  1175  001116  EC39  F00F         	call	_isdigit
  1176  00111A  A0D8               	btfss	status,0,c
  1177  00111C  D007               	goto	l2570
  1178  00111E  D7CD               	goto	l2558
  1179                           
  1180                           ;doprnt.c: 608: }
  1181                           ;doprnt.c: 635: switch(c = *f++) {
  1182  001120  D005               	goto	l2570
  1183                           
  1184                           ;doprnt.c: 638: goto alldone;
  1185                           
  1186                           ;doprnt.c: 637: case 0:
  1187  001122  D0EF               	goto	l2638
  1188                           
  1189                           ;doprnt.c: 698: case 'i':
  1190                           ;doprnt.c: 699: break;
  1191                           
  1192                           ;doprnt.c: 697: case 'd':
  1193  001124  D01C               	goto	l407
  1194                           
  1195                           ;doprnt.c: 813: continue;
  1196                           
  1197                           ;doprnt.c: 802: default:
  1198  001126  D0DD               	goto	l2636
  1199  001128                     l2566:
  1200                           
  1201                           ;doprnt.c: 818: flag |= 0x40;
  1202  001128  8C2C               	bsf	sprintf@flag,6,c
  1203                           
  1204                           ;doprnt.c: 822: }
  1205                           
  1206                           ;doprnt.c: 819: break;
  1207  00112A  D019               	goto	l407
  1208  00112C                     l2570:
  1209  00112C  C021  FFF6         	movff	sprintf@f,tblptrl
  1210  001130  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1211  001134  4A21               	infsnz	sprintf@f,f,c
  1212  001136  2A22               	incf	sprintf@f+1,f,c
  1213  001138                     	if	0	;tblptru may be non-zero
  1214  001138                     	endif
  1215  001138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1216  001138  0E00               	movlw	low (__mediumconst shr (0+16))
  1217  00113A  6EF8               	movwf	tblptru,c
  1218  00113C                     	endif
  1219  00113C  0008               	tblrd		*
  1220  00113E  CFF5 F031          	movff	tablat,sprintf@c
  1221  001142  5031               	movf	sprintf@c,w,c
  1222                           
  1223                           ; Switch size 1, requested type "space"
  1224                           ; Number of cases is 4, Range of values is 0 to 117
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           13     7 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229  001144  0A00               	xorlw	0	; case 0
  1230  001146  B4D8               	btfsc	status,2,c
  1231  001148  D0DC               	goto	l2638
  1232  00114A  0A64               	xorlw	100	; case 100
  1233  00114C  B4D8               	btfsc	status,2,c
  1234  00114E  D007               	goto	l407
  1235  001150  0A0D               	xorlw	13	; case 105
  1236  001152  B4D8               	btfsc	status,2,c
  1237  001154  D004               	goto	l407
  1238  001156  0A1C               	xorlw	28	; case 117
  1239  001158  B4D8               	btfsc	status,2,c
  1240  00115A  D7E6               	goto	l2566
  1241  00115C  D0C2               	goto	l2636
  1242  00115E                     l407:
  1243                           
  1244                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1245  00115E  BC2C               	btfsc	sprintf@flag,6,c
  1246  001160  D015               	goto	l2582
  1247                           
  1248                           ;doprnt.c: 1253: {
  1249                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1250  001162  C02A  FFD9         	movff	sprintf@ap,fsr2l
  1251  001166  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  1252  00116A  CFDE F02D          	movff	postinc2,sprintf@val
  1253  00116E  CFDD F02E          	movff	postdec2,sprintf@val+1
  1254  001172  0E02               	movlw	2
  1255  001174  262A               	addwf	sprintf@ap,f,c
  1256  001176  0E00               	movlw	0
  1257  001178  222B               	addwfc	sprintf@ap+1,f,c
  1258                           
  1259                           ;doprnt.c: 1261: if((int)val < 0) {
  1260  00117A  AE2E               	btfss	sprintf@val+1,7,c
  1261  00117C  D014               	goto	l2586
  1262                           
  1263                           ;doprnt.c: 1262: flag |= 0x03;
  1264  00117E  0E03               	movlw	3
  1265  001180  122C               	iorwf	sprintf@flag,f,c
  1266                           
  1267                           ;doprnt.c: 1263: val = -val;
  1268  001182  6C2D               	negf	sprintf@val,c
  1269  001184  1E2E               	comf	sprintf@val+1,f,c
  1270  001186  B0D8               	btfsc	status,0,c
  1271  001188  2A2E               	incf	sprintf@val+1,f,c
  1272                           
  1273                           ;doprnt.c: 1264: }
  1274                           ;doprnt.c: 1266: }
  1275  00118A  D00D               	goto	l2586
  1276  00118C                     l2582:
  1277                           
  1278                           ;doprnt.c: 1268: else
  1279                           ;doprnt.c: 1273: {
  1280                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1281  00118C  C02A  FFD9         	movff	sprintf@ap,fsr2l
  1282  001190  C02B  FFDA         	movff	sprintf@ap+1,fsr2h
  1283  001194  CFDE F02D          	movff	postinc2,sprintf@val
  1284  001198  CFDD F02E          	movff	postdec2,sprintf@val+1
  1285  00119C  0E02               	movlw	2
  1286  00119E  262A               	addwf	sprintf@ap,f,c
  1287  0011A0  0E00               	movlw	0
  1288  0011A2  222B               	addwfc	sprintf@ap+1,f,c
  1289  0011A4  D000               	goto	l2586
  1290  0011A6                     l2586:
  1291                           
  1292                           ;doprnt.c: 1287: }
  1293                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1294  0011A6  0E01               	movlw	1
  1295  0011A8  6E31               	movwf	sprintf@c,c
  1296  0011AA                     l2588:
  1297  0011AA  0E05               	movlw	5
  1298  0011AC  1831               	xorwf	sprintf@c,w,c
  1299  0011AE  B4D8               	btfsc	status,2,c
  1300  0011B0  D019               	goto	l2600
  1301  0011B2  D001               	goto	l2592
  1302  0011B4  D017               	goto	l2600
  1303  0011B6                     l2592:
  1304                           
  1305                           ;doprnt.c: 1306: if(val < dpowers[c])
  1306  0011B6  5031               	movf	sprintf@c,w,c
  1307  0011B8  0D02               	mullw	2
  1308  0011BA  0E01               	movlw	low _dpowers
  1309  0011BC  24F3               	addwf	prodl,w,c
  1310  0011BE  6EF6               	movwf	tblptrl,c
  1311  0011C0  0E10               	movlw	high _dpowers
  1312  0011C2  20F4               	addwfc	prodh,w,c
  1313  0011C4  6EF7               	movwf	tblptrh,c
  1314  0011C6                     	if	1	;There are 3 active tblptr bytes
  1315  0011C6  6AF8               	clrf	tblptru,c
  1316  0011C8  0E00               	movlw	low (__mediumconst shr (0+16))
  1317  0011CA  22F8               	addwfc	tblptru,f,c
  1318  0011CC                     	endif
  1319  0011CC  0009               	tblrd		*+
  1320  0011CE  50F5               	movf	tablat,w,c
  1321  0011D0  5C2D               	subwf	sprintf@val,w,c
  1322  0011D2  0009               	tblrd		*+
  1323  0011D4  50F5               	movf	tablat,w,c
  1324  0011D6  582E               	subwfb	sprintf@val+1,w,c
  1325  0011D8  A0D8               	btfss	status,0,c
  1326  0011DA  D004               	goto	l2600
  1327  0011DC  D001               	goto	l2596
  1328                           
  1329                           ;doprnt.c: 1307: break;
  1330  0011DE  D002               	goto	l2600
  1331  0011E0                     l2596:
  1332  0011E0  2A31               	incf	sprintf@c,f,c
  1333  0011E2  D7E3               	goto	l2588
  1334  0011E4                     l2600:
  1335                           
  1336                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1337  0011E4  502F               	movf	sprintf@width,w,c
  1338  0011E6  1030               	iorwf	sprintf@width+1,w,c
  1339  0011E8  B4D8               	btfsc	status,2,c
  1340  0011EA  D00A               	goto	l2606
  1341  0011EC  C02C  F025         	movff	sprintf@flag,??_sprintf
  1342  0011F0  0E03               	movlw	3
  1343  0011F2  1625               	andwf	??_sprintf,f,c
  1344  0011F4  B4D8               	btfsc	status,2,c
  1345  0011F6  D004               	goto	l2606
  1346                           
  1347                           ;doprnt.c: 1346: width--;
  1348  0011F8  062F               	decf	sprintf@width,f,c
  1349  0011FA  A0D8               	btfss	status,0,c
  1350  0011FC  0630               	decf	sprintf@width+1,f,c
  1351  0011FE  D000               	goto	l2606
  1352  001200                     l2606:
  1353                           
  1354                           ;doprnt.c: 1381: if(width > c)
  1355  001200  0E80               	movlw	128
  1356  001202  BE31               	btfsc	sprintf@c,7,c
  1357  001204  0E7F               	movlw	127
  1358  001206  6E25               	movwf	??_sprintf& (0+255),c
  1359  001208  502F               	movf	sprintf@width,w,c
  1360  00120A  5C31               	subwf	sprintf@c,w,c
  1361  00120C  5030               	movf	sprintf@width+1,w,c
  1362  00120E  0A80               	xorlw	128
  1363  001210  5825               	subwfb	??_sprintf& (0+255),w,c
  1364  001212  B0D8               	btfsc	status,0,c
  1365  001214  D007               	goto	l2610
  1366                           
  1367                           ;doprnt.c: 1382: width -= c;
  1368  001216  5031               	movf	sprintf@c,w,c
  1369  001218  5E2F               	subwf	sprintf@width,f,c
  1370  00121A  0E00               	movlw	0
  1371  00121C  BE31               	btfsc	sprintf@c,7,c
  1372  00121E  0EFF               	movlw	255
  1373  001220  5A30               	subwfb	sprintf@width+1,f,c
  1374  001222  D005               	goto	l2612
  1375  001224                     l2610:
  1376                           
  1377                           ;doprnt.c: 1383: else
  1378                           ;doprnt.c: 1384: width = 0;
  1379  001224  0E00               	movlw	0
  1380  001226  6E30               	movwf	sprintf@width+1,c
  1381  001228  0E00               	movlw	0
  1382  00122A  6E2F               	movwf	sprintf@width,c
  1383  00122C  D000               	goto	l2612
  1384  00122E                     l2612:
  1385                           
  1386                           ;doprnt.c: 1422: {
  1387                           ;doprnt.c: 1424: if(width
  1388                           ;doprnt.c: 1428: )
  1389  00122E  502F               	movf	sprintf@width,w,c
  1390  001230  1030               	iorwf	sprintf@width+1,w,c
  1391  001232  B4D8               	btfsc	status,2,c
  1392  001234  D011               	goto	l2620
  1393  001236                     l2614:
  1394                           
  1395                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1396  001236  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1397  00123A  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1398  00123E  0E20               	movlw	32
  1399  001240  6EDF               	movwf	indf2,c
  1400  001242  4A1F               	infsnz	sprintf@sp,f,c
  1401  001244  2A20               	incf	sprintf@sp+1,f,c
  1402                           
  1403                           ;doprnt.c: 1431: while(--width);
  1404  001246  062F               	decf	sprintf@width,f,c
  1405  001248  A0D8               	btfss	status,0,c
  1406  00124A  0630               	decf	sprintf@width+1,f,c
  1407  00124C  502F               	movf	sprintf@width,w,c
  1408  00124E  1030               	iorwf	sprintf@width+1,w,c
  1409  001250  B4D8               	btfsc	status,2,c
  1410  001252  D002               	goto	l2620
  1411  001254  D7F0               	goto	l2614
  1412  001256  D000               	goto	l2620
  1413  001258                     l2620:
  1414                           
  1415                           ;doprnt.c: 1438: if(flag & 0x03)
  1416  001258  C02C  F025         	movff	sprintf@flag,??_sprintf
  1417  00125C  0E03               	movlw	3
  1418  00125E  1625               	andwf	??_sprintf,f,c
  1419  001260  B4D8               	btfsc	status,2,c
  1420  001262  D009               	goto	l2626
  1421                           
  1422                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1423  001264  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1424  001268  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1425  00126C  0E2D               	movlw	45
  1426  00126E  6EDF               	movwf	indf2,c
  1427  001270  4A1F               	infsnz	sprintf@sp,f,c
  1428  001272  2A20               	incf	sprintf@sp+1,f,c
  1429  001274  D000               	goto	l2626
  1430  001276                     l2626:
  1431                           
  1432                           ;doprnt.c: 1469: }
  1433                           ;doprnt.c: 1472: prec = c;
  1434  001276  C031  F029         	movff	sprintf@c,sprintf@prec
  1435                           
  1436                           ;doprnt.c: 1474: while(prec--) {
  1437  00127A  D02D               	goto	l2634
  1438  00127C                     l2628:
  1439                           
  1440                           ;doprnt.c: 1478: {
  1441                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1442  00127C  5029               	movf	sprintf@prec,w,c
  1443  00127E  0D02               	mullw	2
  1444  001280  0E01               	movlw	low _dpowers
  1445  001282  24F3               	addwf	prodl,w,c
  1446  001284  6EF6               	movwf	tblptrl,c
  1447  001286  0E10               	movlw	high _dpowers
  1448  001288  20F4               	addwfc	prodh,w,c
  1449  00128A  6EF7               	movwf	tblptrh,c
  1450  00128C                     	if	1	;There are 3 active tblptr bytes
  1451  00128C  6AF8               	clrf	tblptru,c
  1452  00128E  0E00               	movlw	low (__mediumconst shr (0+16))
  1453  001290  22F8               	addwfc	tblptru,f,c
  1454  001292                     	endif
  1455  001292  0009               	tblrd		*+
  1456  001294  CFF5 F015          	movff	tablat,___lwdiv@divisor
  1457  001298  000A               	tblrd		*-
  1458  00129A  CFF5 F016          	movff	tablat,___lwdiv@divisor+1
  1459  00129E  C02D  F013         	movff	sprintf@val,___lwdiv@dividend
  1460  0012A2  C02E  F014         	movff	sprintf@val+1,___lwdiv@dividend+1
  1461  0012A6  EC1A  F00E         	call	___lwdiv	;wreg free
  1462  0012AA  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
  1463  0012AE  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
  1464  0012B2  0E00               	movlw	0
  1465  0012B4  6E1D               	movwf	___lwmod@divisor+1,c
  1466  0012B6  0E0A               	movlw	10
  1467  0012B8  6E1C               	movwf	___lwmod@divisor,c
  1468  0012BA  EC73  F00E         	call	___lwmod	;wreg free
  1469  0012BE  501A               	movf	?___lwmod,w,c
  1470  0012C0  0F30               	addlw	48
  1471  0012C2  6E31               	movwf	sprintf@c,c
  1472                           
  1473                           ;doprnt.c: 1523: }
  1474                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1475  0012C4  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1476  0012C8  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1477  0012CC  C031  FFDF         	movff	sprintf@c,indf2
  1478  0012D0  4A1F               	infsnz	sprintf@sp,f,c
  1479  0012D2  2A20               	incf	sprintf@sp+1,f,c
  1480  0012D4  D000               	goto	l2634
  1481  0012D6                     l2634:
  1482  0012D6  0629               	decf	sprintf@prec,f,c
  1483  0012D8  2829               	incf	sprintf@prec,w,c
  1484  0012DA  B4D8               	btfsc	status,2,c
  1485  0012DC  D002               	goto	l2636
  1486  0012DE  D7CE               	goto	l2628
  1487  0012E0  D000               	goto	l2636
  1488  0012E2                     l2636:
  1489  0012E2  C021  FFF6         	movff	sprintf@f,tblptrl
  1490  0012E6  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1491  0012EA  4A21               	infsnz	sprintf@f,f,c
  1492  0012EC  2A22               	incf	sprintf@f+1,f,c
  1493  0012EE                     	if	0	;tblptru may be non-zero
  1494  0012EE                     	endif
  1495  0012EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1496  0012EE  0E00               	movlw	low (__mediumconst shr (0+16))
  1497  0012F0  6EF8               	movwf	tblptru,c
  1498  0012F2                     	endif
  1499  0012F2  0008               	tblrd		*
  1500  0012F4  CFF5 F031          	movff	tablat,sprintf@c
  1501  0012F8  5031               	movf	sprintf@c,w,c
  1502  0012FA  B4D8               	btfsc	status,2,c
  1503  0012FC  D002               	goto	l2638
  1504  0012FE  D6B9               	goto	l2546
  1505  001300  D000               	goto	l2638
  1506  001302                     l2638:
  1507                           
  1508                           ;doprnt.c: 1538: *sp = 0;
  1509  001302  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1510  001306  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1511  00130A  0E00               	movlw	0
  1512  00130C  6EDF               	movwf	indf2,c
  1513  00130E  D000               	goto	l427
  1514  001310                     l427:
  1515  001310  0012               	return		;funcret
  1516  001312                     __end_of_sprintf:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           prodh	equ	0xFF4
  1523                           prodl	equ	0xFF3
  1524                           intcon	equ	0xFF2
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           indf2	equ	0xFDF
  1528                           postinc2	equ	0xFDE
  1529                           postdec2	equ	0xFDD
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _isdigit *****************
  1535 ;; Defined at:
  1536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  c               1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  c               1   20[COMRAM] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;		None               void
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    4
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_sprintf
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text2
  1565  001E72                     __ptext2:
  1566                           	opt stack 0
  1567  001E72                     _isdigit:
  1568                           	opt stack 25
  1569                           
  1570                           ;incstack = 0
  1571                           ;isdigit@c stored from wreg
  1572  001E72  6E15               	movwf	isdigit@c,c
  1573  001E74  0E00               	movlw	0
  1574  001E76  6E14               	movwf	_isdigit$2281,c
  1575  001E78  0E3A               	movlw	58
  1576  001E7A  6015               	cpfslt	isdigit@c,c
  1577  001E7C  D006               	goto	l2336
  1578  001E7E  0E2F               	movlw	47
  1579  001E80  6415               	cpfsgt	isdigit@c,c
  1580  001E82  D003               	goto	l2336
  1581  001E84  0E01               	movlw	1
  1582  001E86  6E14               	movwf	_isdigit$2281,c
  1583  001E88  D000               	goto	l2336
  1584  001E8A                     l2336:
  1585  001E8A  C014  F013         	movff	_isdigit$2281,??_isdigit
  1586  001E8E  3013               	rrcf	??_isdigit,w,c
  1587  001E90  D000               	goto	l915
  1588  001E92                     l915:
  1589  001E92  0012               	return		;funcret
  1590  001E94                     __end_of_isdigit:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           intcon	equ	0xFF2
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           indf2	equ	0xFDF
  1602                           postinc2	equ	0xFDE
  1603                           postdec2	equ	0xFDD
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function ___wmul *****************
  1609 ;; Defined at:
  1610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  multiplier      2   18[COMRAM] unsigned int 
  1613 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  product         2   22[COMRAM] unsigned int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2   18[COMRAM] unsigned int 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0, prodl, prodh
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;Total ram usage:        6 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    4
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_sprintf
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text3
  1640  001DDA                     __ptext3:
  1641                           	opt stack 0
  1642  001DDA                     ___wmul:
  1643                           	opt stack 25
  1644                           
  1645                           ;incstack = 0
  1646  001DDA  5013               	movf	___wmul@multiplier,w,c
  1647  001DDC  0215               	mulwf	___wmul@multiplicand,c
  1648  001DDE  CFF3 F017          	movff	prodl,___wmul@product
  1649  001DE2  CFF4 F018          	movff	prodh,___wmul@product+1
  1650  001DE6  5013               	movf	___wmul@multiplier,w,c
  1651  001DE8  0216               	mulwf	___wmul@multiplicand+1,c
  1652  001DEA  50F3               	movf	prodl,w,c
  1653  001DEC  2618               	addwf	___wmul@product+1,f,c
  1654  001DEE  5014               	movf	___wmul@multiplier+1,w,c
  1655  001DF0  0215               	mulwf	___wmul@multiplicand,c
  1656  001DF2  50F3               	movf	prodl,w,c
  1657  001DF4  2618               	addwf	___wmul@product+1,f,c
  1658  001DF6  C017  F013         	movff	___wmul@product,?___wmul
  1659  001DFA  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1660  001DFE  D000               	goto	l477
  1661  001E00                     l477:
  1662  001E00  0012               	return		;funcret
  1663  001E02                     __end_of___wmul:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           prodh	equ	0xFF4
  1670                           prodl	equ	0xFF3
  1671                           intcon	equ	0xFF2
  1672                           postinc0	equ	0xFEE
  1673                           wreg	equ	0xFE8
  1674                           indf2	equ	0xFDF
  1675                           postinc2	equ	0xFDE
  1676                           postdec2	equ	0xFDD
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function ___lwmod *****************
  1682 ;; Defined at:
  1683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  dividend        2   25[COMRAM] unsigned int 
  1686 ;;  divisor         2   27[COMRAM] unsigned int 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  counter         1   29[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2   25[COMRAM] unsigned int 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;Total ram usage:        5 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    4
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_sprintf
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text4
  1713  001CE6                     __ptext4:
  1714                           	opt stack 0
  1715  001CE6                     ___lwmod:
  1716                           	opt stack 25
  1717                           
  1718                           ;incstack = 0
  1719  001CE6  501C               	movf	___lwmod@divisor,w,c
  1720  001CE8  101D               	iorwf	___lwmod@divisor+1,w,c
  1721  001CEA  B4D8               	btfsc	status,2,c
  1722  001CEC  D01D               	goto	l1017
  1723  001CEE  0E01               	movlw	1
  1724  001CF0  6E1E               	movwf	___lwmod@counter,c
  1725  001CF2  D005               	goto	l2374
  1726  001CF4                     l2372:
  1727  001CF4  90D8               	bcf	status,0,c
  1728  001CF6  361C               	rlcf	___lwmod@divisor,f,c
  1729  001CF8  361D               	rlcf	___lwmod@divisor+1,f,c
  1730  001CFA  2A1E               	incf	___lwmod@counter,f,c
  1731  001CFC  D000               	goto	l2374
  1732  001CFE                     l2374:
  1733  001CFE  BE1D               	btfsc	___lwmod@divisor+1,7,c
  1734  001D00  D002               	goto	l2376
  1735  001D02  D7F8               	goto	l2372
  1736  001D04  D000               	goto	l2376
  1737  001D06                     l2376:
  1738  001D06  501C               	movf	___lwmod@divisor,w,c
  1739  001D08  5C1A               	subwf	___lwmod@dividend,w,c
  1740  001D0A  501D               	movf	___lwmod@divisor+1,w,c
  1741  001D0C  581B               	subwfb	___lwmod@dividend+1,w,c
  1742  001D0E  A0D8               	btfss	status,0,c
  1743  001D10  D005               	goto	l2380
  1744  001D12  501C               	movf	___lwmod@divisor,w,c
  1745  001D14  5E1A               	subwf	___lwmod@dividend,f,c
  1746  001D16  501D               	movf	___lwmod@divisor+1,w,c
  1747  001D18  5A1B               	subwfb	___lwmod@dividend+1,f,c
  1748  001D1A  D000               	goto	l2380
  1749  001D1C                     l2380:
  1750  001D1C  90D8               	bcf	status,0,c
  1751  001D1E  321D               	rrcf	___lwmod@divisor+1,f,c
  1752  001D20  321C               	rrcf	___lwmod@divisor,f,c
  1753  001D22  2E1E               	decfsz	___lwmod@counter,f,c
  1754  001D24  D7F0               	goto	l2376
  1755  001D26  D000               	goto	l1017
  1756  001D28                     l1017:
  1757  001D28  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1758  001D2C  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1759  001D30  0012               	return		;funcret
  1760  001D32                     __end_of___lwmod:
  1761                           	opt stack 0
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           prodh	equ	0xFF4
  1767                           prodl	equ	0xFF3
  1768                           intcon	equ	0xFF2
  1769                           postinc0	equ	0xFEE
  1770                           wreg	equ	0xFE8
  1771                           indf2	equ	0xFDF
  1772                           postinc2	equ	0xFDE
  1773                           postdec2	equ	0xFDD
  1774                           fsr2h	equ	0xFDA
  1775                           fsr2l	equ	0xFD9
  1776                           status	equ	0xFD8
  1777                           
  1778 ;; *************** function ___lwdiv *****************
  1779 ;; Defined at:
  1780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  dividend        2   18[COMRAM] unsigned int 
  1783 ;;  divisor         2   20[COMRAM] unsigned int 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  quotient        2   23[COMRAM] unsigned int 
  1786 ;;  counter         1   22[COMRAM] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   18[COMRAM] unsigned int 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        7 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    4
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_sprintf
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text5
  1811  001C34                     __ptext5:
  1812                           	opt stack 0
  1813  001C34                     ___lwdiv:
  1814                           	opt stack 25
  1815                           
  1816                           ;incstack = 0
  1817  001C34  0E00               	movlw	0
  1818  001C36  6E19               	movwf	___lwdiv@quotient+1,c
  1819  001C38  0E00               	movlw	0
  1820  001C3A  6E18               	movwf	___lwdiv@quotient,c
  1821  001C3C  5015               	movf	___lwdiv@divisor,w,c
  1822  001C3E  1016               	iorwf	___lwdiv@divisor+1,w,c
  1823  001C40  B4D8               	btfsc	status,2,c
  1824  001C42  D021               	goto	l1007
  1825  001C44  0E01               	movlw	1
  1826  001C46  6E17               	movwf	___lwdiv@counter,c
  1827  001C48  D005               	goto	l2354
  1828  001C4A                     l2352:
  1829  001C4A  90D8               	bcf	status,0,c
  1830  001C4C  3615               	rlcf	___lwdiv@divisor,f,c
  1831  001C4E  3616               	rlcf	___lwdiv@divisor+1,f,c
  1832  001C50  2A17               	incf	___lwdiv@counter,f,c
  1833  001C52  D000               	goto	l2354
  1834  001C54                     l2354:
  1835  001C54  BE16               	btfsc	___lwdiv@divisor+1,7,c
  1836  001C56  D002               	goto	l2356
  1837  001C58  D7F8               	goto	l2352
  1838  001C5A  D000               	goto	l2356
  1839  001C5C                     l2356:
  1840  001C5C  90D8               	bcf	status,0,c
  1841  001C5E  3618               	rlcf	___lwdiv@quotient,f,c
  1842  001C60  3619               	rlcf	___lwdiv@quotient+1,f,c
  1843  001C62  5015               	movf	___lwdiv@divisor,w,c
  1844  001C64  5C13               	subwf	___lwdiv@dividend,w,c
  1845  001C66  5016               	movf	___lwdiv@divisor+1,w,c
  1846  001C68  5814               	subwfb	___lwdiv@dividend+1,w,c
  1847  001C6A  A0D8               	btfss	status,0,c
  1848  001C6C  D006               	goto	l2364
  1849  001C6E  5015               	movf	___lwdiv@divisor,w,c
  1850  001C70  5E13               	subwf	___lwdiv@dividend,f,c
  1851  001C72  5016               	movf	___lwdiv@divisor+1,w,c
  1852  001C74  5A14               	subwfb	___lwdiv@dividend+1,f,c
  1853  001C76  8018               	bsf	___lwdiv@quotient,0,c
  1854  001C78  D000               	goto	l2364
  1855  001C7A                     l2364:
  1856  001C7A  90D8               	bcf	status,0,c
  1857  001C7C  3216               	rrcf	___lwdiv@divisor+1,f,c
  1858  001C7E  3215               	rrcf	___lwdiv@divisor,f,c
  1859  001C80  2E17               	decfsz	___lwdiv@counter,f,c
  1860  001C82  D7EC               	goto	l2356
  1861  001C84  D000               	goto	l1007
  1862  001C86                     l1007:
  1863  001C86  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  1864  001C8A  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1865  001C8E  0012               	return		;funcret
  1866  001C90                     __end_of___lwdiv:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           prodh	equ	0xFF4
  1873                           prodl	equ	0xFF3
  1874                           intcon	equ	0xFF2
  1875                           postinc0	equ	0xFEE
  1876                           wreg	equ	0xFE8
  1877                           indf2	equ	0xFDF
  1878                           postinc2	equ	0xFDE
  1879                           postdec2	equ	0xFDD
  1880                           fsr2h	equ	0xFDA
  1881                           fsr2l	equ	0xFD9
  1882                           status	equ	0xFD8
  1883                           
  1884 ;; *************** function _TMR_SysTick_configure *****************
  1885 ;; Defined at:
  1886 ;;		line 86 in file "TMR_SysTick.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;  interrupt_pr    1    wreg     unsigned char 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  interrupt_pr    1   22[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;		None               void
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        1 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    7
  1907 ;; This function calls:
  1908 ;;		TMR_SysTick@enable_interrupt
  1909 ;;		_reload_timer
  1910 ;;		_start_timer
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text6
  1917  001E02                     __ptext6:
  1918                           	opt stack 0
  1919  001E02                     _TMR_SysTick_configure:
  1920                           	opt stack 23
  1921                           
  1922                           ;incstack = 0
  1923                           ;TMR_SysTick_configure@interrupt_priority stored from wreg
  1924  001E02  6E17               	movwf	TMR_SysTick_configure@interrupt_priority,c
  1925                           
  1926                           ;TMR_SysTick.c: 88: T0CON = 0x08;
  1927  001E04  0E08               	movlw	8
  1928  001E06  6ED5               	movwf	4053,c	;volatile
  1929                           
  1930                           ;TMR_SysTick.c: 89: TMR0H = 0;
  1931  001E08  0E00               	movlw	0
  1932  001E0A  6ED7               	movwf	4055,c	;volatile
  1933                           
  1934                           ;TMR_SysTick.c: 90: TMR0L = 0;
  1935  001E0C  0E00               	movlw	0
  1936  001E0E  6ED6               	movwf	4054,c	;volatile
  1937                           
  1938                           ;TMR_SysTick.c: 92: systick_tmr_reload = 65535 - (40000000 / 1000 / 4);
  1939  001E10  0ED8               	movlw	216
  1940  001E12  6E36               	movwf	_systick_tmr_reload+1,c	;volatile
  1941  001E14  0EEF               	movlw	239
  1942  001E16  6E35               	movwf	_systick_tmr_reload,c	;volatile
  1943                           
  1944                           ;TMR_SysTick.c: 94: reload_timer();
  1945  001E18  ECB4  F00F         	call	_reload_timer	;wreg free
  1946                           
  1947                           ;TMR_SysTick.c: 96: systick_interrupt_priority = interrupt_priority;
  1948  001E1C  C017  F03D         	movff	TMR_SysTick_configure@interrupt_priority,_systick_interrupt_priority	;volatile
  1949                           
  1950                           ;TMR_SysTick.c: 98: enable_interrupt();
  1951  001E20  EC4A  F00F         	call	TMR_SysTick@enable_interrupt	;wreg free
  1952                           
  1953                           ;TMR_SysTick.c: 100: start_timer();
  1954  001E24  ECE2  F00F         	call	_start_timer	;wreg free
  1955  001E28  0012               	return		;funcret
  1956  001E2A                     __end_of_TMR_SysTick_configure:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           prodh	equ	0xFF4
  1963                           prodl	equ	0xFF3
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           indf2	equ	0xFDF
  1968                           postinc2	equ	0xFDE
  1969                           postdec2	equ	0xFDD
  1970                           fsr2h	equ	0xFDA
  1971                           fsr2l	equ	0xFD9
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function _start_timer *****************
  1975 ;; Defined at:
  1976 ;;		line 21 in file "TMR_SysTick.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;		None               void
  1983 ;; Registers used:
  1984 ;;		None
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    4
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_TMR_SysTick_configure
  2001 ;;		_TMR_SysTick_startTimer
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text7
  2006  001FC4                     __ptext7:
  2007                           	opt stack 0
  2008  001FC4                     _start_timer:
  2009                           	opt stack 25
  2010                           
  2011                           ;TMR_SysTick.c: 23: T0CONbits.TMR0ON = 1;
  2012                           
  2013                           ;incstack = 0
  2014  001FC4  8ED5               	bsf	4053,7,c	;volatile
  2015  001FC6  0012               	return		;funcret
  2016  001FC8                     __end_of_start_timer:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           indf2	equ	0xFDF
  2028                           postinc2	equ	0xFDE
  2029                           postdec2	equ	0xFDD
  2030                           fsr2h	equ	0xFDA
  2031                           fsr2l	equ	0xFD9
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function TMR_SysTick@enable_interrupt *****************
  2035 ;; Defined at:
  2036 ;;		line 46 in file "TMR_SysTick.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    6
  2057 ;; This function calls:
  2058 ;;		_reload_timer
  2059 ;; This function is called by:
  2060 ;;		_TMR_SysTick_configure
  2061 ;;		_TMR_SysTick_enableInterrupt
  2062 ;;		_TMR_SysTick_switchInterruptPriority
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text8
  2067  001E94                     __ptext8:
  2068                           	opt stack 0
  2069  001E94                     TMR_SysTick@enable_interrupt:
  2070                           	opt stack 23
  2071                           
  2072                           ;TMR_SysTick.c: 48: if(systick_interrupt_priority == 0) {
  2073                           
  2074                           ;incstack = 0
  2075  001E94  503D               	movf	_systick_interrupt_priority,w,c	;volatile
  2076  001E96  A4D8               	btfss	status,2,c
  2077  001E98  D002               	goto	l2318
  2078                           
  2079                           ;TMR_SysTick.c: 49: INTCON2bits.TMR0IP = 0;
  2080  001E9A  94F1               	bcf	intcon2,2,c	;volatile
  2081                           
  2082                           ;TMR_SysTick.c: 50: }
  2083  001E9C  D005               	goto	l2322
  2084  001E9E                     l2318:
  2085                           
  2086                           ;TMR_SysTick.c: 52: else if(systick_interrupt_priority == 1) {
  2087  001E9E  043D               	decf	_systick_interrupt_priority,w,c	;volatile
  2088  001EA0  A4D8               	btfss	status,2,c
  2089  001EA2  D002               	goto	l2322
  2090                           
  2091                           ;TMR_SysTick.c: 53: INTCON2bits.TMR0IP = 1;
  2092  001EA4  84F1               	bsf	intcon2,2,c	;volatile
  2093  001EA6  D000               	goto	l2322
  2094  001EA8                     l2322:
  2095                           
  2096                           ;TMR_SysTick.c: 54: }
  2097                           ;TMR_SysTick.c: 56: reload_timer();
  2098  001EA8  ECB4  F00F         	call	_reload_timer	;wreg free
  2099                           
  2100                           ;TMR_SysTick.c: 58: INTCONbits.TMR0IF = 0;
  2101  001EAC  94F2               	bcf	intcon,2,c	;volatile
  2102                           
  2103                           ;TMR_SysTick.c: 59: INTCONbits.TMR0IE = 1;
  2104  001EAE  8AF2               	bsf	intcon,5,c	;volatile
  2105  001EB0  0012               	return		;funcret
  2106  001EB2                     __end_ofTMR_SysTick@enable_interrupt:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           intcon	equ	0xFF2
  2115                           intcon2	equ	0xFF1
  2116                           postinc0	equ	0xFEE
  2117                           wreg	equ	0xFE8
  2118                           indf2	equ	0xFDF
  2119                           postinc2	equ	0xFDE
  2120                           postdec2	equ	0xFDD
  2121                           fsr2h	equ	0xFDA
  2122                           fsr2l	equ	0xFD9
  2123                           status	equ	0xFD8
  2124                           
  2125 ;; *************** function _reload_timer *****************
  2126 ;; Defined at:
  2127 ;;		line 33 in file "TMR_SysTick.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    5
  2148 ;; This function calls:
  2149 ;;		_WriteTimer0
  2150 ;; This function is called by:
  2151 ;;		TMR_SysTick@enable_interrupt
  2152 ;;		_TMR_SysTick_configure
  2153 ;;		_TMR_SysTick_resetCounter
  2154 ;;		_TMR_SysTick_setCounter
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text9
  2159  001F68                     __ptext9:
  2160                           	opt stack 0
  2161  001F68                     _reload_timer:
  2162                           	opt stack 24
  2163                           
  2164                           ;TMR_SysTick.c: 35: WriteTimer0(systick_tmr_reload);
  2165                           
  2166                           ;incstack = 0
  2167  001F68  C035  F013         	movff	_systick_tmr_reload,WriteTimer0@timer0	;volatile
  2168  001F6C  C036  F014         	movff	_systick_tmr_reload+1,WriteTimer0@timer0+1	;volatile
  2169  001F70  EC91  F00F         	call	_WriteTimer0	;wreg free
  2170  001F74  0012               	return		;funcret
  2171  001F76                     __end_of_reload_timer:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           intcon2	equ	0xFF1
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _WriteTimer0 *****************
  2191 ;; Defined at:
  2192 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  timer0          2   18[COMRAM] unsigned int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  timer           2   20[COMRAM] struct Timers
  2197 ;; Return value:  Size  Location     Type
  2198 ;;		None               void
  2199 ;; Registers used:
  2200 ;;		None
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        4 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_reload_timer
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text10
  2221  001F22                     __ptext10:
  2222                           	opt stack 0
  2223  001F22                     _WriteTimer0:
  2224                           	opt stack 24
  2225                           
  2226                           ;incstack = 0
  2227  001F22  C013  F015         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2228  001F26  C014  F016         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2229  001F2A  C016  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2230  001F2E  C015  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2231  001F32  0012               	return		;funcret
  2232  001F34                     __end_of_WriteTimer0:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           intcon2	equ	0xFF1
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _SetChanADC *****************
  2252 ;; Defined at:
  2253 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcsetch.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  channel         1    wreg     unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  channel         1   19[COMRAM] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;Total ram usage:        2 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    4
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text11
  2282  001EFA                     __ptext11:
  2283                           	opt stack 0
  2284  001EFA                     _SetChanADC:
  2285                           	opt stack 26
  2286                           
  2287                           ;incstack = 0
  2288                           ;SetChanADC@channel stored from wreg
  2289  001EFA  6E14               	movwf	SetChanADC@channel,c
  2290  001EFC  CFC2 F013          	movff	4034,??_SetChanADC	;volatile
  2291  001F00  0EC3               	movlw	195
  2292  001F02  1613               	andwf	??_SetChanADC,f,c
  2293  001F04  90D8               	bcf	status,0,c
  2294  001F06  3014               	rrcf	SetChanADC@channel,w,c
  2295  001F08  0B3C               	andlw	60
  2296  001F0A  1013               	iorwf	??_SetChanADC,w,c
  2297  001F0C  6EC2               	movwf	4034,c	;volatile
  2298  001F0E  0012               	return		;funcret
  2299  001F10                     __end_of_SetChanADC:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           intcon	equ	0xFF2
  2308                           intcon2	equ	0xFF1
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           indf2	equ	0xFDF
  2312                           postinc2	equ	0xFDE
  2313                           postdec2	equ	0xFDD
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function _ReadADC *****************
  2319 ;; Defined at:
  2320 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  2   18[COMRAM] int 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;Total ram usage:        4 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    4
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text12
  2349  001F58                     __ptext12:
  2350                           	opt stack 0
  2351  001F58                     _ReadADC:
  2352                           	opt stack 26
  2353                           
  2354                           ;incstack = 0
  2355  001F58  50C4               	movf	4036,w,c	;volatile
  2356  001F5A  6E15               	movwf	??_ReadADC& (0+255),c
  2357  001F5C  50C3               	movf	4035,w,c	;volatile
  2358  001F5E  6E13               	movwf	?_ReadADC,c
  2359  001F60  C015  F014         	movff	??_ReadADC,?_ReadADC+1
  2360  001F64  D000               	goto	l462
  2361  001F66                     l462:
  2362  001F66  0012               	return		;funcret
  2363  001F68                     __end_of_ReadADC:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           intcon2	equ	0xFF1
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           indf2	equ	0xFDF
  2376                           postinc2	equ	0xFDE
  2377                           postdec2	equ	0xFDD
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _OpenADC *****************
  2383 ;; Defined at:
  2384 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  config          1    wreg     unsigned char 
  2387 ;;  config2         1   18[COMRAM] unsigned char 
  2388 ;;  portconfig      1   19[COMRAM] unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  config          1   22[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;		None               void
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;Total ram usage:        5 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    4
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text13
  2415  001B78                     __ptext13:
  2416                           	opt stack 0
  2417  001B78                     _OpenADC:
  2418                           	opt stack 26
  2419                           
  2420                           ;incstack = 0
  2421                           ;OpenADC@config stored from wreg
  2422  001B78  6E17               	movwf	OpenADC@config,c
  2423  001B7A  0E00               	movlw	0
  2424  001B7C  6EC2               	movwf	4034,c	;volatile
  2425  001B7E  0E00               	movlw	0
  2426  001B80  6EC0               	movwf	4032,c	;volatile
  2427  001B82  90D8               	bcf	status,0,c
  2428  001B84  3013               	rrcf	OpenADC@config2,w,c
  2429  001B86  0B3C               	andlw	60
  2430  001B88  6EC2               	movwf	4034,c	;volatile
  2431  001B8A  C013  F015         	movff	OpenADC@config2,??_OpenADC
  2432  001B8E  3A15               	swapf	??_OpenADC,f,c
  2433  001B90  0EF0               	movlw	240
  2434  001B92  1615               	andwf	??_OpenADC,f,c
  2435  001B94  0E30               	movlw	48
  2436  001B96  1615               	andwf	??_OpenADC,f,c
  2437  001B98  5014               	movf	OpenADC@portconfig,w,c
  2438  001B9A  0B0F               	andlw	15
  2439  001B9C  1015               	iorwf	??_OpenADC,w,c
  2440  001B9E  6EC1               	movwf	4033,c	;volatile
  2441  001BA0  C017  F015         	movff	OpenADC@config,??_OpenADC
  2442  001BA4  90D8               	bcf	status,0,c
  2443  001BA6  3615               	rlcf	??_OpenADC,f,c
  2444  001BA8  90D8               	bcf	status,0,c
  2445  001BAA  3615               	rlcf	??_OpenADC,f,c
  2446  001BAC  0E38               	movlw	56
  2447  001BAE  1615               	andwf	??_OpenADC,f,c
  2448  001BB0  C017  F016         	movff	OpenADC@config,??_OpenADC+1
  2449  001BB4  3A16               	swapf	??_OpenADC+1,f,c
  2450  001BB6  0E0F               	movlw	15
  2451  001BB8  1616               	andwf	??_OpenADC+1,f,c
  2452  001BBA  0E07               	movlw	7
  2453  001BBC  1616               	andwf	??_OpenADC+1,f,c
  2454  001BBE  5017               	movf	OpenADC@config,w,c
  2455  001BC0  0B80               	andlw	128
  2456  001BC2  1016               	iorwf	??_OpenADC+1,w,c
  2457  001BC4  1015               	iorwf	??_OpenADC,w,c
  2458  001BC6  6EC0               	movwf	4032,c	;volatile
  2459  001BC8  AE13               	btfss	OpenADC@config2,7,c
  2460  001BCA  D003               	goto	l454
  2461  001BCC  9C9E               	bcf	3998,6,c	;volatile
  2462  001BCE  8C9D               	bsf	3997,6,c	;volatile
  2463  001BD0  8CF2               	bsf	intcon,6,c	;volatile
  2464  001BD2                     l454:
  2465  001BD2  80C2               	bsf	4034,0,c	;volatile
  2466  001BD4  0012               	return		;funcret
  2467  001BD6                     __end_of_OpenADC:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           prodh	equ	0xFF4
  2474                           prodl	equ	0xFF3
  2475                           intcon	equ	0xFF2
  2476                           intcon2	equ	0xFF1
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           postdec2	equ	0xFDD
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _IO_LED_configureIO *****************
  2487 ;; Defined at:
  2488 ;;		line 5 in file "IO_LED.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		None
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    4
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text14
  2517  001F34                     __ptext14:
  2518                           	opt stack 0
  2519  001F34                     _IO_LED_configureIO:
  2520                           	opt stack 26
  2521                           
  2522                           ;IO_LED.c: 7: TRISHbits.TRISH0 = 0;
  2523                           
  2524                           ;incstack = 0
  2525  001F34  9099               	bcf	3993,0,c	;volatile
  2526                           
  2527                           ;IO_LED.c: 8: TRISHbits.TRISH1 = 0;
  2528  001F36  9299               	bcf	3993,1,c	;volatile
  2529                           
  2530                           ;IO_LED.c: 9: TRISHbits.TRISH2 = 0;
  2531  001F38  9499               	bcf	3993,2,c	;volatile
  2532                           
  2533                           ;IO_LED.c: 10: TRISHbits.TRISH3 = 0;
  2534  001F3A  9699               	bcf	3993,3,c	;volatile
  2535                           
  2536                           ;IO_LED.c: 12: LATHbits.LATH0 = 1;
  2537  001F3C  8090               	bsf	3984,0,c	;volatile
  2538                           
  2539                           ;IO_LED.c: 13: LATHbits.LATH1 = 1;
  2540  001F3E  8290               	bsf	3984,1,c	;volatile
  2541                           
  2542                           ;IO_LED.c: 14: LATHbits.LATH2 = 1;
  2543  001F40  8490               	bsf	3984,2,c	;volatile
  2544                           
  2545                           ;IO_LED.c: 15: LATHbits.LATH3 = 1;
  2546  001F42  8690               	bsf	3984,3,c	;volatile
  2547  001F44  0012               	return		;funcret
  2548  001F46                     __end_of_IO_LED_configureIO:
  2549                           	opt stack 0
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           prodh	equ	0xFF4
  2555                           prodl	equ	0xFF3
  2556                           intcon	equ	0xFF2
  2557                           intcon2	equ	0xFF1
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           postdec2	equ	0xFDD
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           
  2567 ;; *************** function _IO_LCD_puts *****************
  2568 ;; Defined at:
  2569 ;;		line 246 in file "IO_LCD.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  str             2   21[COMRAM] PTR unsigned char 
  2572 ;;		 -> main@buff(21), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  i               1   23[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        3 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    5
  2591 ;; This function calls:
  2592 ;;		_write_data
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text15
  2599  001D6C                     __ptext15:
  2600                           	opt stack 0
  2601  001D6C                     _IO_LCD_puts:
  2602                           	opt stack 25
  2603                           
  2604                           ;IO_LCD.c: 248: char i =0;
  2605                           
  2606                           ;incstack = 0
  2607  001D6C  0E00               	movlw	0
  2608  001D6E  6E18               	movwf	IO_LCD_puts@i,c
  2609                           
  2610                           ;IO_LCD.c: 250: while(str[i] != (0)) {
  2611  001D70  D00D               	goto	l2478
  2612  001D72                     l2474:
  2613                           
  2614                           ;IO_LCD.c: 252: write_data(str[i]);
  2615  001D72  5018               	movf	IO_LCD_puts@i,w,c
  2616  001D74  0D01               	mullw	1
  2617  001D76  50F3               	movf	prodl,w,c
  2618  001D78  2416               	addwf	IO_LCD_puts@str,w,c
  2619  001D7A  6ED9               	movwf	fsr2l,c
  2620  001D7C  50F4               	movf	prodh,w,c
  2621  001D7E  2017               	addwfc	IO_LCD_puts@str+1,w,c
  2622  001D80  6EDA               	movwf	fsr2h,c
  2623  001D82  50DF               	movf	indf2,w,c
  2624  001D84  ECD9  F00A         	call	_write_data
  2625                           
  2626                           ;IO_LCD.c: 253: i++;
  2627  001D88  2A18               	incf	IO_LCD_puts@i,f,c
  2628  001D8A  D000               	goto	l2478
  2629  001D8C                     l2478:
  2630  001D8C  5018               	movf	IO_LCD_puts@i,w,c
  2631  001D8E  0D01               	mullw	1
  2632  001D90  50F3               	movf	prodl,w,c
  2633  001D92  2416               	addwf	IO_LCD_puts@str,w,c
  2634  001D94  6ED9               	movwf	fsr2l,c
  2635  001D96  50F4               	movf	prodh,w,c
  2636  001D98  2017               	addwfc	IO_LCD_puts@str+1,w,c
  2637  001D9A  6EDA               	movwf	fsr2h,c
  2638  001D9C  50DF               	movf	indf2,w,c
  2639  001D9E  A4D8               	btfss	status,2,c
  2640  001DA0  D7E8               	goto	l2474
  2641  001DA2  0012               	return		;funcret
  2642  001DA4                     __end_of_IO_LCD_puts:
  2643                           	opt stack 0
  2644                           tblptru	equ	0xFF8
  2645                           tblptrh	equ	0xFF7
  2646                           tblptrl	equ	0xFF6
  2647                           tablat	equ	0xFF5
  2648                           prodh	equ	0xFF4
  2649                           prodl	equ	0xFF3
  2650                           intcon	equ	0xFF2
  2651                           intcon2	equ	0xFF1
  2652                           postinc0	equ	0xFEE
  2653                           wreg	equ	0xFE8
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _IO_LCD_putrs *****************
  2662 ;; Defined at:
  2663 ;;		line 259 in file "IO_LCD.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  str             2   21[COMRAM] PTR const unsigned char 
  2666 ;;		 -> STR_12(19), STR_6(11), STR_5(13), STR_4(10), 
  2667 ;;		 -> STR_3(19), STR_2(12), STR_1(18), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  i               1   25[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;Total ram usage:        5 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    5
  2686 ;; This function calls:
  2687 ;;		_write_data
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text16
  2694  001BD6                     __ptext16:
  2695                           	opt stack 0
  2696  001BD6                     _IO_LCD_putrs:
  2697                           	opt stack 25
  2698                           
  2699                           ;IO_LCD.c: 261: char i = 0;
  2700                           
  2701                           ;incstack = 0
  2702  001BD6  0E00               	movlw	0
  2703  001BD8  6E1A               	movwf	IO_LCD_putrs@i,c
  2704                           
  2705                           ;IO_LCD.c: 263: while(str[i] != (0)) {
  2706  001BDA  D016               	goto	l2486
  2707  001BDC                     l2482:
  2708                           
  2709                           ;IO_LCD.c: 265: write_data(str[i]);
  2710  001BDC  501A               	movf	IO_LCD_putrs@i,w,c
  2711  001BDE  0D01               	mullw	1
  2712  001BE0  C016  F018         	movff	IO_LCD_putrs@str,??_IO_LCD_putrs
  2713  001BE4  C017  F019         	movff	IO_LCD_putrs@str+1,??_IO_LCD_putrs+1
  2714  001BE8  50F3               	movf	prodl,w,c
  2715  001BEA  2618               	addwf	??_IO_LCD_putrs,f,c
  2716  001BEC  50F4               	movf	prodh,w,c
  2717  001BEE  2219               	addwfc	??_IO_LCD_putrs+1,f,c
  2718  001BF0  C018  FFF6         	movff	??_IO_LCD_putrs,tblptrl
  2719  001BF4  C019  FFF7         	movff	??_IO_LCD_putrs+1,tblptrh
  2720  001BF8                     	if	0	;tblptru may be non-zero
  2721  001BF8                     	endif
  2722  001BF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2723  001BF8  0E00               	movlw	low (__mediumconst shr (0+16))
  2724  001BFA  6EF8               	movwf	tblptru,c
  2725  001BFC                     	endif
  2726  001BFC  0008               	tblrd		*
  2727  001BFE  50F5               	movf	tablat,w,c
  2728  001C00  ECD9  F00A         	call	_write_data
  2729                           
  2730                           ;IO_LCD.c: 266: i++;
  2731  001C04  2A1A               	incf	IO_LCD_putrs@i,f,c
  2732  001C06  D000               	goto	l2486
  2733  001C08                     l2486:
  2734  001C08  501A               	movf	IO_LCD_putrs@i,w,c
  2735  001C0A  0D01               	mullw	1
  2736  001C0C  C016  F018         	movff	IO_LCD_putrs@str,??_IO_LCD_putrs
  2737  001C10  C017  F019         	movff	IO_LCD_putrs@str+1,??_IO_LCD_putrs+1
  2738  001C14  50F3               	movf	prodl,w,c
  2739  001C16  2618               	addwf	??_IO_LCD_putrs,f,c
  2740  001C18  50F4               	movf	prodh,w,c
  2741  001C1A  2219               	addwfc	??_IO_LCD_putrs+1,f,c
  2742  001C1C  C018  FFF6         	movff	??_IO_LCD_putrs,tblptrl
  2743  001C20  C019  FFF7         	movff	??_IO_LCD_putrs+1,tblptrh
  2744  001C24                     	if	0	;tblptru may be non-zero
  2745  001C24                     	endif
  2746  001C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2747  001C24  0E00               	movlw	low (__mediumconst shr (0+16))
  2748  001C26  6EF8               	movwf	tblptru,c
  2749  001C28                     	endif
  2750  001C28  0008               	tblrd		*
  2751  001C2A  50F5               	movf	tablat,w,c
  2752  001C2C  0900               	iorlw	0
  2753  001C2E  A4D8               	btfss	status,2,c
  2754  001C30  D7D5               	goto	l2482
  2755  001C32  0012               	return		;funcret
  2756  001C34                     __end_of_IO_LCD_putrs:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           intcon2	equ	0xFF1
  2766                           postinc0	equ	0xFEE
  2767                           wreg	equ	0xFE8
  2768                           indf2	equ	0xFDF
  2769                           postinc2	equ	0xFDE
  2770                           postdec2	equ	0xFDD
  2771                           fsr2h	equ	0xFDA
  2772                           fsr2l	equ	0xFD9
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _write_data *****************
  2776 ;; Defined at:
  2777 ;;		line 84 in file "IO_LCD.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  data            1    wreg     unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  data            1   20[COMRAM] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;Total ram usage:        3 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    4
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_IO_LCD_puts
  2802 ;;		_IO_LCD_putrs
  2803 ;;		_IO_LCD_putc
  2804 ;;		_IO_LCD_putrc
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text17
  2809  0015B2                     __ptext17:
  2810                           	opt stack 0
  2811  0015B2                     _write_data:
  2812                           	opt stack 25
  2813                           
  2814                           ;incstack = 0
  2815                           ;write_data@data stored from wreg
  2816  0015B2  6E15               	movwf	write_data@data,c
  2817                           
  2818                           ;IO_LCD.c: 86: LATJbits.LATJ3 = 1;
  2819  0015B4  8691               	bsf	3985,3,c	;volatile
  2820                           
  2821                           ;IO_LCD.c: 111: LATJbits.LATJ7 = (data >> 7) & 0x01;
  2822  0015B6  6A13               	clrf	??_write_data& (0+255),c
  2823  0015B8  AE15               	btfss	write_data@data,7,c
  2824  0015BA  D001               	bra	u1895
  2825  0015BC  2A13               	incf	??_write_data& (0+255),f,c
  2826  0015BE                     u1895:
  2827  0015BE  0E01               	movlw	1
  2828  0015C0  1613               	andwf	??_write_data,f,c
  2829  0015C2  3213               	rrcf	??_write_data,f,c
  2830  0015C4  3213               	rrcf	??_write_data,f,c
  2831  0015C6  5091               	movf	3985,w,c	;volatile
  2832  0015C8  1813               	xorwf	??_write_data,w,c
  2833  0015CA  0B7F               	andlw	-129
  2834  0015CC  1813               	xorwf	??_write_data,w,c
  2835  0015CE  6E91               	movwf	3985,c	;volatile
  2836                           
  2837                           ;IO_LCD.c: 112: LATJbits.LATJ6 = (data >> 6) & 0x01;
  2838  0015D0  C015  F013         	movff	write_data@data,??_write_data
  2839  0015D4  0E06               	movlw	6
  2840  0015D6  6E14               	movwf	(??_write_data+1)& (0+255),c
  2841  0015D8                     u1905:
  2842  0015D8  90D8               	bcf	status,0,c
  2843  0015DA  3213               	rrcf	??_write_data,f,c
  2844  0015DC  2E14               	decfsz	(??_write_data+1)& (0+255),f,c
  2845  0015DE  D7FC               	goto	u1905
  2846  0015E0  0E01               	movlw	1
  2847  0015E2  1613               	andwf	??_write_data,f,c
  2848  0015E4  3A13               	swapf	??_write_data,f,c
  2849  0015E6  4613               	rlncf	??_write_data,f,c
  2850  0015E8  4613               	rlncf	??_write_data,f,c
  2851  0015EA  5091               	movf	3985,w,c	;volatile
  2852  0015EC  1813               	xorwf	??_write_data,w,c
  2853  0015EE  0BBF               	andlw	-65
  2854  0015F0  1813               	xorwf	??_write_data,w,c
  2855  0015F2  6E91               	movwf	3985,c	;volatile
  2856                           
  2857                           ;IO_LCD.c: 113: LATJbits.LATJ5 = (data >> 5) & 0x01;
  2858  0015F4  C015  F013         	movff	write_data@data,??_write_data
  2859  0015F8  0E05               	movlw	5
  2860  0015FA  6E14               	movwf	(??_write_data+1)& (0+255),c
  2861  0015FC                     u1915:
  2862  0015FC  90D8               	bcf	status,0,c
  2863  0015FE  3213               	rrcf	??_write_data,f,c
  2864  001600  2E14               	decfsz	(??_write_data+1)& (0+255),f,c
  2865  001602  D7FC               	goto	u1915
  2866  001604  0E01               	movlw	1
  2867  001606  1613               	andwf	??_write_data,f,c
  2868  001608  3A13               	swapf	??_write_data,f,c
  2869  00160A  4613               	rlncf	??_write_data,f,c
  2870  00160C  5091               	movf	3985,w,c	;volatile
  2871  00160E  1813               	xorwf	??_write_data,w,c
  2872  001610  0BDF               	andlw	-33
  2873  001612  1813               	xorwf	??_write_data,w,c
  2874  001614  6E91               	movwf	3985,c	;volatile
  2875                           
  2876                           ;IO_LCD.c: 114: LATJbits.LATJ4 = (data >> 4) & 0x01;
  2877  001616  C015  F013         	movff	write_data@data,??_write_data
  2878  00161A  3A13               	swapf	??_write_data,f,c
  2879  00161C  0E0F               	movlw	15
  2880  00161E  1613               	andwf	??_write_data,f,c
  2881  001620  0E01               	movlw	1
  2882  001622  1613               	andwf	??_write_data,f,c
  2883  001624  3A13               	swapf	??_write_data,f,c
  2884  001626  5091               	movf	3985,w,c	;volatile
  2885  001628  1813               	xorwf	??_write_data,w,c
  2886  00162A  0BEF               	andlw	-17
  2887  00162C  1813               	xorwf	??_write_data,w,c
  2888  00162E  6E91               	movwf	3985,c	;volatile
  2889                           
  2890                           ;IO_LCD.c: 116: LATJbits.LATJ2 = 1;
  2891  001630  8491               	bsf	3985,2,c	;volatile
  2892                           
  2893                           ;IO_LCD.c: 117: _delay((unsigned long)((20)*(40000000/4000000.0)));
  2894  001632  0E42               	movlw	66
  2895  001634                     u2607:
  2896  001634  2EE8               	decfsz	wreg,f,c
  2897  001636  D7FE               	goto	u2607
  2898  001638  D000               	nop2		;nop
  2899                           
  2900                           ;IO_LCD.c: 118: LATJbits.LATJ2 = 0;
  2901  00163A  9491               	bcf	3985,2,c	;volatile
  2902                           
  2903                           ;IO_LCD.c: 120: _delay((unsigned long)((20)*(40000000/4000000.0)));
  2904  00163C  0E42               	movlw	66
  2905  00163E                     u2617:
  2906  00163E  2EE8               	decfsz	wreg,f,c
  2907  001640  D7FE               	goto	u2617
  2908  001642  D000               	nop2		;nop
  2909                           
  2910                           ;IO_LCD.c: 122: LATJbits.LATJ7 = (data >> 3) & 0x01;
  2911  001644  C015  F013         	movff	write_data@data,??_write_data
  2912  001648  90D8               	bcf	status,0,c
  2913  00164A  3213               	rrcf	??_write_data,f,c
  2914  00164C  90D8               	bcf	status,0,c
  2915  00164E  3213               	rrcf	??_write_data,f,c
  2916  001650  90D8               	bcf	status,0,c
  2917  001652  3213               	rrcf	??_write_data,f,c
  2918  001654  0E01               	movlw	1
  2919  001656  1613               	andwf	??_write_data,f,c
  2920  001658  3213               	rrcf	??_write_data,f,c
  2921  00165A  3213               	rrcf	??_write_data,f,c
  2922  00165C  5091               	movf	3985,w,c	;volatile
  2923  00165E  1813               	xorwf	??_write_data,w,c
  2924  001660  0B7F               	andlw	-129
  2925  001662  1813               	xorwf	??_write_data,w,c
  2926  001664  6E91               	movwf	3985,c	;volatile
  2927                           
  2928                           ;IO_LCD.c: 123: LATJbits.LATJ6 = (data >> 2) & 0x01;
  2929  001666  C015  F013         	movff	write_data@data,??_write_data
  2930  00166A  90D8               	bcf	status,0,c
  2931  00166C  3213               	rrcf	??_write_data,f,c
  2932  00166E  90D8               	bcf	status,0,c
  2933  001670  3213               	rrcf	??_write_data,f,c
  2934  001672  0E01               	movlw	1
  2935  001674  1613               	andwf	??_write_data,f,c
  2936  001676  3A13               	swapf	??_write_data,f,c
  2937  001678  4613               	rlncf	??_write_data,f,c
  2938  00167A  4613               	rlncf	??_write_data,f,c
  2939  00167C  5091               	movf	3985,w,c	;volatile
  2940  00167E  1813               	xorwf	??_write_data,w,c
  2941  001680  0BBF               	andlw	-65
  2942  001682  1813               	xorwf	??_write_data,w,c
  2943  001684  6E91               	movwf	3985,c	;volatile
  2944                           
  2945                           ;IO_LCD.c: 124: LATJbits.LATJ5 = (data >> 1) & 0x01;
  2946  001686  C015  F013         	movff	write_data@data,??_write_data
  2947  00168A  90D8               	bcf	status,0,c
  2948  00168C  3213               	rrcf	??_write_data,f,c
  2949  00168E  0E01               	movlw	1
  2950  001690  1613               	andwf	??_write_data,f,c
  2951  001692  3A13               	swapf	??_write_data,f,c
  2952  001694  4613               	rlncf	??_write_data,f,c
  2953  001696  5091               	movf	3985,w,c	;volatile
  2954  001698  1813               	xorwf	??_write_data,w,c
  2955  00169A  0BDF               	andlw	-33
  2956  00169C  1813               	xorwf	??_write_data,w,c
  2957  00169E  6E91               	movwf	3985,c	;volatile
  2958                           
  2959                           ;IO_LCD.c: 125: LATJbits.LATJ4 = data & 0x01;
  2960  0016A0  C015  F013         	movff	write_data@data,??_write_data
  2961  0016A4  0E01               	movlw	1
  2962  0016A6  1613               	andwf	??_write_data,f,c
  2963  0016A8  3A13               	swapf	??_write_data,f,c
  2964  0016AA  5091               	movf	3985,w,c	;volatile
  2965  0016AC  1813               	xorwf	??_write_data,w,c
  2966  0016AE  0BEF               	andlw	-17
  2967  0016B0  1813               	xorwf	??_write_data,w,c
  2968  0016B2  6E91               	movwf	3985,c	;volatile
  2969                           
  2970                           ;IO_LCD.c: 127: LATJbits.LATJ2 = 1;
  2971  0016B4  8491               	bsf	3985,2,c	;volatile
  2972                           
  2973                           ;IO_LCD.c: 128: _delay((unsigned long)((20)*(40000000/4000000.0)));
  2974  0016B6  0E42               	movlw	66
  2975  0016B8                     u2627:
  2976  0016B8  2EE8               	decfsz	wreg,f,c
  2977  0016BA  D7FE               	goto	u2627
  2978  0016BC  D000               	nop2		;nop
  2979                           
  2980                           ;IO_LCD.c: 129: LATJbits.LATJ2 = 0;
  2981  0016BE  9491               	bcf	3985,2,c	;volatile
  2982                           
  2983                           ;IO_LCD.c: 131: _delay((unsigned long)((20)*(40000000/4000000.0)));
  2984  0016C0  0E42               	movlw	66
  2985  0016C2                     u2637:
  2986  0016C2  2EE8               	decfsz	wreg,f,c
  2987  0016C4  D7FE               	goto	u2637
  2988  0016C6  D000               	nop2		;nop
  2989                           
  2990                           ;IO_LCD.c: 135: _delay((unsigned long)((60)*(40000000/4000000.0)));
  2991  0016C8  0EC8               	movlw	200
  2992  0016CA                     u2647:
  2993  0016CA  2EE8               	decfsz	wreg,f,c
  2994  0016CC  D7FE               	goto	u2647
  2995                           
  2996                           ;IO_LCD.c: 137: LATJbits.LATJ3 = 0;
  2997  0016CE  9691               	bcf	3985,3,c	;volatile
  2998  0016D0  0012               	return		;funcret
  2999  0016D2                     __end_of_write_data:
  3000                           	opt stack 0
  3001                           tblptru	equ	0xFF8
  3002                           tblptrh	equ	0xFF7
  3003                           tblptrl	equ	0xFF6
  3004                           tablat	equ	0xFF5
  3005                           prodh	equ	0xFF4
  3006                           prodl	equ	0xFF3
  3007                           intcon	equ	0xFF2
  3008                           intcon2	equ	0xFF1
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           postdec2	equ	0xFDD
  3014                           fsr2h	equ	0xFDA
  3015                           fsr2l	equ	0xFD9
  3016                           status	equ	0xFD8
  3017                           
  3018 ;; *************** function _IO_LCD_configureIO *****************
  3019 ;; Defined at:
  3020 ;;		line 141 in file "IO_LCD.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    5
  3041 ;; This function calls:
  3042 ;;		_write_port
  3043 ;; This function is called by:
  3044 ;;		_main
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text18
  3049  001EB2                     __ptext18:
  3050                           	opt stack 0
  3051  001EB2                     _IO_LCD_configureIO:
  3052                           	opt stack 25
  3053                           
  3054                           ;IO_LCD.c: 158: TRISJbits.TRISJ7 = 0;
  3055                           
  3056                           ;incstack = 0
  3057  001EB2  9E9A               	bcf	3994,7,c	;volatile
  3058                           
  3059                           ;IO_LCD.c: 159: TRISJbits.TRISJ6 = 0;
  3060  001EB4  9C9A               	bcf	3994,6,c	;volatile
  3061                           
  3062                           ;IO_LCD.c: 160: TRISJbits.TRISJ5 = 0;
  3063  001EB6  9A9A               	bcf	3994,5,c	;volatile
  3064                           
  3065                           ;IO_LCD.c: 161: TRISJbits.TRISJ4 = 0;
  3066  001EB8  989A               	bcf	3994,4,c	;volatile
  3067                           
  3068                           ;IO_LCD.c: 165: TRISJbits.TRISJ2 = 0;
  3069  001EBA  949A               	bcf	3994,2,c	;volatile
  3070                           
  3071                           ;IO_LCD.c: 166: TRISJbits.TRISJ3 = 0;
  3072  001EBC  969A               	bcf	3994,3,c	;volatile
  3073                           
  3074                           ;IO_LCD.c: 168: LATJbits.LATJ2 = 0;
  3075  001EBE  9491               	bcf	3985,2,c	;volatile
  3076                           
  3077                           ;IO_LCD.c: 169: LATJbits.LATJ3 = 0;
  3078  001EC0  9691               	bcf	3985,3,c	;volatile
  3079                           
  3080                           ;IO_LCD.c: 171: write_port(0x00);
  3081  001EC2  0E00               	movlw	0
  3082  001EC4  EC4C  F00D         	call	_write_port
  3083  001EC8  0012               	return		;funcret
  3084  001ECA                     __end_of_IO_LCD_configureIO:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           intcon	equ	0xFF2
  3093                           intcon2	equ	0xFF1
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           indf2	equ	0xFDF
  3097                           postinc2	equ	0xFDE
  3098                           postdec2	equ	0xFDD
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function _write_port *****************
  3104 ;; Defined at:
  3105 ;;		line 7 in file "IO_LCD.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  data            1    wreg     unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  data            1   19[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;		None               void
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    4
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_IO_LCD_configureIO
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text19
  3134  001A98                     __ptext19:
  3135                           	opt stack 0
  3136  001A98                     _write_port:
  3137                           	opt stack 25
  3138                           
  3139                           ;incstack = 0
  3140                           ;write_port@data stored from wreg
  3141  001A98  6E14               	movwf	write_port@data,c
  3142                           
  3143                           ;IO_LCD.c: 24: LATJbits.LATJ7 = (data >> 3) & 0x01;
  3144  001A9A  C014  F013         	movff	write_port@data,??_write_port
  3145  001A9E  90D8               	bcf	status,0,c
  3146  001AA0  3213               	rrcf	??_write_port,f,c
  3147  001AA2  90D8               	bcf	status,0,c
  3148  001AA4  3213               	rrcf	??_write_port,f,c
  3149  001AA6  90D8               	bcf	status,0,c
  3150  001AA8  3213               	rrcf	??_write_port,f,c
  3151  001AAA  0E01               	movlw	1
  3152  001AAC  1613               	andwf	??_write_port,f,c
  3153  001AAE  3213               	rrcf	??_write_port,f,c
  3154  001AB0  3213               	rrcf	??_write_port,f,c
  3155  001AB2  5091               	movf	3985,w,c	;volatile
  3156  001AB4  1813               	xorwf	??_write_port,w,c
  3157  001AB6  0B7F               	andlw	-129
  3158  001AB8  1813               	xorwf	??_write_port,w,c
  3159  001ABA  6E91               	movwf	3985,c	;volatile
  3160                           
  3161                           ;IO_LCD.c: 25: LATJbits.LATJ6 = (data >> 2) & 0x01;
  3162  001ABC  C014  F013         	movff	write_port@data,??_write_port
  3163  001AC0  90D8               	bcf	status,0,c
  3164  001AC2  3213               	rrcf	??_write_port,f,c
  3165  001AC4  90D8               	bcf	status,0,c
  3166  001AC6  3213               	rrcf	??_write_port,f,c
  3167  001AC8  0E01               	movlw	1
  3168  001ACA  1613               	andwf	??_write_port,f,c
  3169  001ACC  3A13               	swapf	??_write_port,f,c
  3170  001ACE  4613               	rlncf	??_write_port,f,c
  3171  001AD0  4613               	rlncf	??_write_port,f,c
  3172  001AD2  5091               	movf	3985,w,c	;volatile
  3173  001AD4  1813               	xorwf	??_write_port,w,c
  3174  001AD6  0BBF               	andlw	-65
  3175  001AD8  1813               	xorwf	??_write_port,w,c
  3176  001ADA  6E91               	movwf	3985,c	;volatile
  3177                           
  3178                           ;IO_LCD.c: 26: LATJbits.LATJ5 = (data >> 1) & 0x01;
  3179  001ADC  C014  F013         	movff	write_port@data,??_write_port
  3180  001AE0  90D8               	bcf	status,0,c
  3181  001AE2  3213               	rrcf	??_write_port,f,c
  3182  001AE4  0E01               	movlw	1
  3183  001AE6  1613               	andwf	??_write_port,f,c
  3184  001AE8  3A13               	swapf	??_write_port,f,c
  3185  001AEA  4613               	rlncf	??_write_port,f,c
  3186  001AEC  5091               	movf	3985,w,c	;volatile
  3187  001AEE  1813               	xorwf	??_write_port,w,c
  3188  001AF0  0BDF               	andlw	-33
  3189  001AF2  1813               	xorwf	??_write_port,w,c
  3190  001AF4  6E91               	movwf	3985,c	;volatile
  3191                           
  3192                           ;IO_LCD.c: 27: LATJbits.LATJ4 = data & 0x01;
  3193  001AF6  C014  F013         	movff	write_port@data,??_write_port
  3194  001AFA  0E01               	movlw	1
  3195  001AFC  1613               	andwf	??_write_port,f,c
  3196  001AFE  3A13               	swapf	??_write_port,f,c
  3197  001B00  5091               	movf	3985,w,c	;volatile
  3198  001B02  1813               	xorwf	??_write_port,w,c
  3199  001B04  0BEF               	andlw	-17
  3200  001B06  1813               	xorwf	??_write_port,w,c
  3201  001B08  6E91               	movwf	3985,c	;volatile
  3202  001B0A  0012               	return		;funcret
  3203  001B0C                     __end_of_write_port:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           intcon	equ	0xFF2
  3212                           intcon2	equ	0xFF1
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           fsr2h	equ	0xFDA
  3219                           fsr2l	equ	0xFD9
  3220                           status	equ	0xFD8
  3221                           
  3222 ;; *************** function _IO_LCD_SetCursor *****************
  3223 ;; Defined at:
  3224 ;;		line 272 in file "IO_LCD.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  row             1    wreg     unsigned char 
  3227 ;;  col             1   21[COMRAM] unsigned char 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  row             1   22[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;Total ram usage:        2 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    5
  3246 ;; This function calls:
  3247 ;;		_write_cmd
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text20
  3254  001C90                     __ptext20:
  3255                           	opt stack 0
  3256  001C90                     _IO_LCD_SetCursor:
  3257                           	opt stack 25
  3258                           
  3259                           ;incstack = 0
  3260                           ;IO_LCD_SetCursor@row stored from wreg
  3261  001C90  6E17               	movwf	IO_LCD_SetCursor@row,c
  3262                           
  3263                           ;IO_LCD.c: 274: switch(row) {
  3264  001C92  D017               	goto	l2500
  3265  001C94                     l2490:
  3266                           
  3267                           ;IO_LCD.c: 276: write_cmd(0x80 | col - 1);
  3268  001C94  0416               	decf	IO_LCD_SetCursor@col,w,c
  3269  001C96  0980               	iorlw	128
  3270  001C98  EC69  F00B         	call	_write_cmd
  3271                           
  3272                           ;IO_LCD.c: 277: break;
  3273  001C9C  D020               	goto	l2502
  3274  001C9E                     l2492:
  3275                           
  3276                           ;IO_LCD.c: 279: write_cmd(0x80 | col + 39);
  3277  001C9E  5016               	movf	IO_LCD_SetCursor@col,w,c
  3278  001CA0  0F27               	addlw	39
  3279  001CA2  0980               	iorlw	128
  3280  001CA4  EC69  F00B         	call	_write_cmd
  3281                           
  3282                           ;IO_LCD.c: 280: break;
  3283  001CA8  D01A               	goto	l2502
  3284  001CAA                     l2494:
  3285                           
  3286                           ;IO_LCD.c: 282: write_cmd(0x80 | col + 19);
  3287  001CAA  5016               	movf	IO_LCD_SetCursor@col,w,c
  3288  001CAC  0F13               	addlw	19
  3289  001CAE  0980               	iorlw	128
  3290  001CB0  EC69  F00B         	call	_write_cmd
  3291                           
  3292                           ;IO_LCD.c: 283: break;
  3293  001CB4  D014               	goto	l2502
  3294  001CB6                     l2496:
  3295                           
  3296                           ;IO_LCD.c: 285: write_cmd(0x80 | col + 83);
  3297  001CB6  5016               	movf	IO_LCD_SetCursor@col,w,c
  3298  001CB8  0F53               	addlw	83
  3299  001CBA  0980               	iorlw	128
  3300  001CBC  EC69  F00B         	call	_write_cmd
  3301                           
  3302                           ;IO_LCD.c: 289: }
  3303                           
  3304                           ;IO_LCD.c: 288: break;
  3305                           
  3306                           ;IO_LCD.c: 287: default:
  3307                           
  3308                           ;IO_LCD.c: 286: break;
  3309  001CC0  D00E               	goto	l2502
  3310  001CC2                     l2500:
  3311  001CC2  5017               	movf	IO_LCD_SetCursor@row,w,c
  3312                           
  3313                           ; Switch size 1, requested type "space"
  3314                           ; Number of cases is 4, Range of values is 1 to 4
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte           13     7 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319  001CC4  0A01               	xorlw	1	; case 1
  3320  001CC6  B4D8               	btfsc	status,2,c
  3321  001CC8  D7E5               	goto	l2490
  3322  001CCA  0A03               	xorlw	3	; case 2
  3323  001CCC  B4D8               	btfsc	status,2,c
  3324  001CCE  D7E7               	goto	l2492
  3325  001CD0  0A01               	xorlw	1	; case 3
  3326  001CD2  B4D8               	btfsc	status,2,c
  3327  001CD4  D7EA               	goto	l2494
  3328  001CD6  0A07               	xorlw	7	; case 4
  3329  001CD8  B4D8               	btfsc	status,2,c
  3330  001CDA  D7ED               	goto	l2496
  3331  001CDC  D000               	goto	l2502
  3332  001CDE                     l2502:
  3333                           
  3334                           ;IO_LCD.c: 291: _delay((unsigned long)((60)*(40000000/4000000.0)));
  3335  001CDE  0EC8               	movlw	200
  3336  001CE0                     u2657:
  3337  001CE0  2EE8               	decfsz	wreg,f,c
  3338  001CE2  D7FE               	goto	u2657
  3339  001CE4  0012               	return		;funcret
  3340  001CE6                     __end_of_IO_LCD_SetCursor:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           tblptrh	equ	0xFF7
  3344                           tblptrl	equ	0xFF6
  3345                           tablat	equ	0xFF5
  3346                           prodh	equ	0xFF4
  3347                           prodl	equ	0xFF3
  3348                           intcon	equ	0xFF2
  3349                           intcon2	equ	0xFF1
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _IO_LCD_Init *****************
  3360 ;; Defined at:
  3361 ;;		line 176 in file "IO_LCD.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;		None               void
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    5
  3382 ;; This function calls:
  3383 ;;		_write_cmd
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text21
  3390  0017EA                     __ptext21:
  3391                           	opt stack 0
  3392  0017EA                     _IO_LCD_Init:
  3393                           	opt stack 25
  3394                           
  3395                           ;IO_LCD.c: 178: _delay((unsigned long)((10)*(40000000/4000.0)));
  3396                           
  3397                           ;incstack = 0
  3398  0017EA  0E82               	movlw	130
  3399  0017EC  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3400  0017EE  0EDE               	movlw	222
  3401  0017F0                     u2667:
  3402  0017F0  2EE8               	decfsz	wreg,f,c
  3403  0017F2  D7FE               	goto	u2667
  3404  0017F4  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3405  0017F6  D7FC               	goto	u2667
  3406                           
  3407                           ;IO_LCD.c: 179: _delay((unsigned long)((10)*(40000000/4000.0)));
  3408  0017F8  0E82               	movlw	130
  3409  0017FA  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3410  0017FC  0EDE               	movlw	222
  3411  0017FE                     u2677:
  3412  0017FE  2EE8               	decfsz	wreg,f,c
  3413  001800  D7FE               	goto	u2677
  3414  001802  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3415  001804  D7FC               	goto	u2677
  3416                           
  3417                           ;IO_LCD.c: 180: _delay((unsigned long)((10)*(40000000/4000.0)));
  3418  001806  0E82               	movlw	130
  3419  001808  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3420  00180A  0EDE               	movlw	222
  3421  00180C                     u2687:
  3422  00180C  2EE8               	decfsz	wreg,f,c
  3423  00180E  D7FE               	goto	u2687
  3424  001810  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3425  001812  D7FC               	goto	u2687
  3426                           
  3427                           ;IO_LCD.c: 181: _delay((unsigned long)((10)*(40000000/4000.0)));
  3428  001814  0E82               	movlw	130
  3429  001816  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3430  001818  0EDE               	movlw	222
  3431  00181A                     u2697:
  3432  00181A  2EE8               	decfsz	wreg,f,c
  3433  00181C  D7FE               	goto	u2697
  3434  00181E  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3435  001820  D7FC               	goto	u2697
  3436                           
  3437                           ;IO_LCD.c: 183: write_cmd(0x30);
  3438  001822  0E30               	movlw	48
  3439  001824  EC69  F00B         	call	_write_cmd
  3440                           
  3441                           ;IO_LCD.c: 184: _delay((unsigned long)((5)*(40000000/4000.0)));
  3442  001828  0E41               	movlw	65
  3443  00182A  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3444  00182C  0EEE               	movlw	238
  3445  00182E                     u2707:
  3446  00182E  2EE8               	decfsz	wreg,f,c
  3447  001830  D7FE               	goto	u2707
  3448  001832  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3449  001834  D7FC               	goto	u2707
  3450  001836  D000               	nop2	
  3451                           
  3452                           ;IO_LCD.c: 185: write_cmd(0x30);
  3453  001838  0E30               	movlw	48
  3454  00183A  EC69  F00B         	call	_write_cmd
  3455                           
  3456                           ;IO_LCD.c: 186: _delay((unsigned long)((150)*(40000000/4000000.0)));
  3457  00183E  0EFA               	movlw	250
  3458  001840                     u2717:
  3459  001840  D000               	nop2	
  3460  001842  F000               	nop	
  3461  001844  2EE8               	decfsz	wreg,f,c
  3462  001846  D7FC               	goto	u2717
  3463                           
  3464                           ;IO_LCD.c: 187: write_cmd(0x30);
  3465  001848  0E30               	movlw	48
  3466  00184A  EC69  F00B         	call	_write_cmd
  3467                           
  3468                           ;IO_LCD.c: 188: _delay((unsigned long)((150)*(40000000/4000000.0)));
  3469  00184E  0EFA               	movlw	250
  3470  001850                     u2727:
  3471  001850  D000               	nop2	
  3472  001852  F000               	nop	
  3473  001854  2EE8               	decfsz	wreg,f,c
  3474  001856  D7FC               	goto	u2727
  3475                           
  3476                           ;IO_LCD.c: 198: write_cmd(0x20);
  3477  001858  0E20               	movlw	32
  3478  00185A  EC69  F00B         	call	_write_cmd
  3479                           
  3480                           ;IO_LCD.c: 202: _delay((unsigned long)((60)*(40000000/4000000.0)));
  3481  00185E  0EC8               	movlw	200
  3482  001860                     u2737:
  3483  001860  2EE8               	decfsz	wreg,f,c
  3484  001862  D7FE               	goto	u2737
  3485                           
  3486                           ;IO_LCD.c: 203: write_cmd(0x08);
  3487  001864  0E08               	movlw	8
  3488  001866  EC69  F00B         	call	_write_cmd
  3489                           
  3490                           ;IO_LCD.c: 204: _delay((unsigned long)((60)*(40000000/4000000.0)));
  3491  00186A  0EC8               	movlw	200
  3492  00186C                     u2747:
  3493  00186C  2EE8               	decfsz	wreg,f,c
  3494  00186E  D7FE               	goto	u2747
  3495                           
  3496                           ;IO_LCD.c: 205: write_cmd(0x01);
  3497  001870  0E01               	movlw	1
  3498  001872  EC69  F00B         	call	_write_cmd
  3499                           
  3500                           ;IO_LCD.c: 206: _delay((unsigned long)((4)*(40000000/4000.0)));
  3501  001876  0E34               	movlw	52
  3502  001878  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  3503  00187A  0EF2               	movlw	242
  3504  00187C                     u2757:
  3505  00187C  2EE8               	decfsz	wreg,f,c
  3506  00187E  D7FE               	goto	u2757
  3507  001880  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  3508  001882  D7FC               	goto	u2757
  3509                           
  3510                           ;IO_LCD.c: 207: write_cmd(0x06);
  3511  001884  0E06               	movlw	6
  3512  001886  EC69  F00B         	call	_write_cmd
  3513                           
  3514                           ;IO_LCD.c: 208: _delay((unsigned long)((60)*(40000000/4000000.0)));
  3515  00188A  0EC8               	movlw	200
  3516  00188C                     u2767:
  3517  00188C  2EE8               	decfsz	wreg,f,c
  3518  00188E  D7FE               	goto	u2767
  3519                           
  3520                           ;IO_LCD.c: 209: write_cmd(0x0C);
  3521  001890  0E0C               	movlw	12
  3522  001892  EC69  F00B         	call	_write_cmd
  3523                           
  3524                           ;IO_LCD.c: 210: _delay((unsigned long)((60)*(40000000/4000000.0)));
  3525  001896  0EC8               	movlw	200
  3526  001898                     u2777:
  3527  001898  2EE8               	decfsz	wreg,f,c
  3528  00189A  D7FE               	goto	u2777
  3529                           
  3530                           ;IO_LCD.c: 212: lcd_state.blink_on = 0;
  3531  00189C  9443               	bcf	_lcd_state+2,2,c
  3532                           
  3533                           ;IO_LCD.c: 213: lcd_state.cursor_on = 0;
  3534  00189E  9243               	bcf	_lcd_state+2,1,c
  3535                           
  3536                           ;IO_LCD.c: 214: lcd_state.display_on = 1;
  3537  0018A0  8043               	bsf	_lcd_state+2,0,c
  3538                           
  3539                           ;IO_LCD.c: 215: lcd_state.DDRAM_addr = 0x00;
  3540  0018A2  0E00               	movlw	0
  3541  0018A4  6E41               	movwf	_lcd_state,c
  3542                           
  3543                           ;IO_LCD.c: 216: lcd_state.CGRAM_addr = 0x00;
  3544  0018A6  0E00               	movlw	0
  3545  0018A8  6E42               	movwf	_lcd_state+1,c
  3546  0018AA  0012               	return		;funcret
  3547  0018AC                     __end_of_IO_LCD_Init:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           intcon2	equ	0xFF1
  3557                           postinc0	equ	0xFEE
  3558                           wreg	equ	0xFE8
  3559                           indf2	equ	0xFDF
  3560                           postinc2	equ	0xFDE
  3561                           postdec2	equ	0xFDD
  3562                           fsr2h	equ	0xFDA
  3563                           fsr2l	equ	0xFD9
  3564                           status	equ	0xFD8
  3565                           
  3566 ;; *************** function _IO_LCD_ClearDisplay *****************
  3567 ;; Defined at:
  3568 ;;		line 227 in file "IO_LCD.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;Total ram usage:        1 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    5
  3589 ;; This function calls:
  3590 ;;		_write_cmd
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text22
  3597  001ECA                     __ptext22:
  3598                           	opt stack 0
  3599  001ECA                     _IO_LCD_ClearDisplay:
  3600                           	opt stack 25
  3601                           
  3602                           ;IO_LCD.c: 229: write_cmd(0x01);
  3603                           
  3604                           ;incstack = 0
  3605  001ECA  0E01               	movlw	1
  3606  001ECC  EC69  F00B         	call	_write_cmd
  3607                           
  3608                           ;IO_LCD.c: 230: _delay((unsigned long)((2)*(40000000/4000.0)));
  3609  001ED0  0E1A               	movlw	26
  3610  001ED2  6E16               	movwf	??_IO_LCD_ClearDisplay& (0+255),c
  3611  001ED4  0EF8               	movlw	248
  3612  001ED6                     u2787:
  3613  001ED6  2EE8               	decfsz	wreg,f,c
  3614  001ED8  D7FE               	goto	u2787
  3615  001EDA  2E16               	decfsz	??_IO_LCD_ClearDisplay& (0+255),f,c
  3616  001EDC  D7FC               	goto	u2787
  3617  001EDE  D000               	nop2	
  3618  001EE0  0012               	return		;funcret
  3619  001EE2                     __end_of_IO_LCD_ClearDisplay:
  3620                           	opt stack 0
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           prodh	equ	0xFF4
  3626                           prodl	equ	0xFF3
  3627                           intcon	equ	0xFF2
  3628                           intcon2	equ	0xFF1
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _write_cmd *****************
  3639 ;; Defined at:
  3640 ;;		line 33 in file "IO_LCD.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  cmd             1    wreg     unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  cmd             1   20[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:        3 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    4
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_IO_LCD_Init
  3665 ;;		_IO_LCD_ClearDisplay
  3666 ;;		_IO_LCD_SetCursor
  3667 ;;		_IO_LCD_CursorHome
  3668 ;;		_IO_LCD_EnableCursor
  3669 ;;		_IO_LCD_DisableCursor
  3670 ;;		_IO_LCD_EnableDisplay
  3671 ;;		_IO_LCD_DisableDisplay
  3672 ;;		_IO_LCD_EnableBlink
  3673 ;;		_IO_LCD_DisableBlink
  3674 ;;		_IO_LCD_SetEntryMode
  3675 ;;		_IO_LCD_ShiftCursor
  3676 ;;		_IO_LCD_ShiftDisplay
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text23
  3681  0016D2                     __ptext23:
  3682                           	opt stack 0
  3683  0016D2                     _write_cmd:
  3684                           	opt stack 25
  3685                           
  3686                           ;incstack = 0
  3687                           ;write_cmd@cmd stored from wreg
  3688  0016D2  6E15               	movwf	write_cmd@cmd,c
  3689                           
  3690                           ;IO_LCD.c: 35: LATJbits.LATJ3 = 0;
  3691  0016D4  9691               	bcf	3985,3,c	;volatile
  3692                           
  3693                           ;IO_LCD.c: 60: LATJbits.LATJ7 = (cmd >> 7) & 0x01;
  3694  0016D6  6A13               	clrf	??_write_cmd& (0+255),c
  3695  0016D8  AE15               	btfss	write_cmd@cmd,7,c
  3696  0016DA  D001               	bra	u1865
  3697  0016DC  2A13               	incf	??_write_cmd& (0+255),f,c
  3698  0016DE                     u1865:
  3699  0016DE  0E01               	movlw	1
  3700  0016E0  1613               	andwf	??_write_cmd,f,c
  3701  0016E2  3213               	rrcf	??_write_cmd,f,c
  3702  0016E4  3213               	rrcf	??_write_cmd,f,c
  3703  0016E6  5091               	movf	3985,w,c	;volatile
  3704  0016E8  1813               	xorwf	??_write_cmd,w,c
  3705  0016EA  0B7F               	andlw	-129
  3706  0016EC  1813               	xorwf	??_write_cmd,w,c
  3707  0016EE  6E91               	movwf	3985,c	;volatile
  3708                           
  3709                           ;IO_LCD.c: 61: LATJbits.LATJ6 = (cmd >> 6) & 0x01;
  3710  0016F0  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3711  0016F4  0E06               	movlw	6
  3712  0016F6  6E14               	movwf	(??_write_cmd+1)& (0+255),c
  3713  0016F8                     u1875:
  3714  0016F8  90D8               	bcf	status,0,c
  3715  0016FA  3213               	rrcf	??_write_cmd,f,c
  3716  0016FC  2E14               	decfsz	(??_write_cmd+1)& (0+255),f,c
  3717  0016FE  D7FC               	goto	u1875
  3718  001700  0E01               	movlw	1
  3719  001702  1613               	andwf	??_write_cmd,f,c
  3720  001704  3A13               	swapf	??_write_cmd,f,c
  3721  001706  4613               	rlncf	??_write_cmd,f,c
  3722  001708  4613               	rlncf	??_write_cmd,f,c
  3723  00170A  5091               	movf	3985,w,c	;volatile
  3724  00170C  1813               	xorwf	??_write_cmd,w,c
  3725  00170E  0BBF               	andlw	-65
  3726  001710  1813               	xorwf	??_write_cmd,w,c
  3727  001712  6E91               	movwf	3985,c	;volatile
  3728                           
  3729                           ;IO_LCD.c: 62: LATJbits.LATJ5 = (cmd >> 5) & 0x01;
  3730  001714  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3731  001718  0E05               	movlw	5
  3732  00171A  6E14               	movwf	(??_write_cmd+1)& (0+255),c
  3733  00171C                     u1885:
  3734  00171C  90D8               	bcf	status,0,c
  3735  00171E  3213               	rrcf	??_write_cmd,f,c
  3736  001720  2E14               	decfsz	(??_write_cmd+1)& (0+255),f,c
  3737  001722  D7FC               	goto	u1885
  3738  001724  0E01               	movlw	1
  3739  001726  1613               	andwf	??_write_cmd,f,c
  3740  001728  3A13               	swapf	??_write_cmd,f,c
  3741  00172A  4613               	rlncf	??_write_cmd,f,c
  3742  00172C  5091               	movf	3985,w,c	;volatile
  3743  00172E  1813               	xorwf	??_write_cmd,w,c
  3744  001730  0BDF               	andlw	-33
  3745  001732  1813               	xorwf	??_write_cmd,w,c
  3746  001734  6E91               	movwf	3985,c	;volatile
  3747                           
  3748                           ;IO_LCD.c: 63: LATJbits.LATJ4 = (cmd >> 4) & 0x01;
  3749  001736  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3750  00173A  3A13               	swapf	??_write_cmd,f,c
  3751  00173C  0E0F               	movlw	15
  3752  00173E  1613               	andwf	??_write_cmd,f,c
  3753  001740  0E01               	movlw	1
  3754  001742  1613               	andwf	??_write_cmd,f,c
  3755  001744  3A13               	swapf	??_write_cmd,f,c
  3756  001746  5091               	movf	3985,w,c	;volatile
  3757  001748  1813               	xorwf	??_write_cmd,w,c
  3758  00174A  0BEF               	andlw	-17
  3759  00174C  1813               	xorwf	??_write_cmd,w,c
  3760  00174E  6E91               	movwf	3985,c	;volatile
  3761                           
  3762                           ;IO_LCD.c: 65: LATJbits.LATJ2 = 1;
  3763  001750  8491               	bsf	3985,2,c	;volatile
  3764                           
  3765                           ;IO_LCD.c: 66: _delay((unsigned long)((20)*(40000000/4000000.0)));
  3766  001752  0E42               	movlw	66
  3767  001754                     u2797:
  3768  001754  2EE8               	decfsz	wreg,f,c
  3769  001756  D7FE               	goto	u2797
  3770  001758  D000               	nop2		;nop
  3771                           
  3772                           ;IO_LCD.c: 67: LATJbits.LATJ2 = 0;
  3773  00175A  9491               	bcf	3985,2,c	;volatile
  3774                           
  3775                           ;IO_LCD.c: 68: _delay((unsigned long)((20)*(40000000/4000000.0)));
  3776  00175C  0E42               	movlw	66
  3777  00175E                     u2807:
  3778  00175E  2EE8               	decfsz	wreg,f,c
  3779  001760  D7FE               	goto	u2807
  3780  001762  D000               	nop2		;nop
  3781                           
  3782                           ;IO_LCD.c: 70: LATJbits.LATJ7 = (cmd >> 3) & 0x01;
  3783  001764  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3784  001768  90D8               	bcf	status,0,c
  3785  00176A  3213               	rrcf	??_write_cmd,f,c
  3786  00176C  90D8               	bcf	status,0,c
  3787  00176E  3213               	rrcf	??_write_cmd,f,c
  3788  001770  90D8               	bcf	status,0,c
  3789  001772  3213               	rrcf	??_write_cmd,f,c
  3790  001774  0E01               	movlw	1
  3791  001776  1613               	andwf	??_write_cmd,f,c
  3792  001778  3213               	rrcf	??_write_cmd,f,c
  3793  00177A  3213               	rrcf	??_write_cmd,f,c
  3794  00177C  5091               	movf	3985,w,c	;volatile
  3795  00177E  1813               	xorwf	??_write_cmd,w,c
  3796  001780  0B7F               	andlw	-129
  3797  001782  1813               	xorwf	??_write_cmd,w,c
  3798  001784  6E91               	movwf	3985,c	;volatile
  3799                           
  3800                           ;IO_LCD.c: 71: LATJbits.LATJ6 = (cmd >> 2) & 0x01;
  3801  001786  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3802  00178A  90D8               	bcf	status,0,c
  3803  00178C  3213               	rrcf	??_write_cmd,f,c
  3804  00178E  90D8               	bcf	status,0,c
  3805  001790  3213               	rrcf	??_write_cmd,f,c
  3806  001792  0E01               	movlw	1
  3807  001794  1613               	andwf	??_write_cmd,f,c
  3808  001796  3A13               	swapf	??_write_cmd,f,c
  3809  001798  4613               	rlncf	??_write_cmd,f,c
  3810  00179A  4613               	rlncf	??_write_cmd,f,c
  3811  00179C  5091               	movf	3985,w,c	;volatile
  3812  00179E  1813               	xorwf	??_write_cmd,w,c
  3813  0017A0  0BBF               	andlw	-65
  3814  0017A2  1813               	xorwf	??_write_cmd,w,c
  3815  0017A4  6E91               	movwf	3985,c	;volatile
  3816                           
  3817                           ;IO_LCD.c: 72: LATJbits.LATJ5 = (cmd >> 1) & 0x01;
  3818  0017A6  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3819  0017AA  90D8               	bcf	status,0,c
  3820  0017AC  3213               	rrcf	??_write_cmd,f,c
  3821  0017AE  0E01               	movlw	1
  3822  0017B0  1613               	andwf	??_write_cmd,f,c
  3823  0017B2  3A13               	swapf	??_write_cmd,f,c
  3824  0017B4  4613               	rlncf	??_write_cmd,f,c
  3825  0017B6  5091               	movf	3985,w,c	;volatile
  3826  0017B8  1813               	xorwf	??_write_cmd,w,c
  3827  0017BA  0BDF               	andlw	-33
  3828  0017BC  1813               	xorwf	??_write_cmd,w,c
  3829  0017BE  6E91               	movwf	3985,c	;volatile
  3830                           
  3831                           ;IO_LCD.c: 73: LATJbits.LATJ4 = cmd & 0x01;
  3832  0017C0  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  3833  0017C4  0E01               	movlw	1
  3834  0017C6  1613               	andwf	??_write_cmd,f,c
  3835  0017C8  3A13               	swapf	??_write_cmd,f,c
  3836  0017CA  5091               	movf	3985,w,c	;volatile
  3837  0017CC  1813               	xorwf	??_write_cmd,w,c
  3838  0017CE  0BEF               	andlw	-17
  3839  0017D0  1813               	xorwf	??_write_cmd,w,c
  3840  0017D2  6E91               	movwf	3985,c	;volatile
  3841                           
  3842                           ;IO_LCD.c: 75: LATJbits.LATJ2 = 1;
  3843  0017D4  8491               	bsf	3985,2,c	;volatile
  3844                           
  3845                           ;IO_LCD.c: 76: _delay((unsigned long)((20)*(40000000/4000000.0)));
  3846  0017D6  0E42               	movlw	66
  3847  0017D8                     u2817:
  3848  0017D8  2EE8               	decfsz	wreg,f,c
  3849  0017DA  D7FE               	goto	u2817
  3850  0017DC  D000               	nop2		;nop
  3851                           
  3852                           ;IO_LCD.c: 77: LATJbits.LATJ2 = 0;
  3853  0017DE  9491               	bcf	3985,2,c	;volatile
  3854                           
  3855                           ;IO_LCD.c: 78: _delay((unsigned long)((20)*(40000000/4000000.0)));
  3856  0017E0  0E42               	movlw	66
  3857  0017E2                     u2827:
  3858  0017E2  2EE8               	decfsz	wreg,f,c
  3859  0017E4  D7FE               	goto	u2827
  3860  0017E6  D000               	nop2		;nop
  3861  0017E8  0012               	return		;funcret
  3862  0017EA                     __end_of_write_cmd:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           intcon	equ	0xFF2
  3871                           intcon2	equ	0xFF1
  3872                           postinc0	equ	0xFEE
  3873                           wreg	equ	0xFE8
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           postdec2	equ	0xFDD
  3877                           fsr2h	equ	0xFDA
  3878                           fsr2l	equ	0xFD9
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _IO_Buttons_getButton *****************
  3882 ;; Defined at:
  3883 ;;		line 138 in file "IO_Buttons.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  button          1    wreg     enum E7043
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  button          1   19[COMRAM] enum E7043
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      unsigned char 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    5
  3904 ;; This function calls:
  3905 ;;		_scan_buttons
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text24
  3912  001B0C                     __ptext24:
  3913                           	opt stack 0
  3914  001B0C                     _IO_Buttons_getButton:
  3915                           	opt stack 25
  3916                           
  3917                           ;incstack = 0
  3918                           ;IO_Buttons_getButton@button stored from wreg
  3919  001B0C  6E14               	movwf	IO_Buttons_getButton@button,c
  3920                           
  3921                           ;IO_Buttons.c: 140: if(buttons_use_interrupts == 0) {
  3922  001B0E  5038               	movf	_buttons_use_interrupts,w,c	;volatile
  3923  001B10  A4D8               	btfss	status,2,c
  3924  001B12  D01D               	goto	l2428
  3925                           
  3926                           ;IO_Buttons.c: 141: scan_buttons();
  3927  001B14  EC56  F00C         	call	_scan_buttons	;wreg free
  3928                           
  3929                           ;IO_Buttons.c: 142: }
  3930                           ;IO_Buttons.c: 144: switch(button) {
  3931  001B18  D01A               	goto	l2428
  3932  001B1A                     l2402:
  3933                           
  3934                           ;IO_Buttons.c: 146: return(button_state_bits.PB_1);
  3935  001B1A  A044               	btfss	_button_state_bits,0,c	;volatile
  3936  001B1C  D016               	goto	u2100
  3937  001B1E  D013               	goto	L4
  3938  001B20  D02A               	goto	l65
  3939  001B22                     l2406:
  3940                           
  3941                           ;IO_Buttons.c: 148: return(button_state_bits.PB_2);
  3942  001B22  A244               	btfss	_button_state_bits,1,c	;volatile
  3943  001B24  D012               	goto	u2100
  3944  001B26  D00F               	goto	L4
  3945  001B28  D026               	goto	l65
  3946  001B2A                     l2410:
  3947                           
  3948                           ;IO_Buttons.c: 150: return(button_state_bits.PB_3);
  3949  001B2A  A444               	btfss	_button_state_bits,2,c	;volatile
  3950  001B2C  D00E               	goto	u2100
  3951  001B2E  D00B               	goto	L4
  3952  001B30  D022               	goto	l65
  3953  001B32                     l2414:
  3954                           
  3955                           ;IO_Buttons.c: 152: return(button_state_bits.PB_4);
  3956  001B32  A644               	btfss	_button_state_bits,3,c	;volatile
  3957  001B34  D00A               	goto	u2100
  3958  001B36  D007               	goto	L4
  3959  001B38  D01E               	goto	l65
  3960  001B3A                     l2418:
  3961                           
  3962                           ;IO_Buttons.c: 154: return(button_state_bits.PB_5);
  3963  001B3A  A844               	btfss	_button_state_bits,4,c	;volatile
  3964  001B3C  D006               	goto	u2100
  3965  001B3E  D003               	goto	L4
  3966  001B40  D01A               	goto	l65
  3967  001B42                     l2422:
  3968                           
  3969                           ;IO_Buttons.c: 156: return(button_state_bits.PB_6);
  3970  001B42  AA44               	btfss	_button_state_bits,5,c	;volatile
  3971  001B44  D002               	goto	u2100
  3972  001B46                     L4:
  3973  001B46  0E01               	movlw	1
  3974  001B48  D016               	goto	l65
  3975  001B4A                     u2100:
  3976  001B4A  0E00               	movlw	0
  3977                           
  3978                           ;IO_Buttons.c: 159: }
  3979                           
  3980                           ;IO_Buttons.c: 158: break;
  3981                           
  3982                           ;IO_Buttons.c: 157: default:
  3983  001B4C  D014               	goto	l65
  3984  001B4E                     l2428:
  3985  001B4E  5014               	movf	IO_Buttons_getButton@button,w,c
  3986                           
  3987                           ; Switch size 1, requested type "space"
  3988                           ; Number of cases is 6, Range of values is 0 to 5
  3989                           ; switch strategies available:
  3990                           ; Name         Instructions Cycles
  3991                           ; simple_byte           19    10 (average)
  3992                           ;	Chosen strategy is simple_byte
  3993  001B50  0A00               	xorlw	0	; case 0
  3994  001B52  B4D8               	btfsc	status,2,c
  3995  001B54  D7E2               	goto	l2402
  3996  001B56  0A01               	xorlw	1	; case 1
  3997  001B58  B4D8               	btfsc	status,2,c
  3998  001B5A  D7E3               	goto	l2406
  3999  001B5C  0A03               	xorlw	3	; case 2
  4000  001B5E  B4D8               	btfsc	status,2,c
  4001  001B60  D7E4               	goto	l2410
  4002  001B62  0A01               	xorlw	1	; case 3
  4003  001B64  B4D8               	btfsc	status,2,c
  4004  001B66  D7E5               	goto	l2414
  4005  001B68  0A07               	xorlw	7	; case 4
  4006  001B6A  B4D8               	btfsc	status,2,c
  4007  001B6C  D7E6               	goto	l2418
  4008  001B6E  0A01               	xorlw	1	; case 5
  4009  001B70  B4D8               	btfsc	status,2,c
  4010  001B72  D7E7               	goto	l2422
  4011  001B74  D000               	goto	l65
  4012  001B76                     l65:
  4013  001B76  0012               	return		;funcret
  4014  001B78                     __end_of_IO_Buttons_getButton:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           intcon2	equ	0xFF1
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           indf2	equ	0xFDF
  4027                           postinc2	equ	0xFDE
  4028                           postdec2	equ	0xFDD
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _scan_buttons *****************
  4034 ;; Defined at:
  4035 ;;		line 52 in file "IO_Buttons.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;		None               void
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;Total ram usage:        1 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    4
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_IO_Buttons_getButton
  4060 ;;		_IO_Buttons_getAllButtons
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text25
  4065  0018AC                     __ptext25:
  4066                           	opt stack 0
  4067  0018AC                     _scan_buttons:
  4068                           	opt stack 25
  4069                           
  4070                           ;IO_Buttons.c: 54: if(PORTB) {
  4071                           
  4072                           ;incstack = 0
  4073  0018AC  5081               	movf	3969,w,c	;volatile
  4074  0018AE  A4D8               	btfss	status,2,c
  4075  0018B0  F000               	nop		;# 
  4076                           
  4077                           ;IO_Buttons.c: 56: }
  4078                           ;IO_Buttons.c: 58: LATDbits.LATD0 = 1;
  4079  0018B2  808C               	bsf	3980,0,c	;volatile
  4080                           
  4081                           ;IO_Buttons.c: 59: LATDbits.LATD1 = 1;
  4082  0018B4  828C               	bsf	3980,1,c	;volatile
  4083                           
  4084                           ;IO_Buttons.c: 60: LATDbits.LATD2 = 1;
  4085  0018B6  848C               	bsf	3980,2,c	;volatile
  4086                           
  4087                           ;IO_Buttons.c: 62: LATDbits.LATD0 = 0;
  4088  0018B8  908C               	bcf	3980,0,c	;volatile
  4089                           
  4090                           ;IO_Buttons.c: 63: button_state_bits.PB_1 = !PORTBbits.RB4;
  4091  0018BA  B881               	btfsc	3969,4,c	;volatile
  4092  0018BC  D003               	goto	u1710
  4093  0018BE  6A13               	clrf	??_scan_buttons& (0+255),c
  4094  0018C0  2A13               	incf	??_scan_buttons& (0+255),f,c
  4095  0018C2  D001               	goto	u1728
  4096  0018C4                     u1710:
  4097  0018C4  6A13               	clrf	??_scan_buttons& (0+255),c
  4098  0018C6                     u1728:
  4099  0018C6  5044               	movf	_button_state_bits,w,c	;volatile
  4100  0018C8  1813               	xorwf	??_scan_buttons,w,c
  4101  0018CA  0BFE               	andlw	-2
  4102  0018CC  1813               	xorwf	??_scan_buttons,w,c
  4103  0018CE  6E44               	movwf	_button_state_bits,c	;volatile
  4104                           
  4105                           ;IO_Buttons.c: 64: button_state_bits.PB_2 = !PORTBbits.RB5;
  4106  0018D0  BA81               	btfsc	3969,5,c	;volatile
  4107  0018D2  D003               	goto	u1730
  4108  0018D4  6A13               	clrf	??_scan_buttons& (0+255),c
  4109  0018D6  2A13               	incf	??_scan_buttons& (0+255),f,c
  4110  0018D8  D001               	goto	u1748
  4111  0018DA                     u1730:
  4112  0018DA  6A13               	clrf	??_scan_buttons& (0+255),c
  4113  0018DC                     u1748:
  4114  0018DC  4613               	rlncf	??_scan_buttons,f,c
  4115  0018DE  5044               	movf	_button_state_bits,w,c	;volatile
  4116  0018E0  1813               	xorwf	??_scan_buttons,w,c
  4117  0018E2  0BFD               	andlw	-3
  4118  0018E4  1813               	xorwf	??_scan_buttons,w,c
  4119  0018E6  6E44               	movwf	_button_state_bits,c	;volatile
  4120                           
  4121                           ;IO_Buttons.c: 65: LATDbits.LATD0 = 1;
  4122  0018E8  808C               	bsf	3980,0,c	;volatile
  4123                           
  4124                           ;IO_Buttons.c: 67: LATDbits.LATD1 = 0;
  4125  0018EA  928C               	bcf	3980,1,c	;volatile
  4126                           
  4127                           ;IO_Buttons.c: 68: button_state_bits.PB_3 = !PORTBbits.RB4;
  4128  0018EC  B881               	btfsc	3969,4,c	;volatile
  4129  0018EE  D003               	goto	u1750
  4130  0018F0  6A13               	clrf	??_scan_buttons& (0+255),c
  4131  0018F2  2A13               	incf	??_scan_buttons& (0+255),f,c
  4132  0018F4  D001               	goto	u1768
  4133  0018F6                     u1750:
  4134  0018F6  6A13               	clrf	??_scan_buttons& (0+255),c
  4135  0018F8                     u1768:
  4136  0018F8  4613               	rlncf	??_scan_buttons,f,c
  4137  0018FA  4613               	rlncf	??_scan_buttons,f,c
  4138  0018FC  5044               	movf	_button_state_bits,w,c	;volatile
  4139  0018FE  1813               	xorwf	??_scan_buttons,w,c
  4140  001900  0BFB               	andlw	-5
  4141  001902  1813               	xorwf	??_scan_buttons,w,c
  4142  001904  6E44               	movwf	_button_state_bits,c	;volatile
  4143                           
  4144                           ;IO_Buttons.c: 69: button_state_bits.PB_4 = !PORTBbits.RB5;
  4145  001906  BA81               	btfsc	3969,5,c	;volatile
  4146  001908  D003               	goto	u1770
  4147  00190A  6A13               	clrf	??_scan_buttons& (0+255),c
  4148  00190C  2A13               	incf	??_scan_buttons& (0+255),f,c
  4149  00190E  D001               	goto	u1788
  4150  001910                     u1770:
  4151  001910  6A13               	clrf	??_scan_buttons& (0+255),c
  4152  001912                     u1788:
  4153  001912  4613               	rlncf	??_scan_buttons,f,c
  4154  001914  4613               	rlncf	??_scan_buttons,f,c
  4155  001916  4613               	rlncf	??_scan_buttons,f,c
  4156  001918  5044               	movf	_button_state_bits,w,c	;volatile
  4157  00191A  1813               	xorwf	??_scan_buttons,w,c
  4158  00191C  0BF7               	andlw	-9
  4159  00191E  1813               	xorwf	??_scan_buttons,w,c
  4160  001920  6E44               	movwf	_button_state_bits,c	;volatile
  4161                           
  4162                           ;IO_Buttons.c: 70: LATDbits.LATD1 = 1;
  4163  001922  828C               	bsf	3980,1,c	;volatile
  4164                           
  4165                           ;IO_Buttons.c: 72: LATDbits.LATD2 = 0;
  4166  001924  948C               	bcf	3980,2,c	;volatile
  4167                           
  4168                           ;IO_Buttons.c: 73: button_state_bits.PB_5 = !PORTBbits.RB4;
  4169  001926  B881               	btfsc	3969,4,c	;volatile
  4170  001928  D003               	goto	u1790
  4171  00192A  6A13               	clrf	??_scan_buttons& (0+255),c
  4172  00192C  2A13               	incf	??_scan_buttons& (0+255),f,c
  4173  00192E  D001               	goto	u1808
  4174  001930                     u1790:
  4175  001930  6A13               	clrf	??_scan_buttons& (0+255),c
  4176  001932                     u1808:
  4177  001932  3A13               	swapf	??_scan_buttons,f,c
  4178  001934  5044               	movf	_button_state_bits,w,c	;volatile
  4179  001936  1813               	xorwf	??_scan_buttons,w,c
  4180  001938  0BEF               	andlw	-17
  4181  00193A  1813               	xorwf	??_scan_buttons,w,c
  4182  00193C  6E44               	movwf	_button_state_bits,c	;volatile
  4183                           
  4184                           ;IO_Buttons.c: 74: button_state_bits.PB_6 = !PORTBbits.RB5;
  4185  00193E  BA81               	btfsc	3969,5,c	;volatile
  4186  001940  D003               	goto	u1810
  4187  001942  6A13               	clrf	??_scan_buttons& (0+255),c
  4188  001944  2A13               	incf	??_scan_buttons& (0+255),f,c
  4189  001946  D001               	goto	u1828
  4190  001948                     u1810:
  4191  001948  6A13               	clrf	??_scan_buttons& (0+255),c
  4192  00194A                     u1828:
  4193  00194A  3A13               	swapf	??_scan_buttons,f,c
  4194  00194C  4613               	rlncf	??_scan_buttons,f,c
  4195  00194E  5044               	movf	_button_state_bits,w,c	;volatile
  4196  001950  1813               	xorwf	??_scan_buttons,w,c
  4197  001952  0BDF               	andlw	-33
  4198  001954  1813               	xorwf	??_scan_buttons,w,c
  4199  001956  6E44               	movwf	_button_state_bits,c	;volatile
  4200                           
  4201                           ;IO_Buttons.c: 75: LATDbits.LATD2 = 1;
  4202  001958  848C               	bsf	3980,2,c	;volatile
  4203                           
  4204                           ;IO_Buttons.c: 77: LATDbits.LATD0 = 0;
  4205  00195A  908C               	bcf	3980,0,c	;volatile
  4206                           
  4207                           ;IO_Buttons.c: 78: LATDbits.LATD1 = 0;
  4208  00195C  928C               	bcf	3980,1,c	;volatile
  4209                           
  4210                           ;IO_Buttons.c: 79: LATDbits.LATD2 = 0;
  4211  00195E  948C               	bcf	3980,2,c	;volatile
  4212  001960  0012               	return		;funcret
  4213  001962                     __end_of_scan_buttons:
  4214                           	opt stack 0
  4215                           tblptru	equ	0xFF8
  4216                           tblptrh	equ	0xFF7
  4217                           tblptrl	equ	0xFF6
  4218                           tablat	equ	0xFF5
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           intcon2	equ	0xFF1
  4223                           postinc0	equ	0xFEE
  4224                           wreg	equ	0xFE8
  4225                           indf2	equ	0xFDF
  4226                           postinc2	equ	0xFDE
  4227                           postdec2	equ	0xFDD
  4228                           fsr2h	equ	0xFDA
  4229                           fsr2l	equ	0xFD9
  4230                           status	equ	0xFD8
  4231                           
  4232 ;; *************** function _IO_Buttons_configureIO *****************
  4233 ;; Defined at:
  4234 ;;		line 109 in file "IO_Buttons.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  use_interrup    1    wreg     unsigned char 
  4237 ;;  interrupt_pr    1   18[COMRAM] unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  use_interrup    1   19[COMRAM] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;		None               void
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;Total ram usage:        2 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    5
  4256 ;; This function calls:
  4257 ;;		_disable_interrupt
  4258 ;;		_enable_interrupt
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text26
  4265  001DA4                     __ptext26:
  4266                           	opt stack 0
  4267  001DA4                     _IO_Buttons_configureIO:
  4268                           	opt stack 25
  4269                           
  4270                           ;incstack = 0
  4271                           ;IO_Buttons_configureIO@use_interrupts stored from wreg
  4272  001DA4  6E14               	movwf	IO_Buttons_configureIO@use_interrupts,c
  4273                           
  4274                           ;IO_Buttons.c: 111: TRISDbits.TRISD0 = 0;
  4275  001DA6  9095               	bcf	3989,0,c	;volatile
  4276                           
  4277                           ;IO_Buttons.c: 112: TRISDbits.TRISD1 = 0;
  4278  001DA8  9295               	bcf	3989,1,c	;volatile
  4279                           
  4280                           ;IO_Buttons.c: 113: TRISDbits.TRISD2 = 0;
  4281  001DAA  9495               	bcf	3989,2,c	;volatile
  4282                           
  4283                           ;IO_Buttons.c: 115: TRISBbits.TRISB4 = 1;
  4284  001DAC  8893               	bsf	3987,4,c	;volatile
  4285                           
  4286                           ;IO_Buttons.c: 116: TRISBbits.TRISB5 = 1;
  4287  001DAE  8A93               	bsf	3987,5,c	;volatile
  4288                           
  4289                           ;IO_Buttons.c: 118: LATDbits.LATD0 = 0;
  4290  001DB0  908C               	bcf	3980,0,c	;volatile
  4291                           
  4292                           ;IO_Buttons.c: 119: LATDbits.LATD1 = 0;
  4293  001DB2  928C               	bcf	3980,1,c	;volatile
  4294                           
  4295                           ;IO_Buttons.c: 120: LATDbits.LATD2 = 0;
  4296  001DB4  948C               	bcf	3980,2,c	;volatile
  4297                           
  4298                           ;IO_Buttons.c: 122: INTCON2bits.nRBPU = 0;
  4299  001DB6  9EF1               	bcf	intcon2,7,c	;volatile
  4300                           
  4301                           ;IO_Buttons.c: 124: if(use_interrupts == 1) {
  4302  001DB8  0414               	decf	IO_Buttons_configureIO@use_interrupts,w,c
  4303  001DBA  A4D8               	btfss	status,2,c
  4304  001DBC  D003               	goto	l2390
  4305                           
  4306                           ;IO_Buttons.c: 125: enable_interrupt();
  4307  001DBE  EC15  F00F         	call	_enable_interrupt	;wreg free
  4308                           
  4309                           ;IO_Buttons.c: 126: }
  4310  001DC2  D006               	goto	l2394
  4311  001DC4                     l2390:
  4312                           
  4313                           ;IO_Buttons.c: 128: else if(use_interrupts == 0) {
  4314  001DC4  5014               	movf	IO_Buttons_configureIO@use_interrupts,w,c
  4315  001DC6  A4D8               	btfss	status,2,c
  4316  001DC8  D003               	goto	l2394
  4317                           
  4318                           ;IO_Buttons.c: 129: disable_interrupt();
  4319  001DCA  ECD0  F00F         	call	_disable_interrupt	;wreg free
  4320  001DCE  D000               	goto	l2394
  4321  001DD0                     l2394:
  4322                           
  4323                           ;IO_Buttons.c: 130: }
  4324                           ;IO_Buttons.c: 132: buttons_use_interrupts = use_interrupts;
  4325  001DD0  C014  F038         	movff	IO_Buttons_configureIO@use_interrupts,_buttons_use_interrupts	;volatile
  4326                           
  4327                           ;IO_Buttons.c: 133: buttons_interrupt_priority = interrupt_priority;
  4328  001DD4  C013  F037         	movff	IO_Buttons_configureIO@interrupt_priority,_buttons_interrupt_priority	;volatile
  4329  001DD8  0012               	return		;funcret
  4330  001DDA                     __end_of_IO_Buttons_configureIO:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           intcon2	equ	0xFF1
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           indf2	equ	0xFDF
  4343                           postinc2	equ	0xFDE
  4344                           postdec2	equ	0xFDD
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _enable_interrupt *****************
  4350 ;; Defined at:
  4351 ;;		line 33 in file "IO_Buttons.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;		None               void
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    4
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_IO_Buttons_configureIO
  4376 ;;		_IO_Buttons_enableInterrupt
  4377 ;;		_IO_Buttons_switchInterruptPriority
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text27
  4382  001E2A                     __ptext27:
  4383                           	opt stack 0
  4384  001E2A                     _enable_interrupt:
  4385                           	opt stack 25
  4386                           
  4387                           ;IO_Buttons.c: 35: if(PORTB) {
  4388                           
  4389                           ;incstack = 0
  4390  001E2A  5081               	movf	3969,w,c	;volatile
  4391  001E2C  B4D8               	btfsc	status,2,c
  4392  001E2E  D002               	goto	l2258
  4393  001E30  F000               	nop		;# 
  4394  001E32  D000               	goto	l2258
  4395  001E34                     l2258:
  4396                           
  4397                           ;IO_Buttons.c: 37: }
  4398                           ;IO_Buttons.c: 39: if(buttons_interrupt_priority == 0) {
  4399  001E34  5037               	movf	_buttons_interrupt_priority,w,c	;volatile
  4400  001E36  A4D8               	btfss	status,2,c
  4401  001E38  D002               	goto	l2262
  4402                           
  4403                           ;IO_Buttons.c: 40: INTCON2bits.RBIP = 0;
  4404  001E3A  90F1               	bcf	intcon2,0,c	;volatile
  4405                           
  4406                           ;IO_Buttons.c: 41: }
  4407  001E3C  D005               	goto	l38
  4408  001E3E                     l2262:
  4409                           
  4410                           ;IO_Buttons.c: 43: else if(buttons_interrupt_priority == 1) {
  4411  001E3E  0437               	decf	_buttons_interrupt_priority,w,c	;volatile
  4412  001E40  A4D8               	btfss	status,2,c
  4413  001E42  D002               	goto	l38
  4414                           
  4415                           ;IO_Buttons.c: 44: INTCON2bits.RBIP = 1;
  4416  001E44  80F1               	bsf	intcon2,0,c	;volatile
  4417  001E46  D000               	goto	l38
  4418  001E48                     l38:
  4419                           
  4420                           ;IO_Buttons.c: 45: }
  4421                           ;IO_Buttons.c: 47: INTCONbits.RBIF = 0;
  4422  001E48  90F2               	bcf	intcon,0,c	;volatile
  4423                           
  4424                           ;IO_Buttons.c: 48: INTCONbits.RBIE = 1;
  4425  001E4A  86F2               	bsf	intcon,3,c	;volatile
  4426  001E4C  0012               	return		;funcret
  4427  001E4E                     __end_of_enable_interrupt:
  4428                           	opt stack 0
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           intcon2	equ	0xFF1
  4437                           postinc0	equ	0xFEE
  4438                           wreg	equ	0xFE8
  4439                           indf2	equ	0xFDF
  4440                           postinc2	equ	0xFDE
  4441                           postdec2	equ	0xFDD
  4442                           fsr2h	equ	0xFDA
  4443                           fsr2l	equ	0xFD9
  4444                           status	equ	0xFD8
  4445                           
  4446 ;; *************** function _disable_interrupt *****************
  4447 ;; Defined at:
  4448 ;;		line 22 in file "IO_Buttons.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;		None               void
  4455 ;; Registers used:
  4456 ;;		wreg, status,2
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    4
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_IO_Buttons_configureIO
  4473 ;;		_IO_Buttons_disableInterrupt
  4474 ;;		_IO_Buttons_switchInterruptPriority
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text28
  4479  001FA0                     __ptext28:
  4480                           	opt stack 0
  4481  001FA0                     _disable_interrupt:
  4482                           	opt stack 25
  4483                           
  4484                           ;IO_Buttons.c: 24: if(PORTB) {
  4485                           
  4486                           ;incstack = 0
  4487  001FA0  5081               	movf	3969,w,c	;volatile
  4488  001FA2  A4D8               	btfss	status,2,c
  4489  001FA4  F000               	nop		;# 
  4490                           
  4491                           ;IO_Buttons.c: 26: }
  4492                           ;IO_Buttons.c: 28: INTCONbits.RBIE = 0;
  4493  001FA6  96F2               	bcf	intcon,3,c	;volatile
  4494                           
  4495                           ;IO_Buttons.c: 29: INTCONbits.RBIF = 0;
  4496  001FA8  90F2               	bcf	intcon,0,c	;volatile
  4497  001FAA  0012               	return		;funcret
  4498  001FAC                     __end_of_disable_interrupt:
  4499                           	opt stack 0
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodh	equ	0xFF4
  4505                           prodl	equ	0xFF3
  4506                           intcon	equ	0xFF2
  4507                           intcon2	equ	0xFF1
  4508                           postinc0	equ	0xFEE
  4509                           wreg	equ	0xFE8
  4510                           indf2	equ	0xFDF
  4511                           postinc2	equ	0xFDE
  4512                           postdec2	equ	0xFDD
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _Delay10KTCYx *****************
  4518 ;; Defined at:
  4519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\d10ktcyx.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  unit            1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  unit            1   19[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;		None               void
  4526 ;; Registers used:
  4527 ;;		wreg
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:        2 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    4
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text29
  4548  001EE2                     __ptext29:
  4549                           	opt stack 0
  4550  001EE2                     _Delay10KTCYx:
  4551                           	opt stack 26
  4552                           
  4553                           ;incstack = 0
  4554                           ;Delay10KTCYx@unit stored from wreg
  4555  001EE2  6E14               	movwf	Delay10KTCYx@unit,c
  4556  001EE4  0E0D               	movlw	13
  4557  001EE6  6E13               	movwf	??_Delay10KTCYx& (0+255),c
  4558  001EE8  0EFC               	movlw	252
  4559  001EEA                     u2837:
  4560  001EEA  2EE8               	decfsz	wreg,f,c
  4561  001EEC  D7FE               	goto	u2837
  4562  001EEE  2E13               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4563  001EF0  D7FC               	goto	u2837
  4564  001EF2  2E14               	decfsz	Delay10KTCYx@unit,f,c
  4565  001EF4  D7F7               	goto	l2530
  4566  001EF6  D000               	goto	l702
  4567  001EF8                     l702:
  4568  001EF8  0012               	return		;funcret
  4569  001EFA                     __end_of_Delay10KTCYx:
  4570                           	opt stack 0
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           intcon2	equ	0xFF1
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _ConvertADC *****************
  4589 ;; Defined at:
  4590 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;		None               void
  4597 ;; Registers used:
  4598 ;;		None
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    4
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text30
  4619  001FC8                     __ptext30:
  4620                           	opt stack 0
  4621  001FC8                     _ConvertADC:
  4622                           	opt stack 26
  4623                           
  4624                           ;incstack = 0
  4625  001FC8  82C2               	bsf	4034,1,c	;volatile
  4626  001FCA  0012               	return		;funcret
  4627  001FCC                     __end_of_ConvertADC:
  4628                           	opt stack 0
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           prodh	equ	0xFF4
  4634                           prodl	equ	0xFF3
  4635                           intcon	equ	0xFF2
  4636                           intcon2	equ	0xFF1
  4637                           postinc0	equ	0xFEE
  4638                           wreg	equ	0xFE8
  4639                           indf2	equ	0xFDF
  4640                           postinc2	equ	0xFDE
  4641                           postdec2	equ	0xFDD
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _BusyADC *****************
  4647 ;; Defined at:
  4648 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      unsigned char 
  4655 ;; Registers used:
  4656 ;;		wreg
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    4
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text31
  4677  001F76                     __ptext31:
  4678                           	opt stack 0
  4679  001F76                     _BusyADC:
  4680                           	opt stack 26
  4681                           
  4682                           ;incstack = 0
  4683  001F76  A2C2               	btfss	4034,1,c	;volatile
  4684  001F78  D002               	goto	u2140
  4685  001F7A  0E01               	movlw	1
  4686  001F7C  D002               	goto	l432
  4687  001F7E                     u2140:
  4688  001F7E  0E00               	movlw	0
  4689  001F80  D000               	goto	l432
  4690  001F82                     l432:
  4691  001F82  0012               	return		;funcret
  4692  001F84                     __end_of_BusyADC:
  4693                           	opt stack 0
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           intcon2	equ	0xFF1
  4702                           postinc0	equ	0xFEE
  4703                           wreg	equ	0xFE8
  4704                           indf2	equ	0xFDF
  4705                           postinc2	equ	0xFDE
  4706                           postdec2	equ	0xFDD
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _ISR *****************
  4712 ;; Defined at:
  4713 ;;		line 23 in file "LED_driver_sig_control.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;		None               void
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:       14 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    3
  4734 ;; This function calls:
  4735 ;;		_IO_Buttons_ISR
  4736 ;;		_IO_Encoder_ISR
  4737 ;;		_TMR_SysTick_ISR
  4738 ;; This function is called by:
  4739 ;;		Interrupt level 2
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	intcode
  4744  000008                     __pintcode:
  4745                           	opt stack 0
  4746  000008                     _ISR:
  4747                           	opt stack 23
  4748                           
  4749                           ;incstack = 0
  4750  000008  CFFA F005          	movff	pclath,??_ISR
  4751  00000C  CFFB F006          	movff	pclatu,??_ISR+1
  4752  000010  CFE9 F007          	movff	fsr0l,??_ISR+2
  4753  000014  ED0C  F00D         	call	int_func,f	;refresh shadow registers
  4754                           pclatu	equ	0xFFB
  4755                           pclath	equ	0xFFA
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           intcon2	equ	0xFF1
  4764                           postinc0	equ	0xFEE
  4765                           fsr0l	equ	0xFE9
  4766                           wreg	equ	0xFE8
  4767                           indf2	equ	0xFDF
  4768                           postinc2	equ	0xFDE
  4769                           postdec2	equ	0xFDD
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774                           	psect	intcode_body
  4775  001A18                     __pintcode_body:
  4776                           	opt stack 23
  4777  001A18                     int_func:
  4778                           	opt stack 23
  4779  001A18  0006               	pop		; remove dummy address from shadow register refresh
  4780  001A1A  CFEA F008          	movff	fsr0h,??_ISR+3
  4781  001A1E  CFE1 F009          	movff	fsr1l,??_ISR+4
  4782  001A22  CFE2 F00A          	movff	fsr1h,??_ISR+5
  4783  001A26  CFD9 F00B          	movff	fsr2l,??_ISR+6
  4784  001A2A  CFDA F00C          	movff	fsr2h,??_ISR+7
  4785  001A2E  CFF3 F00D          	movff	prodl,??_ISR+8
  4786  001A32  CFF4 F00E          	movff	prodh,??_ISR+9
  4787  001A36  CFF6 F00F          	movff	tblptrl,??_ISR+10
  4788  001A3A  CFF7 F010          	movff	tblptrh,??_ISR+11
  4789  001A3E  CFF8 F011          	movff	tblptru,??_ISR+12
  4790  001A42  CFF5 F012          	movff	tablat,??_ISR+13
  4791                           
  4792                           ;LED_driver_sig_control.c: 25: if(INTCONbits.TMR0IF == 1) {
  4793  001A46  A4F2               	btfss	intcon,2,c	;volatile
  4794  001A48  D005               	goto	i2l2116
  4795                           
  4796                           ;LED_driver_sig_control.c: 26: TMR_SysTick_ISR();
  4797  001A4A  ECD6  F00F         	call	_TMR_SysTick_ISR	;wreg free
  4798                           
  4799                           ;LED_driver_sig_control.c: 28: IO_Encoder_ISR();
  4800  001A4E  EC99  F00E         	call	_IO_Encoder_ISR	;wreg free
  4801  001A52  D000               	goto	i2l2116
  4802  001A54                     i2l2116:
  4803                           
  4804                           ;LED_driver_sig_control.c: 29: }
  4805                           ;LED_driver_sig_control.c: 31: if(INTCONbits.RBIF == 1) {
  4806  001A54  A0F2               	btfss	intcon,0,c	;volatile
  4807  001A56  D003               	goto	i2l356
  4808                           
  4809                           ;LED_driver_sig_control.c: 33: IO_Buttons_ISR();
  4810  001A58  ECC9  F00F         	call	_IO_Buttons_ISR	;wreg free
  4811  001A5C  D000               	goto	i2l356
  4812  001A5E                     i2l356:
  4813  001A5E  C012  FFF5         	movff	??_ISR+13,tablat
  4814  001A62  C011  FFF8         	movff	??_ISR+12,tblptru
  4815  001A66  C010  FFF7         	movff	??_ISR+11,tblptrh
  4816  001A6A  C00F  FFF6         	movff	??_ISR+10,tblptrl
  4817  001A6E  C00E  FFF4         	movff	??_ISR+9,prodh
  4818  001A72  C00D  FFF3         	movff	??_ISR+8,prodl
  4819  001A76  C00C  FFDA         	movff	??_ISR+7,fsr2h
  4820  001A7A  C00B  FFD9         	movff	??_ISR+6,fsr2l
  4821  001A7E  C00A  FFE2         	movff	??_ISR+5,fsr1h
  4822  001A82  C009  FFE1         	movff	??_ISR+4,fsr1l
  4823  001A86  C008  FFEA         	movff	??_ISR+3,fsr0h
  4824  001A8A  C007  FFE9         	movff	??_ISR+2,fsr0l
  4825  001A8E  C006  FFFB         	movff	??_ISR+1,pclatu
  4826  001A92  C005  FFFA         	movff	??_ISR,pclath
  4827  001A96  0011               	retfie		f
  4828  001A98                     __end_of_ISR:
  4829                           	opt stack 0
  4830                           pclatu	equ	0xFFB
  4831                           pclath	equ	0xFFA
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           postinc0	equ	0xFEE
  4841                           fsr0h	equ	0xFEA
  4842                           fsr0l	equ	0xFE9
  4843                           wreg	equ	0xFE8
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           postdec2	equ	0xFDD
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _TMR_SysTick_ISR *****************
  4854 ;; Defined at:
  4855 ;;		line 11 in file "TMR_SysTick.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		status,2, status,0, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    2
  4876 ;; This function calls:
  4877 ;;		i2_reload_timer
  4878 ;; This function is called by:
  4879 ;;		_ISR
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text33
  4884  001FAC                     __ptext33:
  4885                           	opt stack 0
  4886  001FAC                     _TMR_SysTick_ISR:
  4887                           	opt stack 23
  4888                           
  4889                           ;TMR_SysTick.c: 13: INTCONbits.TMR0IF = 0;
  4890                           
  4891                           ;incstack = 0
  4892  001FAC  94F2               	bcf	intcon,2,c	;volatile
  4893                           
  4894                           ;TMR_SysTick.c: 15: counter++;
  4895  001FAE  4A33               	infsnz	_counter,f,c	;volatile
  4896  001FB0  2A34               	incf	_counter+1,f,c	;volatile
  4897                           
  4898                           ;TMR_SysTick.c: 17: reload_timer();
  4899  001FB2  ECC2  F00F         	call	i2_reload_timer	;wreg free
  4900  001FB6  0012               	return		;funcret
  4901  001FB8                     __end_of_TMR_SysTick_ISR:
  4902                           	opt stack 0
  4903                           pclatu	equ	0xFFB
  4904                           pclath	equ	0xFFA
  4905                           tblptru	equ	0xFF8
  4906                           tblptrh	equ	0xFF7
  4907                           tblptrl	equ	0xFF6
  4908                           tablat	equ	0xFF5
  4909                           prodh	equ	0xFF4
  4910                           prodl	equ	0xFF3
  4911                           intcon	equ	0xFF2
  4912                           intcon2	equ	0xFF1
  4913                           postinc0	equ	0xFEE
  4914                           fsr0h	equ	0xFEA
  4915                           fsr0l	equ	0xFE9
  4916                           wreg	equ	0xFE8
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           indf2	equ	0xFDF
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function i2_reload_timer *****************
  4927 ;; Defined at:
  4928 ;;		line 33 in file "TMR_SysTick.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    1
  4949 ;; This function calls:
  4950 ;;		i2_WriteTimer0
  4951 ;; This function is called by:
  4952 ;;		_TMR_SysTick_ISR
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text34
  4957  001F84                     __ptext34:
  4958                           	opt stack 0
  4959  001F84                     i2_reload_timer:
  4960                           	opt stack 23
  4961                           
  4962                           ;TMR_SysTick.c: 35: WriteTimer0(systick_tmr_reload);
  4963                           
  4964                           ;incstack = 0
  4965  001F84  C035  F001         	movff	_systick_tmr_reload,i2WriteTimer0@timer0	;volatile
  4966  001F88  C036  F002         	movff	_systick_tmr_reload+1,i2WriteTimer0@timer0+1	;volatile
  4967  001F8C  ECA3  F00F         	call	i2_WriteTimer0	;wreg free
  4968  001F90  0012               	return		;funcret
  4969  001F92                     __end_ofi2_reload_timer:
  4970                           	opt stack 0
  4971                           pclatu	equ	0xFFB
  4972                           pclath	equ	0xFFA
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           intcon2	equ	0xFF1
  4981                           postinc0	equ	0xFEE
  4982                           fsr0h	equ	0xFEA
  4983                           fsr0l	equ	0xFE9
  4984                           wreg	equ	0xFE8
  4985                           fsr1h	equ	0xFE2
  4986                           fsr1l	equ	0xFE1
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function i2_WriteTimer0 *****************
  4995 ;; Defined at:
  4996 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  timer0          2    0[COMRAM] unsigned int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		None
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;Total ram usage:        4 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		i2_reload_timer
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text35
  5024  001F46                     __ptext35:
  5025                           	opt stack 0
  5026  001F46                     i2_WriteTimer0:
  5027                           	opt stack 23
  5028                           
  5029                           ;incstack = 0
  5030  001F46  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  5031  001F4A  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  5032  001F4E  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  5033  001F52  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  5034  001F56  0012               	return		;funcret
  5035  001F58                     __end_ofi2_WriteTimer0:
  5036                           	opt stack 0
  5037                           pclatu	equ	0xFFB
  5038                           pclath	equ	0xFFA
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           intcon2	equ	0xFF1
  5047                           postinc0	equ	0xFEE
  5048                           fsr0h	equ	0xFEA
  5049                           fsr0l	equ	0xFE9
  5050                           wreg	equ	0xFE8
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           indf2	equ	0xFDF
  5054                           postinc2	equ	0xFDE
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _IO_Encoder_ISR *****************
  5061 ;; Defined at:
  5062 ;;		line 8 in file "IO_Encoder.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;		None               void
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_ISR
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text36
  5090  001D32                     __ptext36:
  5091                           	opt stack 0
  5092  001D32                     _IO_Encoder_ISR:
  5093                           	opt stack 25
  5094                           
  5095                           ;IO_Encoder.c: 10: enc_A = PORTBbits.RB1;
  5096                           
  5097                           ;incstack = 0
  5098  001D32  0E00               	movlw	0
  5099  001D34  B281               	btfsc	3969,1,c	;volatile
  5100  001D36  0E01               	movlw	1
  5101  001D38  6E39               	movwf	_enc_A,c	;volatile
  5102                           
  5103                           ;IO_Encoder.c: 11: enc_B = PORTJbits.RJ0;
  5104  001D3A  0E00               	movlw	0
  5105  001D3C  B088               	btfsc	3976,0,c	;volatile
  5106  001D3E  0E01               	movlw	1
  5107  001D40  6E3B               	movwf	_enc_B,c	;volatile
  5108                           
  5109                           ;IO_Encoder.c: 13: if(!enc_A && enc_A_prev){
  5110  001D42  5039               	movf	_enc_A,w,c	;volatile
  5111  001D44  A4D8               	btfss	status,2,c
  5112  001D46  D00F               	goto	i2l1354
  5113  001D48  503A               	movf	_enc_A_prev,w,c	;volatile
  5114  001D4A  B4D8               	btfsc	status,2,c
  5115  001D4C  D00C               	goto	i2l1354
  5116                           
  5117                           ;IO_Encoder.c: 16: if(enc_B) {
  5118  001D4E  503B               	movf	_enc_B,w,c	;volatile
  5119  001D50  B4D8               	btfsc	status,2,c
  5120  001D52  D004               	goto	i2l1350
  5121                           
  5122                           ;IO_Encoder.c: 18: enc_state.count++;
  5123  001D54  4A3E               	infsnz	_enc_state,f,c	;volatile
  5124  001D56  2A3F               	incf	_enc_state+1,f,c	;volatile
  5125                           
  5126                           ;IO_Encoder.c: 19: enc_state.direction = 1;
  5127  001D58  8040               	bsf	_enc_state+2,0,c	;volatile
  5128                           
  5129                           ;IO_Encoder.c: 20: }
  5130  001D5A  D005               	goto	i2l1354
  5131  001D5C                     i2l1350:
  5132                           
  5133                           ;IO_Encoder.c: 21: else {
  5134                           ;IO_Encoder.c: 23: enc_state.count--;
  5135  001D5C  063E               	decf	_enc_state,f,c	;volatile
  5136  001D5E  A0D8               	btfss	status,0,c
  5137  001D60  063F               	decf	_enc_state+1,f,c	;volatile
  5138                           
  5139                           ;IO_Encoder.c: 24: enc_state.direction = 0;
  5140  001D62  9040               	bcf	_enc_state+2,0,c	;volatile
  5141  001D64  D000               	goto	i2l1354
  5142  001D66                     i2l1354:
  5143                           
  5144                           ;IO_Encoder.c: 25: }
  5145                           ;IO_Encoder.c: 26: }
  5146                           ;IO_Encoder.c: 28: enc_A_prev = enc_A;
  5147  001D66  C039  F03A         	movff	_enc_A,_enc_A_prev	;volatile
  5148  001D6A  0012               	return		;funcret
  5149  001D6C                     __end_of_IO_Encoder_ISR:
  5150                           	opt stack 0
  5151                           pclatu	equ	0xFFB
  5152                           pclath	equ	0xFFA
  5153                           tblptru	equ	0xFF8
  5154                           tblptrh	equ	0xFF7
  5155                           tblptrl	equ	0xFF6
  5156                           tablat	equ	0xFF5
  5157                           prodh	equ	0xFF4
  5158                           prodl	equ	0xFF3
  5159                           intcon	equ	0xFF2
  5160                           intcon2	equ	0xFF1
  5161                           postinc0	equ	0xFEE
  5162                           fsr0h	equ	0xFEA
  5163                           fsr0l	equ	0xFE9
  5164                           wreg	equ	0xFE8
  5165                           fsr1h	equ	0xFE2
  5166                           fsr1l	equ	0xFE1
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _IO_Buttons_ISR *****************
  5175 ;; Defined at:
  5176 ;;		line 12 in file "IO_Buttons.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    1
  5197 ;; This function calls:
  5198 ;;		i2_disable_interrupt
  5199 ;;		i2_enable_interrupt
  5200 ;;		i2_scan_buttons
  5201 ;; This function is called by:
  5202 ;;		_ISR
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text37
  5207  001F92                     __ptext37:
  5208                           	opt stack 0
  5209  001F92                     _IO_Buttons_ISR:
  5210                           	opt stack 24
  5211                           
  5212                           ;IO_Buttons.c: 14: disable_interrupt();
  5213                           
  5214                           ;incstack = 0
  5215  001F92  ECDC  F00F         	call	i2_disable_interrupt	;wreg free
  5216                           
  5217                           ;IO_Buttons.c: 16: scan_buttons();
  5218  001F96  ECB1  F00C         	call	i2_scan_buttons	;wreg free
  5219                           
  5220                           ;IO_Buttons.c: 18: enable_interrupt();
  5221  001F9A  EC27  F00F         	call	i2_enable_interrupt	;wreg free
  5222  001F9E  0012               	return		;funcret
  5223  001FA0                     __end_of_IO_Buttons_ISR:
  5224                           	opt stack 0
  5225                           pclatu	equ	0xFFB
  5226                           pclath	equ	0xFFA
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           intcon2	equ	0xFF1
  5235                           postinc0	equ	0xFEE
  5236                           fsr0h	equ	0xFEA
  5237                           fsr0l	equ	0xFE9
  5238                           wreg	equ	0xFE8
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           postdec2	equ	0xFDD
  5244                           fsr2h	equ	0xFDA
  5245                           fsr2l	equ	0xFD9
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function i2_scan_buttons *****************
  5249 ;; Defined at:
  5250 ;;		line 52 in file "IO_Buttons.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;		None               void
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        1 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_IO_Buttons_ISR
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text38
  5278  001962                     __ptext38:
  5279                           	opt stack 0
  5280  001962                     i2_scan_buttons:
  5281                           	opt stack 24
  5282                           
  5283                           ;IO_Buttons.c: 54: if(PORTB) {
  5284                           
  5285                           ;incstack = 0
  5286  001962  5081               	movf	3969,w,c	;volatile
  5287  001964  A4D8               	btfss	status,2,c
  5288  001966  F000               	nop		;# 
  5289                           
  5290                           ;IO_Buttons.c: 56: }
  5291                           ;IO_Buttons.c: 58: LATDbits.LATD0 = 1;
  5292  001968  808C               	bsf	3980,0,c	;volatile
  5293                           
  5294                           ;IO_Buttons.c: 59: LATDbits.LATD1 = 1;
  5295  00196A  828C               	bsf	3980,1,c	;volatile
  5296                           
  5297                           ;IO_Buttons.c: 60: LATDbits.LATD2 = 1;
  5298  00196C  848C               	bsf	3980,2,c	;volatile
  5299                           
  5300                           ;IO_Buttons.c: 62: LATDbits.LATD0 = 0;
  5301  00196E  908C               	bcf	3980,0,c	;volatile
  5302                           
  5303                           ;IO_Buttons.c: 63: button_state_bits.PB_1 = !PORTBbits.RB4;
  5304  001970  B881               	btfsc	3969,4,c	;volatile
  5305  001972  D003               	goto	i2u39_40
  5306  001974  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5307  001976  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5308  001978  D001               	goto	i2u40_48
  5309  00197A                     i2u39_40:
  5310  00197A  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5311  00197C                     i2u40_48:
  5312  00197C  5044               	movf	_button_state_bits,w,c	;volatile
  5313  00197E  1801               	xorwf	??i2_scan_buttons,w,c
  5314  001980  0BFE               	andlw	-2
  5315  001982  1801               	xorwf	??i2_scan_buttons,w,c
  5316  001984  6E44               	movwf	_button_state_bits,c	;volatile
  5317                           
  5318                           ;IO_Buttons.c: 64: button_state_bits.PB_2 = !PORTBbits.RB5;
  5319  001986  BA81               	btfsc	3969,5,c	;volatile
  5320  001988  D003               	goto	i2u41_40
  5321  00198A  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5322  00198C  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5323  00198E  D001               	goto	i2u42_48
  5324  001990                     i2u41_40:
  5325  001990  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5326  001992                     i2u42_48:
  5327  001992  4601               	rlncf	??i2_scan_buttons,f,c
  5328  001994  5044               	movf	_button_state_bits,w,c	;volatile
  5329  001996  1801               	xorwf	??i2_scan_buttons,w,c
  5330  001998  0BFD               	andlw	-3
  5331  00199A  1801               	xorwf	??i2_scan_buttons,w,c
  5332  00199C  6E44               	movwf	_button_state_bits,c	;volatile
  5333                           
  5334                           ;IO_Buttons.c: 65: LATDbits.LATD0 = 1;
  5335  00199E  808C               	bsf	3980,0,c	;volatile
  5336                           
  5337                           ;IO_Buttons.c: 67: LATDbits.LATD1 = 0;
  5338  0019A0  928C               	bcf	3980,1,c	;volatile
  5339                           
  5340                           ;IO_Buttons.c: 68: button_state_bits.PB_3 = !PORTBbits.RB4;
  5341  0019A2  B881               	btfsc	3969,4,c	;volatile
  5342  0019A4  D003               	goto	i2u43_40
  5343  0019A6  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5344  0019A8  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5345  0019AA  D001               	goto	i2u44_48
  5346  0019AC                     i2u43_40:
  5347  0019AC  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5348  0019AE                     i2u44_48:
  5349  0019AE  4601               	rlncf	??i2_scan_buttons,f,c
  5350  0019B0  4601               	rlncf	??i2_scan_buttons,f,c
  5351  0019B2  5044               	movf	_button_state_bits,w,c	;volatile
  5352  0019B4  1801               	xorwf	??i2_scan_buttons,w,c
  5353  0019B6  0BFB               	andlw	-5
  5354  0019B8  1801               	xorwf	??i2_scan_buttons,w,c
  5355  0019BA  6E44               	movwf	_button_state_bits,c	;volatile
  5356                           
  5357                           ;IO_Buttons.c: 69: button_state_bits.PB_4 = !PORTBbits.RB5;
  5358  0019BC  BA81               	btfsc	3969,5,c	;volatile
  5359  0019BE  D003               	goto	i2u45_40
  5360  0019C0  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5361  0019C2  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5362  0019C4  D001               	goto	i2u46_48
  5363  0019C6                     i2u45_40:
  5364  0019C6  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5365  0019C8                     i2u46_48:
  5366  0019C8  4601               	rlncf	??i2_scan_buttons,f,c
  5367  0019CA  4601               	rlncf	??i2_scan_buttons,f,c
  5368  0019CC  4601               	rlncf	??i2_scan_buttons,f,c
  5369  0019CE  5044               	movf	_button_state_bits,w,c	;volatile
  5370  0019D0  1801               	xorwf	??i2_scan_buttons,w,c
  5371  0019D2  0BF7               	andlw	-9
  5372  0019D4  1801               	xorwf	??i2_scan_buttons,w,c
  5373  0019D6  6E44               	movwf	_button_state_bits,c	;volatile
  5374                           
  5375                           ;IO_Buttons.c: 70: LATDbits.LATD1 = 1;
  5376  0019D8  828C               	bsf	3980,1,c	;volatile
  5377                           
  5378                           ;IO_Buttons.c: 72: LATDbits.LATD2 = 0;
  5379  0019DA  948C               	bcf	3980,2,c	;volatile
  5380                           
  5381                           ;IO_Buttons.c: 73: button_state_bits.PB_5 = !PORTBbits.RB4;
  5382  0019DC  B881               	btfsc	3969,4,c	;volatile
  5383  0019DE  D003               	goto	i2u47_40
  5384  0019E0  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5385  0019E2  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5386  0019E4  D001               	goto	i2u48_48
  5387  0019E6                     i2u47_40:
  5388  0019E6  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5389  0019E8                     i2u48_48:
  5390  0019E8  3A01               	swapf	??i2_scan_buttons,f,c
  5391  0019EA  5044               	movf	_button_state_bits,w,c	;volatile
  5392  0019EC  1801               	xorwf	??i2_scan_buttons,w,c
  5393  0019EE  0BEF               	andlw	-17
  5394  0019F0  1801               	xorwf	??i2_scan_buttons,w,c
  5395  0019F2  6E44               	movwf	_button_state_bits,c	;volatile
  5396                           
  5397                           ;IO_Buttons.c: 74: button_state_bits.PB_6 = !PORTBbits.RB5;
  5398  0019F4  BA81               	btfsc	3969,5,c	;volatile
  5399  0019F6  D003               	goto	i2u49_40
  5400  0019F8  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5401  0019FA  2A01               	incf	??i2_scan_buttons& (0+255),f,c
  5402  0019FC  D001               	goto	i2u50_48
  5403  0019FE                     i2u49_40:
  5404  0019FE  6A01               	clrf	??i2_scan_buttons& (0+255),c
  5405  001A00                     i2u50_48:
  5406  001A00  3A01               	swapf	??i2_scan_buttons,f,c
  5407  001A02  4601               	rlncf	??i2_scan_buttons,f,c
  5408  001A04  5044               	movf	_button_state_bits,w,c	;volatile
  5409  001A06  1801               	xorwf	??i2_scan_buttons,w,c
  5410  001A08  0BDF               	andlw	-33
  5411  001A0A  1801               	xorwf	??i2_scan_buttons,w,c
  5412  001A0C  6E44               	movwf	_button_state_bits,c	;volatile
  5413                           
  5414                           ;IO_Buttons.c: 75: LATDbits.LATD2 = 1;
  5415  001A0E  848C               	bsf	3980,2,c	;volatile
  5416                           
  5417                           ;IO_Buttons.c: 77: LATDbits.LATD0 = 0;
  5418  001A10  908C               	bcf	3980,0,c	;volatile
  5419                           
  5420                           ;IO_Buttons.c: 78: LATDbits.LATD1 = 0;
  5421  001A12  928C               	bcf	3980,1,c	;volatile
  5422                           
  5423                           ;IO_Buttons.c: 79: LATDbits.LATD2 = 0;
  5424  001A14  948C               	bcf	3980,2,c	;volatile
  5425  001A16  0012               	return		;funcret
  5426  001A18                     __end_ofi2_scan_buttons:
  5427                           	opt stack 0
  5428                           pclatu	equ	0xFFB
  5429                           pclath	equ	0xFFA
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon2	equ	0xFF1
  5438                           postinc0	equ	0xFEE
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           fsr1h	equ	0xFE2
  5443                           fsr1l	equ	0xFE1
  5444                           indf2	equ	0xFDF
  5445                           postinc2	equ	0xFDE
  5446                           postdec2	equ	0xFDD
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function i2_enable_interrupt *****************
  5452 ;; Defined at:
  5453 ;;		line 33 in file "IO_Buttons.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_IO_Buttons_ISR
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text39
  5481  001E4E                     __ptext39:
  5482                           	opt stack 0
  5483  001E4E                     i2_enable_interrupt:
  5484                           	opt stack 24
  5485                           
  5486                           ;IO_Buttons.c: 35: if(PORTB) {
  5487                           
  5488                           ;incstack = 0
  5489  001E4E  5081               	movf	3969,w,c	;volatile
  5490  001E50  B4D8               	btfsc	status,2,c
  5491  001E52  D002               	goto	i2l1254
  5492  001E54  F000               	nop		;# 
  5493  001E56  D000               	goto	i2l1254
  5494  001E58                     i2l1254:
  5495                           
  5496                           ;IO_Buttons.c: 37: }
  5497                           ;IO_Buttons.c: 39: if(buttons_interrupt_priority == 0) {
  5498  001E58  5037               	movf	_buttons_interrupt_priority,w,c	;volatile
  5499  001E5A  A4D8               	btfss	status,2,c
  5500  001E5C  D002               	goto	i2l1258
  5501                           
  5502                           ;IO_Buttons.c: 40: INTCON2bits.RBIP = 0;
  5503  001E5E  90F1               	bcf	intcon2,0,c	;volatile
  5504                           
  5505                           ;IO_Buttons.c: 41: }
  5506  001E60  D005               	goto	i2l38
  5507  001E62                     i2l1258:
  5508                           
  5509                           ;IO_Buttons.c: 43: else if(buttons_interrupt_priority == 1) {
  5510  001E62  0437               	decf	_buttons_interrupt_priority,w,c	;volatile
  5511  001E64  A4D8               	btfss	status,2,c
  5512  001E66  D002               	goto	i2l38
  5513                           
  5514                           ;IO_Buttons.c: 44: INTCON2bits.RBIP = 1;
  5515  001E68  80F1               	bsf	intcon2,0,c	;volatile
  5516  001E6A  D000               	goto	i2l38
  5517  001E6C                     i2l38:
  5518                           
  5519                           ;IO_Buttons.c: 45: }
  5520                           ;IO_Buttons.c: 47: INTCONbits.RBIF = 0;
  5521  001E6C  90F2               	bcf	intcon,0,c	;volatile
  5522                           
  5523                           ;IO_Buttons.c: 48: INTCONbits.RBIE = 1;
  5524  001E6E  86F2               	bsf	intcon,3,c	;volatile
  5525  001E70  0012               	return		;funcret
  5526  001E72                     __end_ofi2_enable_interrupt:
  5527                           	opt stack 0
  5528                           pclatu	equ	0xFFB
  5529                           pclath	equ	0xFFA
  5530                           tblptru	equ	0xFF8
  5531                           tblptrh	equ	0xFF7
  5532                           tblptrl	equ	0xFF6
  5533                           tablat	equ	0xFF5
  5534                           prodh	equ	0xFF4
  5535                           prodl	equ	0xFF3
  5536                           intcon	equ	0xFF2
  5537                           intcon2	equ	0xFF1
  5538                           postinc0	equ	0xFEE
  5539                           fsr0h	equ	0xFEA
  5540                           fsr0l	equ	0xFE9
  5541                           wreg	equ	0xFE8
  5542                           fsr1h	equ	0xFE2
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           fsr2h	equ	0xFDA
  5548                           fsr2l	equ	0xFD9
  5549                           status	equ	0xFD8
  5550                           
  5551 ;; *************** function i2_disable_interrupt *****************
  5552 ;; Defined at:
  5553 ;;		line 22 in file "IO_Buttons.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;		None               void
  5560 ;; Registers used:
  5561 ;;		wreg, status,2
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_IO_Buttons_ISR
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text40
  5581  001FB8                     __ptext40:
  5582                           	opt stack 0
  5583  001FB8                     i2_disable_interrupt:
  5584                           	opt stack 24
  5585                           
  5586                           ;IO_Buttons.c: 24: if(PORTB) {
  5587                           
  5588                           ;incstack = 0
  5589  001FB8  5081               	movf	3969,w,c	;volatile
  5590  001FBA  A4D8               	btfss	status,2,c
  5591  001FBC  F000               	nop		;# 
  5592                           
  5593                           ;IO_Buttons.c: 26: }
  5594                           ;IO_Buttons.c: 28: INTCONbits.RBIE = 0;
  5595  001FBE  96F2               	bcf	intcon,3,c	;volatile
  5596                           
  5597                           ;IO_Buttons.c: 29: INTCONbits.RBIF = 0;
  5598  001FC0  90F2               	bcf	intcon,0,c	;volatile
  5599  001FC2  0012               	return		;funcret
  5600  001FC4                     __end_ofi2_disable_interrupt:
  5601                           	opt stack 0
  5602                           pclatu	equ	0xFFB
  5603                           pclath	equ	0xFFA
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           intcon2	equ	0xFF1
  5612                           postinc0	equ	0xFEE
  5613                           fsr0h	equ	0xFEA
  5614                           fsr0l	equ	0xFE9
  5615                           wreg	equ	0xFE8
  5616                           fsr1h	equ	0xFE2
  5617                           fsr1l	equ	0xFE1
  5618                           indf2	equ	0xFDF
  5619                           postinc2	equ	0xFDE
  5620                           postdec2	equ	0xFDD
  5621                           fsr2h	equ	0xFDA
  5622                           fsr2l	equ	0xFD9
  5623                           status	equ	0xFD8
  5624                           pclatu	equ	0xFFB
  5625                           pclath	equ	0xFFA
  5626                           tblptru	equ	0xFF8
  5627                           tblptrh	equ	0xFF7
  5628                           tblptrl	equ	0xFF6
  5629                           tablat	equ	0xFF5
  5630                           prodh	equ	0xFF4
  5631                           prodl	equ	0xFF3
  5632                           intcon	equ	0xFF2
  5633                           intcon2	equ	0xFF1
  5634                           postinc0	equ	0xFEE
  5635                           fsr0h	equ	0xFEA
  5636                           fsr0l	equ	0xFE9
  5637                           wreg	equ	0xFE8
  5638                           fsr1h	equ	0xFE2
  5639                           fsr1l	equ	0xFE1
  5640                           indf2	equ	0xFDF
  5641                           postinc2	equ	0xFDE
  5642                           postdec2	equ	0xFDD
  5643                           fsr2h	equ	0xFDA
  5644                           fsr2l	equ	0xFD9
  5645                           status	equ	0xFD8
  5646                           
  5647                           	psect	rparam
  5648  0000                     pclatu	equ	0xFFB
  5649                           pclath	equ	0xFFA
  5650                           tblptru	equ	0xFF8
  5651                           tblptrh	equ	0xFF7
  5652                           tblptrl	equ	0xFF6
  5653                           tablat	equ	0xFF5
  5654                           prodh	equ	0xFF4
  5655                           prodl	equ	0xFF3
  5656                           intcon	equ	0xFF2
  5657                           intcon2	equ	0xFF1
  5658                           postinc0	equ	0xFEE
  5659                           fsr0h	equ	0xFEA
  5660                           fsr0l	equ	0xFE9
  5661                           wreg	equ	0xFE8
  5662                           fsr1h	equ	0xFE2
  5663                           fsr1l	equ	0xFE1
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8


Data Sizes:
    Strings     92
    Constant    10
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      68
    BANK0           160     23      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 21
		 -> main@buff(BANK0[21]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    IO_LCD_putrs@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_12(CODE[19]), STR_6(CODE[11]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[19]), STR_2(CODE[12]), STR_1(CODE[18]), 

    IO_LCD_puts@str	PTR unsigned char  size(2) Largest target is 21
		 -> main@buff(BANK0[21]), 

    sp__IO_Encoder_getState	PTR volatile struct . size(2) Largest target is 3
		 -> enc_state(COMRAM[3]), 

    sp__IO_Buttons_getAllButtons	PTR volatile struct . size(2) Largest target is 1
		 -> button_state_bits(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _reload_timer->_WriteTimer0
    _IO_LCD_puts->_write_data
    _IO_LCD_putrs->_write_data
    _IO_LCD_configureIO->_write_port
    _IO_LCD_SetCursor->_write_cmd
    _IO_LCD_Init->_write_cmd
    _IO_LCD_ClearDisplay->_write_cmd
    _IO_Buttons_getButton->_scan_buttons

Critical Paths under _ISR in COMRAM

    i2_reload_timer->i2_WriteTimer0
    _IO_Buttons_ISR->i2_scan_buttons

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    7643
                                             49 COMRAM     1     1      0
                                              0 BANK0     23    23      0
                            _BusyADC
                         _ConvertADC
                       _Delay10KTCYx
             _IO_Buttons_configureIO
               _IO_Buttons_getButton
                _IO_LCD_ClearDisplay
                        _IO_LCD_Init
                   _IO_LCD_SetCursor
                 _IO_LCD_configureIO
                       _IO_LCD_putrs
                        _IO_LCD_puts
                 _IO_LED_configureIO
                            _OpenADC
                            _ReadADC
                         _SetChanADC
              _TMR_SysTick_configure
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    3202
                                             30 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             25 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TMR_SysTick_configure                                1     1      0     389
                                             22 COMRAM     1     1      0
        TMR_SysTick@enable_interrupt
                       _reload_timer
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) TMR_SysTick@enable_interrupt                          0     0      0     179
                       _reload_timer
 ---------------------------------------------------------------------------------
 (2) _reload_timer                                         0     0      0     179
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2     179
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     371
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _IO_LED_configureIO                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_puts                                          3     1      2     691
                                             21 COMRAM     3     1      2
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_putrs                                         5     3      2     845
                                             21 COMRAM     5     3      2
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           3     3      0     176
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_configureIO                                   0     0      0      88
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           2     2      0      88
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_SetCursor                                     2     1      1    1024
                                             21 COMRAM     2     1      1
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_Init                                          1     1      0     176
                                             21 COMRAM     1     1      0
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_ClearDisplay                                  1     1      0     176
                                             21 COMRAM     1     1      0
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _write_cmd                                            3     3      0     176
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _IO_Buttons_getButton                                 1     1      0      22
                                             19 COMRAM     1     1      0
                       _scan_buttons
 ---------------------------------------------------------------------------------
 (2) _scan_buttons                                         1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _IO_Buttons_configureIO                               2     1      1     201
                                             18 COMRAM     2     1      1
                  _disable_interrupt
                   _enable_interrupt
 ---------------------------------------------------------------------------------
 (2) _enable_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _disable_interrupt                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0      93
                                              4 COMRAM    14    14      0
                     _IO_Buttons_ISR
                     _IO_Encoder_ISR
                    _TMR_SysTick_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR_SysTick_ISR                                      0     0      0      93
                     i2_reload_timer
 ---------------------------------------------------------------------------------
 (7) i2_reload_timer                                       0     0      0      93
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (8) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _IO_Encoder_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IO_Buttons_ISR                                       0     0      0       0
                i2_disable_interrupt
                 i2_enable_interrupt
                     i2_scan_buttons
 ---------------------------------------------------------------------------------
 (7) i2_scan_buttons                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_enable_interrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_disable_interrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay10KTCYx
   _IO_Buttons_configureIO
     _disable_interrupt
     _enable_interrupt
   _IO_Buttons_getButton
     _scan_buttons
   _IO_LCD_ClearDisplay
     _write_cmd
   _IO_LCD_Init
     _write_cmd
   _IO_LCD_SetCursor
     _write_cmd
   _IO_LCD_configureIO
     _write_port
   _IO_LCD_putrs
     _write_data
   _IO_LCD_puts
     _write_data
   _IO_LED_configureIO
   _OpenADC
   _ReadADC
   _SetChanADC
   _TMR_SysTick_configure
     TMR_SysTick@enable_interrupt
       _reload_timer
         _WriteTimer0
     _reload_timer
       _WriteTimer0
     _start_timer
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _IO_Buttons_ISR
     i2_disable_interrupt
     i2_enable_interrupt
     i2_scan_buttons
   _IO_Encoder_ISR
   _TMR_SysTick_ISR
     i2_reload_timer
       i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      17       5       14.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      32        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 16 12:38:33 2018

             __size_ofi2_enable_interrupt 0024                                        l38 1E48  
                                      l65 1B76                       ___wmul@multiplicand 0015  
                             __CFG_BORV$3 000000                            i2_reload_timer 1F84  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_OSC$HS 000000                              __CFG_CP4$OFF 000000  
                            __CFG_CP5$OFF 000000                              __CFG_CP6$OFF 000000  
                            __CFG_CP7$OFF 000000                                       l407 115E  
                                     l432 1F82                                       l360 139E  
                                     l427 1310                                       l363 13AA  
                                     l380 15A6                                       l702 1EF8  
                                     l454 1BD2                                       l462 1F66  
                                     l477 1E00                                       l915 1E92  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     _ISR 0008                      __size_of_WriteTimer0 0012  
                             _start_timer 1FC4                                       wreg 000FE8  
                           IO_LCD_putrs@i 001A                              __CFG_MODE$MC 000000  
                            __CFG_LVP$OFF 000000                                      ?_ISR 0001  
                            __CFG_WDT$OFF 000000                                      l1007 1C86  
                                    l1017 1D28                                      l2410 1B2A  
                                    l2402 1B1A                                      l2322 1EA8  
                                    l2500 1CC2                                      l2262 1E3E  
                                    l2422 1B42                                      l2414 1B32  
                                    l2406 1B22                                      l2502 1CDE  
                                    l2318 1E9E                                      l2352 1C4A  
                                    l2336 1E8A                                      l2600 11E4  
                                    l2530 1EE4                                      l2258 1E34  
                                    l2418 1B3A                                      l2354 1C54  
                                    l2610 1224                                      l2428 1B4E  
                                    l2364 1C7A                                      l2356 1C5C  
                                    l2380 1D1C                                      l2372 1CF4  
                                    l2620 1258                                      l2612 122E  
                                    l2390 1DC4                                      l2374 1CFE  
                                    l2614 1236                                      l2606 1200  
                                    l2376 1D06                                      l2552 108C  
                                    l2394 1DD0                                      l2490 1C94  
                                    l2482 1BDC                                      l2474 1D72  
                                    l2634 12D6                                      l2626 1276  
                                    l2570 112C                                      l2546 1072  
                                    l2810 14E8                                      l2492 1C9E  
                                    l2628 127C                                      l2636 12E2  
                                    l2494 1CAA                                      l2486 1C08  
                                    l2478 1D8C                                      l2582 118C  
                                    l2566 1128                                      l2638 1302  
                                    l2558 10BA                                      l2822 153A  
                                    l2496 1CB6                                      l2592 11B6  
                                    l2832 1588                                      l2760 13A6  
                                    l2586 11A6                                      l2770 13EE  
                                    l2834 1590                                      l2596 11E0  
                                    l2588 11AA                                      l2774 13FA  
                                    l2788 144E                _buttons_interrupt_priority 0037  
                                    STR_1 101E                                      STR_2 103D  
                                    STR_3 100B                                      STR_4 1033  
                                    STR_5 1030                                      STR_6 1049  
                                    STR_7 1054                                      STR_8 105C  
                                    STR_9 1064                                      u2100 1B4A  
                                    u2140 1F7E                                      u1710 18C4  
                                    u2520 14C4                                      u1810 1948  
                                    u1730 18DA                                      u1750 18F6  
                                    u2550 1516                                      u2607 1634  
                                    u1808 1932                                      u1728 18C6  
                                    u2528 14C6                                      u2617 163E  
                                    u1905 15D8                                      u1770 1910  
                                    u2570 1564                                      u2707 182E  
                                    u2627 16B8                                      u1915 15FC  
                                    u1828 194A                                      u1748 18DC  
                                    u2717 1840                                      u2637 16C2  
                                    u1790 1930                                      u2558 1518  
                                    u2807 175E                                      u2727 1850  
                                    u2647 16CA                                      u1768 18F8  
                                    u2817 17D8                                      u1865 16DE  
                                    u2737 1860                                      u2657 1CE0  
                                    u2578 1566                                      u2827 17E2  
                                    u1875 16F8                                      u2747 186C  
                                    u2667 17F0                                      u1788 1912  
                                    u2837 1EEA                                      u1885 171C  
                                    u2757 187C                                      u2677 17FE  
                                    u2767 188C                                      u2687 180C  
                                    u1895 15BE                                      u2777 1898  
                                    u2697 181A                                      u2787 1ED6  
                                    u2797 1754                                      i2l38 1E6C  
                         ?i2_scan_buttons 0001                                      _main 1312  
                       _disable_interrupt 1FA0                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  __size_ofi2_WriteTimer0 0012                   __size_of_IO_Buttons_ISR 000E  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0018  
                           __CFG_IESO$OFF 000000                        ?_disable_interrupt 0001  
                          IO_LCD_puts@str 0016                            write_data@data 0015  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000010  
                         __end_of_BusyADC 1F84                           __end_of_ReadADC 1F68  
                                   ??_ISR 0005                    __end_ofi2_reload_timer 1F92  
                         __end_of_OpenADC 1BD6                    ?_TMR_SysTick_configure 0001  
               __size_of_enable_interrupt 0024                       ??_disable_interrupt 0013  
                           __CFG_WAIT$OFF 000000                                     ?_main 0001  
                                   STR_10 1064                                     STR_11 1064  
                                   STR_12 100B                                     _T0CON 000FD5  
                         __end_of___lwdiv 1C90                           __end_of___lwmod 1D32  
                 ?_IO_Buttons_configureIO 0013                                     i2l356 1A5E  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _PORTB 000F81                     __size_of_Delay10KTCYx 0018  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                             __CFG_WRT4$OFF 000000  
                           __CFG_WRT5$OFF 000000                             __CFG_WRT6$OFF 000000  
                           __CFG_WRT7$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                          __CFG_EBTR4$OFF 000000                            __CFG_EBTR5$OFF 000000  
                          __CFG_EBTR6$OFF 000000                            __CFG_EBTR7$OFF 000000  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _enc_A 0039                                     _enc_B 003B  
                            ?_IO_LCD_Init 0001                           __end_of_dpowers 100B  
                         __end_of_isdigit 1E94                                _ConvertADC 1FC8  
                            ?_IO_LCD_puts 0016                  __end_of_IO_LCD_SetCursor 1CE6  
               __end_of_disable_interrupt 1FAC                                     tablat 000FF5  
                                   status 000FD8                           __end_of_sprintf 1312  
                           main@adc_value 0075                           IO_LCD_putrs@str 0016  
    IO_Buttons_configureIO@use_interrupts 0014                           __initialization 1F10  
                            __end_of_main 15B2                           ?i2_reload_timer 0001  
                            _Delay10KTCYx 1EE2                            _IO_Encoder_ISR 1D32  
          __end_of_IO_Buttons_configureIO 1DDA                                    ??_main 0032  
                          write_port@data 0014                             i2_WriteTimer0 1F46  
                           __activetblptr 000003                                _SetChanADC 1EFA  
                      _IO_LED_configureIO 1F34               __end_ofi2_disable_interrupt 1FC4  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                           __CFG_BBSIZ$BB2K 000000  
                                  i2l2116 1A54                                    i2l1254 1E58  
                                  i2l1350 1D5C                                    i2l1258 1E62  
                                  i2l1354 1D66                       ?_IO_LED_configureIO 0001  
            ?TMR_SysTick@enable_interrupt 0001                                 ??_BusyADC 0013  
                               ??_ReadADC 0015                                 ??_OpenADC 0015  
                          __CFG_XINST$OFF 000000                    __end_of_IO_Encoder_ISR 1D6C  
                                  ___wmul 1DDA                            __CFG_STVREN$ON 000000  
                               ??___lwdiv 0017                                 ??___lwmod 001E  
                    ??_IO_LED_configureIO 0013                                    clear_0 1F16  
                          ?i2_WriteTimer0 0001                             ?_IO_LCD_putrs 0016  
                               ??_isdigit 0013  IO_Buttons_configureIO@interrupt_priority 0013  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ??_sprintf 0025                               ?_ConvertADC 0001  
              __size_of_disable_interrupt 000C                             ?_scan_buttons 0001  
                              __accesstop 0060                   __end_of__initialization 1F1C  
                          _IO_Buttons_ISR 1F92             ??TMR_SysTick@enable_interrupt 0017  
                           ___rparam_used 000001                         _button_state_bits 0044  
                          __pcstackCOMRAM 0001                           ?_IO_Encoder_ISR 0001  
            __end_of_IO_Buttons_getButton 1B78               __size_of_IO_LCD_configureIO 0018  
                        _enable_interrupt 1E2A                            ??_IO_LCD_putrs 0018  
                             ?_SetChanADC 0001                              ?_start_timer 0001  
                        ??i2_scan_buttons 0001              __size_of_IO_LCD_ClearDisplay 0018  
                            sprintf@width 002F                            ??_scan_buttons 0013  
                  __end_of_IO_Buttons_ISR 1FA0                      __size_of_IO_LCD_Init 00C2  
                     IO_LCD_SetCursor@col 0016                       IO_LCD_SetCursor@row 0017  
                __size_of_TMR_SysTick_ISR 000C                      __size_of_IO_LCD_puts 0038  
                              _enc_A_prev 003A                        __CFG_CCP2MX$PORTBE 000000  
                 ??_TMR_SysTick_configure 0017                _systick_interrupt_priority 003D  
              __end_ofi2_enable_interrupt 1E72                             ?_reload_timer 0001  
                                 ?___wmul 0013                           ??i2_WriteTimer0 0003  
                        WriteTimer0@timer 0015                             ??_WriteTimer0 0015  
                     __size_of_ConvertADC 0004      __size_ofTMR_SysTick@enable_interrupt 001E  
                                 i2u41_40 1990                                   i2u40_48 197C  
                                 i2u50_48 1A00                                   i2u43_40 19AC  
                                 i2u42_48 1992                                   i2u45_40 19C6  
                                 i2u44_48 19AE                                   i2u47_40 19E6  
                                 i2u46_48 19C8                                   i2u39_40 197A  
                                 i2u49_40 19FE                                   i2u48_48 19E8  
                         ?_IO_Buttons_ISR 0001                         ?_IO_LCD_SetCursor 0016  
                                 _BusyADC 1F76                        ??_IO_LCD_SetCursor 0017  
                                 _ReadADC 1F58                       i2WriteTimer0@timer0 0001  
                        ??i2_reload_timer 0005                        __size_of_write_cmd 0118  
                                 _OpenADC 1B78                                   __Hparam 0000  
                     __size_of_SetChanADC 0016                                   __Lparam 0000  
                          ??_reload_timer 0017                           __size_of___wmul 0028  
                                 ___lwdiv 1C34                                   ___lwmod 1CE6  
                            __psmallconst 1000                                   __pcinit 1F10  
                                 __ramtop 1000                                   __ptext0 1312  
                                 __ptext1 1068                                   __ptext2 1E72  
                                 __ptext3 1DDA                                   __ptext4 1CE6  
                                 __ptext5 1C34                                   __ptext6 1E02  
                                 __ptext7 1FC4                                   __ptext8 1E94  
                                 __ptext9 1F68                                 _T0CONbits 000FD5  
                            __size_of_ISR 1A90                                   _counter 0033  
                                 _dpowers 1001                                   _isdigit 1E72  
                     __end_of_WriteTimer0 1F34                            OpenADC@config2 0013  
                                 _sprintf 1068                            __pintcode_body 1A18  
                    end_of_initialization 1F1C                      _IO_Buttons_getButton 1B0C  
                                 int_func 1A18                      __end_of_IO_LCD_putrs 1C34  
                       ??_TMR_SysTick_ISR 0005                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                    __end_of_scan_buttons 1962                                 _PORTBbits 000F81  
                               _PORTJbits 000F88                         __end_of_write_cmd 17EA  
                               _TRISBbits 000F93                                 _TRISDbits 000F95  
                               _TRISFbits 000F97                                 _TRISGbits 000F98  
                               _TRISHbits 000F99                                 _TRISJbits 000F9A  
                    __size_of_start_timer 0004                              ??_ConvertADC 0013  
                   ?_IO_Buttons_getButton 0001                  __end_of_enable_interrupt 1E4E  
                            IO_LCD_puts@i 0018                              write_cmd@cmd 0015  
            __size_ofi2_disable_interrupt 000C                          ??_IO_Encoder_ISR 0001  
                     _IO_LCD_ClearDisplay 1ECA                            __end_of___wmul 1E02  
             __size_of_IO_LED_configureIO 0012                                _write_data 15B2  
                             _WriteTimer0 1F22                                _write_port 1A98  
                      __end_of_ConvertADC 1FCC                              ??_SetChanADC 0013  
                     start_initialization 1F10                               __end_of_ISR 1A98  
                    ?_IO_LCD_ClearDisplay 0001                      __end_of_reload_timer 1F76  
                  _buttons_use_interrupts 0038                        __end_of_SetChanADC 1F10  
              __end_of_IO_LCD_configureIO 1ECA                  ??_IO_Buttons_configureIO 0014  
                                ??___wmul 0017            __size_of_TMR_SysTick_configure 0028  
           __end_of_TMR_SysTick_configure 1E2A                          __CFG_LPT1OSC$OFF 000000  
                      i2_enable_interrupt 1E4E                               __pbssCOMRAM 0033  
                        ??_IO_Buttons_ISR 0002                             __pcstackBANK0 0060  
                   ??_IO_LCD_ClearDisplay 0016                             ??_IO_LCD_Init 0016  
                  ??_IO_Buttons_getButton 0014                              _isdigit$2281 0014  
                   __size_of_IO_LCD_putrs 005E                             ??_IO_LCD_puts 0018  
                     ?i2_enable_interrupt 0001       __end_ofTMR_SysTick@enable_interrupt 1EB2  
             TMR_SysTick@enable_interrupt 1E94                               sprintf@flag 002C  
                             sprintf@prec 0029                                  ?_BusyADC 0001  
                                ?_ReadADC 0013                         OpenADC@portconfig 0014  
                                ?_OpenADC 0013                          ___lwdiv@dividend 0013  
                   __size_of_scan_buttons 00B6                                 __pintcode 0008  
                    ??i2_enable_interrupt 0001                             ?_Delay10KTCYx 0001  
                                ?___lwdiv 0013                                  ?___lwmod 001A  
               __size_of_IO_LCD_SetCursor 0056                                 _enc_state 003E  
                             ?_write_data 0001                               ?_write_port 0001  
                   __end_ofi2_WriteTimer0 1F58                                 _lcd_state 0041  
                            _IO_LCD_putrs 1BD6                               __smallconst 1000  
                       WriteTimer0@timer0 0013                                  ?_isdigit 0001  
                      i2WriteTimer0@timer 0003                        _systick_tmr_reload 0035  
                        ___lwdiv@quotient 0018                                  ?_sprintf 001F  
                         _TMR_SysTick_ISR 1FAC                              _scan_buttons 18AC  
                          ___wmul@product 0017                             OpenADC@config 0017  
                                _LATDbits 000F8C                       __end_of_IO_LCD_Init 18AC  
                                _LATGbits 000F8F                                  _LATHbits 000F90  
                                _LATJbits 000F91                                  _PIE1bits 000F9D  
                 __size_ofi2_scan_buttons 00B6                       __end_of_IO_LCD_puts 1DA4  
                                _PIR1bits 000F9E                     __CFG_DATABW$DATA16BIT 000000  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
         __size_of_IO_Buttons_configureIO 0036                            ??_Delay10KTCYx 0013  
                       __CFG_ECCPMX$PORTE 000000                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 0013                       i2_disable_interrupt 1FB8  
                   __size_of_reload_timer 000E                          Delay10KTCYx@unit 0014  
                               _write_cmd 16D2                               _INTCON2bits 000FF1  
                       ?_enable_interrupt 0001                       __size_of_write_data 0120  
                    ?i2_disable_interrupt 0001                       __size_of_write_port 0074  
                      ??_enable_interrupt 0013                          __size_of_BusyADC 000E  
                        __size_of_ReadADC 0010                                  __Hrparam 0000  
                        __size_of_OpenADC 005E                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                              _reload_timer 1F68  
                        __size_of___lwdiv 005C                          __size_of___lwmod 004C  
                            ?_WriteTimer0 0013                   __size_ofi2_reload_timer 000E  
                           ??_start_timer 0013                                sprintf@val 002D  
                        __size_of_isdigit 0022                   __end_of_TMR_SysTick_ISR 1FB8  
                         ___lwdiv@divisor 0015                    _IO_Buttons_configureIO 1DA4  
                         ___lwdiv@counter 0017                                  __ptext10 1F22  
                                __ptext11 1EFA                                  __ptext20 1C90  
                                __ptext12 1F58                                  __ptext21 17EA  
                                __ptext13 1B78                                  __ptext30 1FC8  
                                __ptext22 1ECA                                  __ptext14 1F34  
                                __ptext31 1F76                                  __ptext23 16D2  
                                __ptext15 1D6C                                  __ptext40 1FB8  
                                __ptext24 1B0C                                  __ptext16 1BD6  
                                __ptext33 1FAC                                  __ptext25 18AC  
                                __ptext17 15B2                                  __ptext34 1F84  
                                __ptext26 1DA4                                  __ptext18 1EB2  
                                __ptext35 1F46                                  __ptext27 1E2A  
                                __ptext19 1A98                                  __ptext36 1D32  
                                __ptext28 1FA0                                  __ptext37 1F92  
                                __ptext29 1EE2                                  __ptext38 1962  
                                __ptext39 1E4E                               _IO_LCD_Init 17EA  
                              ?_write_cmd 0001                          __size_of_sprintf 02AA  
                             _IO_LCD_puts 1D6C                     ??i2_disable_interrupt 0001  
 TMR_SysTick_configure@interrupt_priority 0017                             __size_of_main 02A0  
                            _sig_statuses 003C                IO_Buttons_getButton@button 0014  
              __end_of_IO_LED_configureIO 1F46                          _IO_LCD_SetCursor 1C90  
                                main@buff 0060                     __CFG_ADDRBW$ADDR20BIT 000000  
                      _IO_LCD_configureIO 1EB2                                _INTCONbits 000FF2  
                                isdigit@c 0015                      __end_of_Delay10KTCYx 1EFA  
                     ?_IO_LCD_configureIO 0001                       __end_of_start_timer 1FC8  
                                intlevel2 0000                                 sprintf@ap 002A  
                               sprintf@sp 001F                          ___lwmod@dividend 001A  
                       SetChanADC@channel 0014                            i2_scan_buttons 1962  
                    ??_IO_LCD_configureIO 0015                              ??_write_data 0013  
                 __size_of_IO_Encoder_ISR 003A                              ??_write_port 0013  
                   _TMR_SysTick_configure 1E02               __end_of_IO_LCD_ClearDisplay 1EE2  
                                sprintf@c 0031                                  sprintf@f 0021  
                         ___lwmod@divisor 001C                           ___lwmod@counter 001E  
                        ?_TMR_SysTick_ISR 0001                               ??_write_cmd 0013  
           __size_of_IO_Buttons_getButton 006C                    __end_ofi2_scan_buttons 1A18  
                      __end_of_write_data 16D2                        __end_of_write_port 1B0C  
