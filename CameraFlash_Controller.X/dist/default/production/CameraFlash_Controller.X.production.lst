

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Nov 11 21:18:11 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	smallconst
    45  001000                     __psmallconst:
    46                           	opt stack 0
    47  001000  00                 	db	0
    48  001001                     _dpowers:
    49                           	opt stack 0
    50  001001  0001               	dw	1
    51  001003  000A               	dw	10
    52  001005  0064               	dw	100
    53  001007  03E8               	dw	1000
    54  001009  2710               	dw	10000
    55  00100B                     __end_of_dpowers:
    56                           	opt stack 0
    57  00100B                     STR_1:
    58  00100B  47                 	db	71	;'G'
    59  00100C  65                 	db	101	;'e'
    60  00100D  6F                 	db	111	;'o'
    61  00100E  72                 	db	114	;'r'
    62  00100F  67                 	db	103	;'g'
    63  001010  65                 	db	101	;'e'
    64  001011  20                 	db	32
    65  001012  68                 	db	104	;'h'
    66  001013  61                 	db	97	;'a'
    67  001014  73                 	db	115	;'s'
    68  001015  20                 	db	32
    69  001016  00                 	db	0
    70  001017                     STR_2:
    71  001017  66                 	db	102	;'f'
    72  001018  72                 	db	114	;'r'
    73  001019  69                 	db	105	;'i'
    74  00101A  65                 	db	101	;'e'
    75  00101B  6E                 	db	110	;'n'
    76  00101C  64                 	db	100	;'d'
    77  00101D  73                 	db	115	;'s'
    78  00101E  00                 	db	0
    79  00101F                     STR_3:
    80  00101F  25                 	db	37
    81  001020  2D                 	db	45
    82  001021  35                 	db	53	;'5'
    83  001022  64                 	db	100	;'d'
    84  001023  00                 	db	0
    85                           
    86                           ; #config settings
    87  001024  00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           	psect	nvCOMRAM
    90  000040                     __pnvCOMRAM:
    91                           	opt stack 0
    92  000040                     _systick_tmr_reload:
    93                           	opt stack 0
    94  000040                     	ds	2
    95  000042                     _systick_interrupt_priority:
    96                           	opt stack 0
    97  000042                     	ds	1
    98  0000                     _INTCON2bits	set	4081
    99  0000                     _INTCONbits	set	4082
   100  0000                     _LATDbits	set	3980
   101  0000                     _LATHbits	set	3984
   102  0000                     _LATJbits	set	3985
   103  0000                     _PORTB	set	3969
   104  0000                     _PORTBbits	set	3969
   105  0000                     _PORTGbits	set	3974
   106  0000                     _RCONbits	set	4048
   107  0000                     _T0CON	set	4053
   108  0000                     _T0CONbits	set	4053
   109  0000                     _TMR0H	set	4055
   110  0000                     _TMR0L	set	4054
   111  0000                     _TRISBbits	set	3987
   112  0000                     _TRISDbits	set	3989
   113  0000                     _TRISGbits	set	3992
   114  0000                     _TRISHbits	set	3993
   115  0000                     _TRISJbits	set	3994
   116                           
   117                           	psect	cinit
   118  0019A0                     __pcinit:
   119                           	opt stack 0
   120  0019A0                     start_initialization:
   121                           	opt stack 0
   122  0019A0                     __initialization:
   123                           	opt stack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (14 bytes)
   126  0019A0  EE00  F032         	lfsr	0,__pbssCOMRAM
   127  0019A4  0E0E               	movlw	14
   128  0019A6                     clear_0:
   129  0019A6  6AEE               	clrf	postinc0,c
   130  0019A8  06E8               	decf	wreg,f,c
   131  0019AA  E1FD               	bnz	clear_0
   132  0019AC                     end_of_initialization:
   133                           	opt stack 0
   134  0019AC                     __end_of__initialization:
   135                           	opt stack 0
   136  0019AC  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137  0019AE  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138  0019B0  0100               	movlb	0
   139  0019B2  EF80  F00A         	goto	_main	;jump to C main() function
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssCOMRAM
   144  000032                     __pbssCOMRAM:
   145                           	opt stack 0
   146  000032                     _counter:
   147                           	opt stack 0
   148  000032                     	ds	2
   149  000034                     _buttons_interrupt_priority:
   150                           	opt stack 0
   151  000034                     	ds	1
   152  000035                     _buttons_use_interrupts:
   153                           	opt stack 0
   154  000035                     	ds	1
   155  000036                     _enc_A:
   156                           	opt stack 0
   157  000036                     	ds	1
   158  000037                     _enc_A_prev:
   159                           	opt stack 0
   160  000037                     	ds	1
   161  000038                     _enc_B:
   162                           	opt stack 0
   163  000038                     	ds	1
   164  000039                     _enc_state:
   165                           	opt stack 0
   166  000039                     	ds	3
   167  00003C                     _lcd_state:
   168                           	opt stack 0
   169  00003C                     	ds	3
   170  00003F                     _button_state_bits:
   171                           	opt stack 0
   172  00003F                     	ds	1
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	cstackBANK0
   177  000060                     __pcstackBANK0:
   178                           	opt stack 0
   179  000060                     main@buff:
   180                           	opt stack 0
   181                           
   182                           ; 20 bytes @ 0x0
   183  000060                     	ds	20
   184  000074                     main@count:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x14
   188  000074                     	ds	2
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt stack 0
   195  000001                     i2WriteTimer0@timer0:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x0
   199  000001                     	ds	2
   200  000003                     i2WriteTimer0@timer:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x2
   204  000003                     	ds	2
   205  000005                     ??_ISR:
   206  000005                     
   207                           ; 1 bytes @ 0x4
   208  000005                     	ds	14
   209  000013                     ??_Delay10KTCYx:
   210  000013                     ??_isdigit:
   211  000013                     ??_write_port:
   212  000013                     ??_write_cmd:
   213  000013                     ??_write_data:
   214  000013                     ?_IO_Encoder_getCount:
   215                           	opt stack 0
   216  000013                     ?___wmul:
   217                           	opt stack 0
   218  000013                     ?___lwdiv:
   219                           	opt stack 0
   220  000013                     WriteTimer0@timer0:
   221                           	opt stack 0
   222  000013                     ___wmul@multiplier:
   223                           	opt stack 0
   224  000013                     ___lwdiv@dividend:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x12
   228  000013                     	ds	1
   229  000014                     write_port@data:
   230                           	opt stack 0
   231  000014                     Delay10KTCYx@unit:
   232                           	opt stack 0
   233  000014                     _isdigit$1535:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x13
   237  000014                     	ds	1
   238  000015                     write_cmd@cmd:
   239                           	opt stack 0
   240  000015                     write_data@data:
   241                           	opt stack 0
   242  000015                     isdigit@c:
   243                           	opt stack 0
   244  000015                     IO_Encoder_getCount@count:
   245                           	opt stack 0
   246  000015                     WriteTimer0@timer:
   247                           	opt stack 0
   248  000015                     ___wmul@multiplicand:
   249                           	opt stack 0
   250  000015                     ___lwdiv@divisor:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x14
   254  000015                     	ds	1
   255  000016                     ??_IO_LCD_Init:
   256  000016                     IO_LCD_SetCursor@col:
   257                           	opt stack 0
   258  000016                     IO_LCD_puts@str:
   259                           	opt stack 0
   260  000016                     IO_LCD_putrs@str:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x15
   264  000016                     	ds	1
   265  000017                     IO_LCD_SetCursor@row:
   266                           	opt stack 0
   267  000017                     TMR_SysTick_configure@interrupt_priority:
   268                           	opt stack 0
   269  000017                     ___lwdiv@counter:
   270                           	opt stack 0
   271  000017                     ___wmul@product:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x16
   275  000017                     	ds	1
   276  000018                     ??_IO_LCD_putrs:
   277  000018                     IO_LCD_puts@i:
   278                           	opt stack 0
   279  000018                     ___lwdiv@quotient:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x17
   283  000018                     	ds	2
   284  00001A                     ?___lwmod:
   285                           	opt stack 0
   286  00001A                     IO_LCD_putrs@i:
   287                           	opt stack 0
   288  00001A                     ___lwmod@dividend:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x19
   292  00001A                     	ds	2
   293  00001C                     ___lwmod@divisor:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x1B
   297  00001C                     	ds	2
   298  00001E                     ___lwmod@counter:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x1D
   302  00001E                     	ds	1
   303  00001F                     ?_sprintf:
   304                           	opt stack 0
   305  00001F                     sprintf@sp:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x1E
   309  00001F                     	ds	2
   310  000021                     sprintf@f:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x20
   314  000021                     	ds	4
   315  000025                     ??_sprintf:
   316                           
   317                           ; 1 bytes @ 0x24
   318  000025                     	ds	4
   319  000029                     sprintf@ap:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x28
   323  000029                     	ds	2
   324  00002B                     sprintf@prec:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2A
   328  00002B                     	ds	1
   329  00002C                     sprintf@val:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x2B
   333  00002C                     	ds	2
   334  00002E                     sprintf@flag:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x2D
   338  00002E                     	ds	1
   339  00002F                     sprintf@width:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x2E
   343  00002F                     	ds	2
   344  000031                     sprintf@c:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x30
   348  000031                     	ds	1
   349  000032                     postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352                           ; 1 bytes @ 0x31
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   355 ;;
   356 ;; *************** function _main *****************
   357 ;; Defined at:
   358 ;;		line 27 in file "test.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  buff           20    0[BANK0 ] unsigned char [20]
   363 ;;  count           2   20[BANK0 ] unsigned int 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;Total ram usage:       22 bytes
   378 ;; Hardware stack levels required when called:    8
   379 ;; This function calls:
   380 ;;		_Delay10KTCYx
   381 ;;		_IO_Encoder_configureIO
   382 ;;		_IO_Encoder_getCount
   383 ;;		_IO_LCD_Init
   384 ;;		_IO_LCD_SetCursor
   385 ;;		_IO_LCD_configureIO
   386 ;;		_IO_LCD_putrs
   387 ;;		_IO_LCD_puts
   388 ;;		_IO_LED_configureIO
   389 ;;		_TMR_SysTick_configure
   390 ;;		_sprintf
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text0
   397  001500                     __ptext0:
   398                           	opt stack 0
   399  001500                     _main:
   400                           	opt stack 23
   401                           
   402                           ;test.c: 29: unsigned int count = 0;
   403                           
   404                           ;incstack = 0
   405  001500  0E00               	movlw	0
   406  001502  0100               	movlb	0	; () banked
   407  001504  6F75               	movwf	(main@count+1)& (0+255),b
   408  001506  0E00               	movlw	0
   409  001508  6F74               	movwf	main@count& (0+255),b
   410                           
   411                           ; BSR set to: 0
   412                           ;test.c: 30: char buff[20];
   413                           ;test.c: 32: RCONbits.IPEN = 0;
   414  00150A  9ED0               	bcf	4048,7,c	;volatile
   415                           
   416                           ; BSR set to: 0
   417                           ;test.c: 34: INTCONbits.PEIE = 0;
   418  00150C  9CF2               	bcf	intcon,6,c	;volatile
   419                           
   420                           ; BSR set to: 0
   421                           ;test.c: 35: INTCONbits.GIE = 1;
   422  00150E  8EF2               	bsf	intcon,7,c	;volatile
   423                           
   424                           ; BSR set to: 0
   425                           ;test.c: 37: TMR_SysTick_configure(0);
   426  001510  0E00               	movlw	0
   427  001512  EC66  F00C         	call	_TMR_SysTick_configure
   428                           
   429                           ;test.c: 38: IO_LED_configureIO();
   430  001516  ECEF  F00C         	call	_IO_LED_configureIO	;wreg free
   431                           
   432                           ;test.c: 39: IO_LCD_configureIO();
   433  00151A  ECC4  F00C         	call	_IO_LCD_configureIO	;wreg free
   434                           
   435                           ;test.c: 40: IO_Encoder_configureIO();
   436  00151E  EC9C  F00C         	call	_IO_Encoder_configureIO	;wreg free
   437                           
   438                           ;test.c: 42: IO_LCD_Init();
   439  001522  ECCE  F00A         	call	_IO_LCD_Init	;wreg free
   440                           
   441                           ;test.c: 44: IO_LCD_putrs("George has ");
   442  001526  0E0B               	movlw	low STR_1
   443  001528  6E16               	movwf	IO_LCD_putrs@str,c
   444  00152A  0E10               	movlw	high STR_1
   445  00152C  6E17               	movwf	IO_LCD_putrs@str+1,c
   446  00152E  EC8D  F00B         	call	_IO_LCD_putrs	;wreg free
   447                           
   448                           ;test.c: 45: IO_LCD_SetCursor(2, 1);
   449  001532  0E01               	movlw	1
   450  001534  6E16               	movwf	IO_LCD_SetCursor@col,c
   451  001536  0E02               	movlw	2
   452  001538  ECBB  F00B         	call	_IO_LCD_SetCursor
   453                           
   454                           ;test.c: 46: IO_LCD_putrs("friends");
   455  00153C  0E17               	movlw	low STR_2
   456  00153E  6E16               	movwf	IO_LCD_putrs@str,c
   457  001540  0E10               	movlw	high STR_2
   458  001542  6E17               	movwf	IO_LCD_putrs@str+1,c
   459  001544  EC8D  F00B         	call	_IO_LCD_putrs	;wreg free
   460                           
   461                           ;test.c: 47: IO_LCD_SetCursor(1, 12);
   462  001548  0E0C               	movlw	12
   463  00154A  6E16               	movwf	IO_LCD_SetCursor@col,c
   464  00154C  0E01               	movlw	1
   465  00154E  ECBB  F00B         	call	_IO_LCD_SetCursor
   466  001552                     l2274:
   467                           
   468                           ;test.c: 51: count += IO_Encoder_getCount();
   469  001552  ECB7  F00C         	call	_IO_Encoder_getCount	;wreg free
   470  001556  5013               	movf	?_IO_Encoder_getCount,w,c
   471  001558  0100               	movlb	0	; () banked
   472  00155A  2774               	addwf	main@count& (0+255),f,b
   473  00155C  5014               	movf	?_IO_Encoder_getCount+1,w,c
   474  00155E  0100               	movlb	0	; () banked
   475  001560  2375               	addwfc	(main@count+1)& (0+255),f,b
   476                           
   477                           ; BSR set to: 0
   478                           ;test.c: 52: sprintf(buff, "%-5d", count);
   479  001562  0E60               	movlw	low main@buff
   480  001564  6E1F               	movwf	sprintf@sp,c
   481  001566  0E00               	movlw	high main@buff
   482  001568  6E20               	movwf	sprintf@sp+1,c
   483  00156A  0E1F               	movlw	low STR_3
   484  00156C  6E21               	movwf	sprintf@f,c
   485  00156E  0E10               	movlw	high STR_3
   486  001570  6E22               	movwf	sprintf@f+1,c
   487  001572  C074  F023         	movff	main@count,?_sprintf+4
   488  001576  C075  F024         	movff	main@count+1,?_sprintf+5
   489  00157A  EC13  F008         	call	_sprintf	;wreg free
   490                           
   491                           ;test.c: 53: IO_LCD_puts(buff);
   492  00157E  0E60               	movlw	low main@buff
   493  001580  6E16               	movwf	IO_LCD_puts@str,c
   494  001582  0E00               	movlw	high main@buff
   495  001584  6E17               	movwf	IO_LCD_puts@str+1,c
   496  001586  EC4B  F00C         	call	_IO_LCD_puts	;wreg free
   497                           
   498                           ;test.c: 55: Delay10KTCYx(10);
   499  00158A  0E0A               	movlw	10
   500  00158C  ECDB  F00C         	call	_Delay10KTCYx
   501                           
   502                           ;test.c: 57: IO_LCD_SetCursor(1, 12);
   503  001590  0E0C               	movlw	12
   504  001592  6E16               	movwf	IO_LCD_SetCursor@col,c
   505  001594  0E01               	movlw	1
   506  001596  ECBB  F00B         	call	_IO_LCD_SetCursor
   507  00159A  D7DB               	goto	l2274
   508  00159C                     __end_of_main:
   509                           	opt stack 0
   510                           intcon	equ	0xFF2
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           
   514 ;; *************** function _sprintf *****************
   515 ;; Defined at:
   516 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  sp              2   30[COMRAM] PTR unsigned char 
   519 ;;		 -> main@buff(20), 
   520 ;;  f               2   32[COMRAM] PTR const unsigned char 
   521 ;;		 -> STR_3(5), 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  tmpval          4    0        struct .
   524 ;;  cp              3    0        PTR const unsigned char 
   525 ;;  width           2   46[COMRAM] int 
   526 ;;  val             2   43[COMRAM] unsigned int 
   527 ;;  ap              2   40[COMRAM] PTR void [1]
   528 ;;		 -> ?_sprintf(2), 
   529 ;;  len             2    0        unsigned int 
   530 ;;  c               1   48[COMRAM] char 
   531 ;;  flag            1   45[COMRAM] unsigned char 
   532 ;;  prec            1   42[COMRAM] char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2   30[COMRAM] int 
   535 ;; Registers used:
   536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:       19 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    5
   549 ;; This function calls:
   550 ;;		___lwdiv
   551 ;;		___lwmod
   552 ;;		___wmul
   553 ;;		_isdigit
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text1
   560  001026                     __ptext1:
   561                           	opt stack 0
   562  001026                     _sprintf:
   563                           	opt stack 25
   564                           
   565                           ;doprnt.c: 494: va_list ap;
   566                           ;doprnt.c: 499: signed char c;
   567                           ;doprnt.c: 501: int width;
   568                           ;doprnt.c: 506: signed char prec;
   569                           ;doprnt.c: 508: unsigned char flag;
   570                           ;doprnt.c: 523: union {
   571                           ;doprnt.c: 524: unsigned long vd;
   572                           ;doprnt.c: 525: double integ;
   573                           ;doprnt.c: 526: } tmpval;
   574                           ;doprnt.c: 528: unsigned int val;
   575                           ;doprnt.c: 529: unsigned len;
   576                           ;doprnt.c: 530: const char * cp;
   577                           ;doprnt.c: 533: *ap = __va_start();
   578                           
   579                           ;incstack = 0
   580  001026  0E23               	movlw	low (?_sprintf+4)
   581  001028  6E29               	movwf	sprintf@ap,c
   582  00102A  0E00               	movlw	high (?_sprintf+4)
   583  00102C  6E2A               	movwf	sprintf@ap+1,c
   584                           
   585                           ;doprnt.c: 536: while(c = *f++) {
   586  00102E  D137               	goto	l2232
   587  001030                     l2132:
   588                           
   589                           ;doprnt.c: 538: if(c != '%')
   590  001030  0E25               	movlw	37
   591  001032  1831               	xorwf	sprintf@c,w,c
   592  001034  B4D8               	btfsc	status,2,c
   593  001036  D009               	goto	l2138
   594                           
   595                           ;doprnt.c: 540: {
   596                           ;doprnt.c: 541: ((*sp++ = (c)));
   597  001038  C01F  FFD9         	movff	sprintf@sp,fsr2l
   598  00103C  C020  FFDA         	movff	sprintf@sp+1,fsr2h
   599  001040  C031  FFDF         	movff	sprintf@c,indf2
   600  001044  4A1F               	infsnz	sprintf@sp,f,c
   601  001046  2A20               	incf	sprintf@sp+1,f,c
   602                           
   603                           ;doprnt.c: 542: continue;
   604  001048  D12A               	goto	l2232
   605  00104A                     l2138:
   606                           
   607                           ;doprnt.c: 543: }
   608                           ;doprnt.c: 546: width = 0;
   609  00104A  0E00               	movlw	0
   610  00104C  6E30               	movwf	sprintf@width+1,c
   611  00104E  0E00               	movlw	0
   612  001050  6E2F               	movwf	sprintf@width,c
   613                           
   614                           ;doprnt.c: 548: flag = 0;
   615  001052  0E00               	movlw	0
   616  001054  6E2E               	movwf	sprintf@flag,c
   617                           
   618                           ;doprnt.c: 551: switch(*f) {
   619                           
   620                           ;doprnt.c: 550: for(;;) {
   621  001056  D003               	goto	l2144
   622  001058                     l2140:
   623                           
   624                           ;doprnt.c: 554: flag |= 0x08;
   625  001058  862E               	bsf	sprintf@flag,3,c
   626                           
   627                           ;doprnt.c: 555: f++;
   628  00105A  4A21               	infsnz	sprintf@f,f,c
   629  00105C  2A22               	incf	sprintf@f+1,f,c
   630  00105E                     l2144:
   631  00105E  C021  FFF6         	movff	sprintf@f,tblptrl
   632  001062  C022  FFF7         	movff	sprintf@f+1,tblptrh
   633  001066                     	if	0	;tblptru may be non-zero
   634  001066                     	endif
   635  001066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   636  001066  0E00               	movlw	low (__mediumconst shr (0+16))
   637  001068  6EF8               	movwf	tblptru,c
   638  00106A                     	endif
   639  00106A  0008               	tblrd		*
   640  00106C  50F5               	movf	tablat,w,c
   641                           
   642                           ; Switch size 1, requested type "space"
   643                           ; Number of cases is 1, Range of values is 45 to 45
   644                           ; switch strategies available:
   645                           ; Name         Instructions Cycles
   646                           ; simple_byte            4     3 (average)
   647                           ;	Chosen strategy is simple_byte
   648  00106E  0A2D               	xorlw	45	; case 45
   649  001070  B4D8               	btfsc	status,2,c
   650  001072  D7F2               	goto	l2140
   651                           
   652                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
   653                           
   654                           ;doprnt.c: 586: }
   655                           
   656                           ;doprnt.c: 585: break;
   657  001074  C021  FFF6         	movff	sprintf@f,tblptrl
   658  001078  C022  FFF7         	movff	sprintf@f+1,tblptrh
   659  00107C                     	if	0	;tblptru may be non-zero
   660  00107C                     	endif
   661  00107C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   662  00107C  0E00               	movlw	low (__mediumconst shr (0+16))
   663  00107E  6EF8               	movwf	tblptru,c
   664  001080                     	endif
   665  001080  0008               	tblrd		*
   666  001082  50F5               	movf	tablat,w,c
   667  001084  EC8D  F00C         	call	_isdigit
   668  001088  A0D8               	btfss	status,0,c
   669  00108A  D036               	goto	l2160
   670                           
   671                           ;doprnt.c: 598: width = 0;
   672  00108C  0E00               	movlw	0
   673  00108E  6E30               	movwf	sprintf@width+1,c
   674  001090  0E00               	movlw	0
   675  001092  6E2F               	movwf	sprintf@width,c
   676  001094                     l2150:
   677                           
   678                           ;doprnt.c: 600: width *= 10;
   679  001094  C02F  F013         	movff	sprintf@width,___wmul@multiplier
   680  001098  C030  F014         	movff	sprintf@width+1,___wmul@multiplier+1
   681  00109C  0E00               	movlw	0
   682  00109E  6E16               	movwf	___wmul@multiplicand+1,c
   683  0010A0  0E0A               	movlw	10
   684  0010A2  6E15               	movwf	___wmul@multiplicand,c
   685  0010A4  EC7A  F00C         	call	___wmul	;wreg free
   686  0010A8  C013  F02F         	movff	?___wmul,sprintf@width
   687  0010AC  C014  F030         	movff	?___wmul+1,sprintf@width+1
   688                           
   689                           ;doprnt.c: 601: width += *f++ - '0';
   690  0010B0  0ED0               	movlw	208
   691  0010B2  6E25               	movwf	??_sprintf& (0+255),c
   692  0010B4  0EFF               	movlw	255
   693  0010B6  6E26               	movwf	(??_sprintf+1)& (0+255),c
   694  0010B8  C021  FFF6         	movff	sprintf@f,tblptrl
   695  0010BC  C022  FFF7         	movff	sprintf@f+1,tblptrh
   696  0010C0                     	if	0	;tblptru may be non-zero
   697  0010C0                     	endif
   698  0010C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   699  0010C0  0E00               	movlw	low (__mediumconst shr (0+16))
   700  0010C2  6EF8               	movwf	tblptru,c
   701  0010C4                     	endif
   702  0010C4  0008               	tblrd		*
   703  0010C6  50F5               	movf	tablat,w,c
   704  0010C8  6E27               	movwf	(??_sprintf+2)& (0+255),c
   705  0010CA  6A28               	clrf	(??_sprintf+3)& (0+255),c
   706  0010CC  5025               	movf	??_sprintf,w,c
   707  0010CE  2627               	addwf	??_sprintf+2,f,c
   708  0010D0  5026               	movf	??_sprintf+1,w,c
   709  0010D2  2228               	addwfc	??_sprintf+3,f,c
   710  0010D4  5027               	movf	??_sprintf+2,w,c
   711  0010D6  262F               	addwf	sprintf@width,f,c
   712  0010D8  5028               	movf	??_sprintf+3,w,c
   713  0010DA  2230               	addwfc	sprintf@width+1,f,c
   714  0010DC  4A21               	infsnz	sprintf@f,f,c
   715  0010DE  2A22               	incf	sprintf@f+1,f,c
   716                           
   717                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
   718  0010E0  C021  FFF6         	movff	sprintf@f,tblptrl
   719  0010E4  C022  FFF7         	movff	sprintf@f+1,tblptrh
   720  0010E8                     	if	0	;tblptru may be non-zero
   721  0010E8                     	endif
   722  0010E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   723  0010E8  0E00               	movlw	low (__mediumconst shr (0+16))
   724  0010EA  6EF8               	movwf	tblptru,c
   725  0010EC                     	endif
   726  0010EC  0008               	tblrd		*
   727  0010EE  50F5               	movf	tablat,w,c
   728  0010F0  EC8D  F00C         	call	_isdigit
   729  0010F4  B0D8               	btfsc	status,0,c
   730  0010F6  D7CE               	goto	l2150
   731  0010F8                     l2160:
   732  0010F8  C021  FFF6         	movff	sprintf@f,tblptrl
   733  0010FC  C022  FFF7         	movff	sprintf@f+1,tblptrh
   734  001100  4A21               	infsnz	sprintf@f,f,c
   735  001102  2A22               	incf	sprintf@f+1,f,c
   736  001104                     	if	0	;tblptru may be non-zero
   737  001104                     	endif
   738  001104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   739  001104  0E00               	movlw	low (__mediumconst shr (0+16))
   740  001106  6EF8               	movwf	tblptru,c
   741  001108                     	endif
   742  001108  0008               	tblrd		*
   743  00110A  CFF5 F031          	movff	tablat,sprintf@c
   744  00110E  5031               	movf	sprintf@c,w,c
   745                           
   746                           ; Switch size 1, requested type "space"
   747                           ; Number of cases is 3, Range of values is 0 to 105
   748                           ; switch strategies available:
   749                           ; Name         Instructions Cycles
   750                           ; simple_byte           10     6 (average)
   751                           ;	Chosen strategy is simple_byte
   752  001110  0A00               	xorlw	0	; case 0
   753  001112  B4D8               	btfsc	status,2,c
   754  001114  D0D2               	goto	l2234
   755  001116  0A64               	xorlw	100	; case 100
   756  001118  B4D8               	btfsc	status,2,c
   757  00111A  D003               	goto	l2162
   758  00111C  0A0D               	xorlw	13	; case 105
   759  00111E  A4D8               	btfss	status,2,c
   760  001120  D0BE               	goto	l2232
   761  001122                     l2162:
   762                           
   763                           ;doprnt.c: 1253: {
   764                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   765  001122  C029  FFD9         	movff	sprintf@ap,fsr2l
   766  001126  C02A  FFDA         	movff	sprintf@ap+1,fsr2h
   767  00112A  CFDE F02C          	movff	postinc2,sprintf@val
   768  00112E  CFDD F02D          	movff	postdec2,sprintf@val+1
   769  001132  0E02               	movlw	2
   770  001134  2629               	addwf	sprintf@ap,f,c
   771  001136  0E00               	movlw	0
   772  001138  222A               	addwfc	sprintf@ap+1,f,c
   773                           
   774                           ;doprnt.c: 1261: if((int)val < 0) {
   775  00113A  AE2D               	btfss	sprintf@val+1,7,c
   776  00113C  D006               	goto	l2172
   777                           
   778                           ;doprnt.c: 1262: flag |= 0x03;
   779  00113E  0E03               	movlw	3
   780  001140  122E               	iorwf	sprintf@flag,f,c
   781                           
   782                           ;doprnt.c: 1263: val = -val;
   783  001142  6C2C               	negf	sprintf@val,c
   784  001144  1E2D               	comf	sprintf@val+1,f,c
   785  001146  B0D8               	btfsc	status,0,c
   786  001148  2A2D               	incf	sprintf@val+1,f,c
   787  00114A                     l2172:
   788                           
   789                           ;doprnt.c: 1264: }
   790                           ;doprnt.c: 1266: }
   791                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   792  00114A  0E01               	movlw	1
   793  00114C  6E31               	movwf	sprintf@c,c
   794  00114E                     l2174:
   795  00114E  0E05               	movlw	5
   796  001150  1831               	xorwf	sprintf@c,w,c
   797  001152  B4D8               	btfsc	status,2,c
   798  001154  D015               	goto	l2186
   799                           
   800                           ;doprnt.c: 1306: if(val < dpowers[c])
   801  001156  5031               	movf	sprintf@c,w,c
   802  001158  0D02               	mullw	2
   803  00115A  0E01               	movlw	low _dpowers
   804  00115C  24F3               	addwf	prodl,w,c
   805  00115E  6EF6               	movwf	tblptrl,c
   806  001160  0E10               	movlw	high _dpowers
   807  001162  20F4               	addwfc	prodh,w,c
   808  001164  6EF7               	movwf	tblptrh,c
   809  001166                     	if	1	;There are 3 active tblptr bytes
   810  001166  6AF8               	clrf	tblptru,c
   811  001168  0E00               	movlw	low (__mediumconst shr (0+16))
   812  00116A  22F8               	addwfc	tblptru,f,c
   813  00116C                     	endif
   814  00116C  0009               	tblrd		*+
   815  00116E  50F5               	movf	tablat,w,c
   816  001170  5C2C               	subwf	sprintf@val,w,c
   817  001172  0009               	tblrd		*+
   818  001174  50F5               	movf	tablat,w,c
   819  001176  582D               	subwfb	sprintf@val+1,w,c
   820  001178  A0D8               	btfss	status,0,c
   821  00117A  D002               	goto	l2186
   822                           
   823                           ;doprnt.c: 1307: break;
   824  00117C  2A31               	incf	sprintf@c,f,c
   825  00117E  D7E7               	goto	l2174
   826  001180                     l2186:
   827                           
   828                           ;doprnt.c: 1345: if(width && flag & 0x03)
   829  001180  502F               	movf	sprintf@width,w,c
   830  001182  1030               	iorwf	sprintf@width+1,w,c
   831  001184  B4D8               	btfsc	status,2,c
   832  001186  D009               	goto	l2192
   833  001188  C02E  F025         	movff	sprintf@flag,??_sprintf
   834  00118C  0E03               	movlw	3
   835  00118E  1625               	andwf	??_sprintf,f,c
   836  001190  B4D8               	btfsc	status,2,c
   837  001192  D003               	goto	l2192
   838                           
   839                           ;doprnt.c: 1346: width--;
   840  001194  062F               	decf	sprintf@width,f,c
   841  001196  A0D8               	btfss	status,0,c
   842  001198  0630               	decf	sprintf@width+1,f,c
   843  00119A                     l2192:
   844                           
   845                           ;doprnt.c: 1381: if(width > c)
   846  00119A  0E80               	movlw	128
   847  00119C  BE31               	btfsc	sprintf@c,7,c
   848  00119E  0E7F               	movlw	127
   849  0011A0  6E25               	movwf	??_sprintf& (0+255),c
   850  0011A2  502F               	movf	sprintf@width,w,c
   851  0011A4  5C31               	subwf	sprintf@c,w,c
   852  0011A6  5030               	movf	sprintf@width+1,w,c
   853  0011A8  0A80               	xorlw	128
   854  0011AA  5825               	subwfb	??_sprintf& (0+255),w,c
   855  0011AC  B0D8               	btfsc	status,0,c
   856  0011AE  D007               	goto	l2196
   857                           
   858                           ;doprnt.c: 1382: width -= c;
   859  0011B0  5031               	movf	sprintf@c,w,c
   860  0011B2  5E2F               	subwf	sprintf@width,f,c
   861  0011B4  0E00               	movlw	0
   862  0011B6  BE31               	btfsc	sprintf@c,7,c
   863  0011B8  0EFF               	movlw	255
   864  0011BA  5A30               	subwfb	sprintf@width+1,f,c
   865  0011BC  D004               	goto	l2198
   866  0011BE                     l2196:
   867                           
   868                           ;doprnt.c: 1383: else
   869                           ;doprnt.c: 1384: width = 0;
   870  0011BE  0E00               	movlw	0
   871  0011C0  6E30               	movwf	sprintf@width+1,c
   872  0011C2  0E00               	movlw	0
   873  0011C4  6E2F               	movwf	sprintf@width,c
   874  0011C6                     l2198:
   875                           
   876                           ;doprnt.c: 1422: {
   877                           ;doprnt.c: 1424: if(width
   878                           ;doprnt.c: 1426: && !(flag & 0x08)
   879                           ;doprnt.c: 1428: )
   880  0011C6  502F               	movf	sprintf@width,w,c
   881  0011C8  1030               	iorwf	sprintf@width+1,w,c
   882  0011CA  A4D8               	btfss	status,2,c
   883  0011CC  B62E               	btfsc	sprintf@flag,3,c
   884  0011CE  D00F               	goto	l2208
   885  0011D0                     l2202:
   886                           
   887                           ;doprnt.c: 1430: ((*sp++ = (' ')));
   888  0011D0  C01F  FFD9         	movff	sprintf@sp,fsr2l
   889  0011D4  C020  FFDA         	movff	sprintf@sp+1,fsr2h
   890  0011D8  0E20               	movlw	32
   891  0011DA  6EDF               	movwf	indf2,c
   892  0011DC  4A1F               	infsnz	sprintf@sp,f,c
   893  0011DE  2A20               	incf	sprintf@sp+1,f,c
   894                           
   895                           ;doprnt.c: 1431: while(--width);
   896  0011E0  062F               	decf	sprintf@width,f,c
   897  0011E2  A0D8               	btfss	status,0,c
   898  0011E4  0630               	decf	sprintf@width+1,f,c
   899  0011E6  502F               	movf	sprintf@width,w,c
   900  0011E8  1030               	iorwf	sprintf@width+1,w,c
   901  0011EA  A4D8               	btfss	status,2,c
   902  0011EC  D7F1               	goto	l2202
   903  0011EE                     l2208:
   904                           
   905                           ;doprnt.c: 1438: if(flag & 0x03)
   906  0011EE  C02E  F025         	movff	sprintf@flag,??_sprintf
   907  0011F2  0E03               	movlw	3
   908  0011F4  1625               	andwf	??_sprintf,f,c
   909  0011F6  B4D8               	btfsc	status,2,c
   910  0011F8  D008               	goto	l2214
   911                           
   912                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   913  0011FA  C01F  FFD9         	movff	sprintf@sp,fsr2l
   914  0011FE  C020  FFDA         	movff	sprintf@sp+1,fsr2h
   915  001202  0E2D               	movlw	45
   916  001204  6EDF               	movwf	indf2,c
   917  001206  4A1F               	infsnz	sprintf@sp,f,c
   918  001208  2A20               	incf	sprintf@sp+1,f,c
   919  00120A                     l2214:
   920                           
   921                           ;doprnt.c: 1469: }
   922                           ;doprnt.c: 1472: prec = c;
   923  00120A  C031  F02B         	movff	sprintf@c,sprintf@prec
   924                           
   925                           ;doprnt.c: 1474: while(prec--) {
   926  00120E  D02C               	goto	l2222
   927  001210                     l2216:
   928                           
   929                           ;doprnt.c: 1478: {
   930                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   931  001210  502B               	movf	sprintf@prec,w,c
   932  001212  0D02               	mullw	2
   933  001214  0E01               	movlw	low _dpowers
   934  001216  24F3               	addwf	prodl,w,c
   935  001218  6EF6               	movwf	tblptrl,c
   936  00121A  0E10               	movlw	high _dpowers
   937  00121C  20F4               	addwfc	prodh,w,c
   938  00121E  6EF7               	movwf	tblptrh,c
   939  001220                     	if	1	;There are 3 active tblptr bytes
   940  001220  6AF8               	clrf	tblptru,c
   941  001222  0E00               	movlw	low (__mediumconst shr (0+16))
   942  001224  22F8               	addwfc	tblptru,f,c
   943  001226                     	endif
   944  001226  0009               	tblrd		*+
   945  001228  CFF5 F015          	movff	tablat,___lwdiv@divisor
   946  00122C  000A               	tblrd		*-
   947  00122E  CFF5 F016          	movff	tablat,___lwdiv@divisor+1
   948  001232  C02C  F013         	movff	sprintf@val,___lwdiv@dividend
   949  001236  C02D  F014         	movff	sprintf@val+1,___lwdiv@dividend+1
   950  00123A  ECE5  F00B         	call	___lwdiv	;wreg free
   951  00123E  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
   952  001242  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
   953  001246  0E00               	movlw	0
   954  001248  6E1D               	movwf	___lwmod@divisor+1,c
   955  00124A  0E0A               	movlw	10
   956  00124C  6E1C               	movwf	___lwmod@divisor,c
   957  00124E  EC0E  F00C         	call	___lwmod	;wreg free
   958  001252  501A               	movf	?___lwmod,w,c
   959  001254  0F30               	addlw	48
   960  001256  6E31               	movwf	sprintf@c,c
   961                           
   962                           ;doprnt.c: 1523: }
   963                           ;doprnt.c: 1524: ((*sp++ = (c)));
   964  001258  C01F  FFD9         	movff	sprintf@sp,fsr2l
   965  00125C  C020  FFDA         	movff	sprintf@sp+1,fsr2h
   966  001260  C031  FFDF         	movff	sprintf@c,indf2
   967  001264  4A1F               	infsnz	sprintf@sp,f,c
   968  001266  2A20               	incf	sprintf@sp+1,f,c
   969  001268                     l2222:
   970  001268  062B               	decf	sprintf@prec,f,c
   971  00126A  282B               	incf	sprintf@prec,w,c
   972  00126C  A4D8               	btfss	status,2,c
   973  00126E  D7D0               	goto	l2216
   974                           
   975                           ;doprnt.c: 1525: }
   976                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
   977  001270  B62E               	btfsc	sprintf@flag,3,c
   978  001272  BE30               	btfsc	sprintf@width+1,7,c
   979  001274  D014               	goto	l2232
   980  001276  5030               	movf	sprintf@width+1,w,c
   981  001278  E103               	bnz	l2226
   982  00127A  042F               	decf	sprintf@width,w,c
   983  00127C  A0D8               	btfss	status,0,c
   984  00127E  D00F               	goto	l2232
   985  001280                     l2226:
   986                           
   987                           ;doprnt.c: 1530: ((*sp++ = (' ')));
   988  001280  C01F  FFD9         	movff	sprintf@sp,fsr2l
   989  001284  C020  FFDA         	movff	sprintf@sp+1,fsr2h
   990  001288  0E20               	movlw	32
   991  00128A  6EDF               	movwf	indf2,c
   992  00128C  4A1F               	infsnz	sprintf@sp,f,c
   993  00128E  2A20               	incf	sprintf@sp+1,f,c
   994                           
   995                           ;doprnt.c: 1531: while(--width);
   996  001290  062F               	decf	sprintf@width,f,c
   997  001292  A0D8               	btfss	status,0,c
   998  001294  0630               	decf	sprintf@width+1,f,c
   999  001296  502F               	movf	sprintf@width,w,c
  1000  001298  1030               	iorwf	sprintf@width+1,w,c
  1001  00129A  A4D8               	btfss	status,2,c
  1002  00129C  D7F1               	goto	l2226
  1003  00129E                     l2232:
  1004  00129E  C021  FFF6         	movff	sprintf@f,tblptrl
  1005  0012A2  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1006  0012A6  4A21               	infsnz	sprintf@f,f,c
  1007  0012A8  2A22               	incf	sprintf@f+1,f,c
  1008  0012AA                     	if	0	;tblptru may be non-zero
  1009  0012AA                     	endif
  1010  0012AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1011  0012AA  0E00               	movlw	low (__mediumconst shr (0+16))
  1012  0012AC  6EF8               	movwf	tblptru,c
  1013  0012AE                     	endif
  1014  0012AE  0008               	tblrd		*
  1015  0012B0  CFF5 F031          	movff	tablat,sprintf@c
  1016  0012B4  5031               	movf	sprintf@c,w,c
  1017  0012B6  A4D8               	btfss	status,2,c
  1018  0012B8  D6BB               	goto	l2132
  1019  0012BA                     l2234:
  1020                           
  1021                           ;doprnt.c: 1538: *sp = 0;
  1022  0012BA  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1023  0012BE  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1024  0012C2  0E00               	movlw	0
  1025  0012C4  6EDF               	movwf	indf2,c
  1026  0012C6  0012               	return	
  1027  0012C8                     __end_of_sprintf:
  1028                           	opt stack 0
  1029                           tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           prodh	equ	0xFF4
  1034                           prodl	equ	0xFF3
  1035                           intcon	equ	0xFF2
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           indf2	equ	0xFDF
  1039                           postinc2	equ	0xFDE
  1040                           postdec2	equ	0xFDD
  1041                           fsr2h	equ	0xFDA
  1042                           fsr2l	equ	0xFD9
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _isdigit *****************
  1046 ;; Defined at:
  1047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  c               1    wreg     unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  c               1   20[COMRAM] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;		None               void
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        3 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    4
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_sprintf
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text2
  1076  00191A                     __ptext2:
  1077                           	opt stack 0
  1078  00191A                     _isdigit:
  1079                           	opt stack 25
  1080                           
  1081                           ;incstack = 0
  1082                           ;isdigit@c stored from wreg
  1083  00191A  6E15               	movwf	isdigit@c,c
  1084  00191C  0E00               	movlw	0
  1085  00191E  6E14               	movwf	_isdigit$1535,c
  1086  001920  0E3A               	movlw	58
  1087  001922  6015               	cpfslt	isdigit@c,c
  1088  001924  D005               	goto	l1992
  1089  001926  0E2F               	movlw	47
  1090  001928  6415               	cpfsgt	isdigit@c,c
  1091  00192A  D002               	goto	l1992
  1092  00192C  0E01               	movlw	1
  1093  00192E  6E14               	movwf	_isdigit$1535,c
  1094  001930                     l1992:
  1095  001930  C014  F013         	movff	_isdigit$1535,??_isdigit
  1096  001934  3013               	rrcf	??_isdigit,w,c
  1097  001936  0012               	return	
  1098  001938                     __end_of_isdigit:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           prodh	equ	0xFF4
  1105                           prodl	equ	0xFF3
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           indf2	equ	0xFDF
  1110                           postinc2	equ	0xFDE
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function ___wmul *****************
  1117 ;; Defined at:
  1118 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  multiplier      2   18[COMRAM] unsigned int 
  1121 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  product         2   22[COMRAM] unsigned int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   18[COMRAM] unsigned int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, prodl, prodh
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    4
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_sprintf
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text3
  1148  0018F4                     __ptext3:
  1149                           	opt stack 0
  1150  0018F4                     ___wmul:
  1151                           	opt stack 25
  1152                           
  1153                           ;incstack = 0
  1154  0018F4  5013               	movf	___wmul@multiplier,w,c
  1155  0018F6  0215               	mulwf	___wmul@multiplicand,c
  1156  0018F8  CFF3 F017          	movff	prodl,___wmul@product
  1157  0018FC  CFF4 F018          	movff	prodh,___wmul@product+1
  1158  001900  5013               	movf	___wmul@multiplier,w,c
  1159  001902  0216               	mulwf	___wmul@multiplicand+1,c
  1160  001904  50F3               	movf	prodl,w,c
  1161  001906  2618               	addwf	___wmul@product+1,f,c
  1162  001908  5014               	movf	___wmul@multiplier+1,w,c
  1163  00190A  0215               	mulwf	___wmul@multiplicand,c
  1164  00190C  50F3               	movf	prodl,w,c
  1165  00190E  2618               	addwf	___wmul@product+1,f,c
  1166  001910  C017  F013         	movff	___wmul@product,?___wmul
  1167  001914  C018  F014         	movff	___wmul@product+1,?___wmul+1
  1168  001918  0012               	return	
  1169  00191A                     __end_of___wmul:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           prodh	equ	0xFF4
  1176                           prodl	equ	0xFF3
  1177                           intcon	equ	0xFF2
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           indf2	equ	0xFDF
  1181                           postinc2	equ	0xFDE
  1182                           postdec2	equ	0xFDD
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function ___lwmod *****************
  1188 ;; Defined at:
  1189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  dividend        2   25[COMRAM] unsigned int 
  1192 ;;  divisor         2   27[COMRAM] unsigned int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  counter         1   29[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2   25[COMRAM] unsigned int 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        5 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    4
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_sprintf
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text4
  1219  00181C                     __ptext4:
  1220                           	opt stack 0
  1221  00181C                     ___lwmod:
  1222                           	opt stack 25
  1223                           
  1224                           ;incstack = 0
  1225  00181C  501C               	movf	___lwmod@divisor,w,c
  1226  00181E  101D               	iorwf	___lwmod@divisor+1,w,c
  1227  001820  B4D8               	btfsc	status,2,c
  1228  001822  D018               	goto	l811
  1229  001824  0E01               	movlw	1
  1230  001826  6E1E               	movwf	___lwmod@counter,c
  1231  001828  D004               	goto	l2030
  1232  00182A                     l2028:
  1233  00182A  90D8               	bcf	status,0,c
  1234  00182C  361C               	rlcf	___lwmod@divisor,f,c
  1235  00182E  361D               	rlcf	___lwmod@divisor+1,f,c
  1236  001830  2A1E               	incf	___lwmod@counter,f,c
  1237  001832                     l2030:
  1238  001832  AE1D               	btfss	___lwmod@divisor+1,7,c
  1239  001834  D7FA               	goto	l2028
  1240  001836                     l2032:
  1241  001836  501C               	movf	___lwmod@divisor,w,c
  1242  001838  5C1A               	subwf	___lwmod@dividend,w,c
  1243  00183A  501D               	movf	___lwmod@divisor+1,w,c
  1244  00183C  581B               	subwfb	___lwmod@dividend+1,w,c
  1245  00183E  A0D8               	btfss	status,0,c
  1246  001840  D004               	goto	l2036
  1247  001842  501C               	movf	___lwmod@divisor,w,c
  1248  001844  5E1A               	subwf	___lwmod@dividend,f,c
  1249  001846  501D               	movf	___lwmod@divisor+1,w,c
  1250  001848  5A1B               	subwfb	___lwmod@dividend+1,f,c
  1251  00184A                     l2036:
  1252  00184A  90D8               	bcf	status,0,c
  1253  00184C  321D               	rrcf	___lwmod@divisor+1,f,c
  1254  00184E  321C               	rrcf	___lwmod@divisor,f,c
  1255  001850  2E1E               	decfsz	___lwmod@counter,f,c
  1256  001852  D7F1               	goto	l2032
  1257  001854                     l811:
  1258  001854  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1259  001858  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1260  00185C  0012               	return		;funcret
  1261  00185E                     __end_of___lwmod:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           indf2	equ	0xFDF
  1273                           postinc2	equ	0xFDE
  1274                           postdec2	equ	0xFDD
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function ___lwdiv *****************
  1280 ;; Defined at:
  1281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  dividend        2   18[COMRAM] unsigned int 
  1284 ;;  divisor         2   20[COMRAM] unsigned int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  quotient        2   23[COMRAM] unsigned int 
  1287 ;;  counter         1   22[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2   18[COMRAM] unsigned int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    4
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_sprintf
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text5
  1312  0017CA                     __ptext5:
  1313                           	opt stack 0
  1314  0017CA                     ___lwdiv:
  1315                           	opt stack 25
  1316                           
  1317                           ;incstack = 0
  1318  0017CA  0E00               	movlw	0
  1319  0017CC  6E19               	movwf	___lwdiv@quotient+1,c
  1320  0017CE  0E00               	movlw	0
  1321  0017D0  6E18               	movwf	___lwdiv@quotient,c
  1322  0017D2  5015               	movf	___lwdiv@divisor,w,c
  1323  0017D4  1016               	iorwf	___lwdiv@divisor+1,w,c
  1324  0017D6  B4D8               	btfsc	status,2,c
  1325  0017D8  D01C               	goto	l801
  1326  0017DA  0E01               	movlw	1
  1327  0017DC  6E17               	movwf	___lwdiv@counter,c
  1328  0017DE  D004               	goto	l2010
  1329  0017E0                     l2008:
  1330  0017E0  90D8               	bcf	status,0,c
  1331  0017E2  3615               	rlcf	___lwdiv@divisor,f,c
  1332  0017E4  3616               	rlcf	___lwdiv@divisor+1,f,c
  1333  0017E6  2A17               	incf	___lwdiv@counter,f,c
  1334  0017E8                     l2010:
  1335  0017E8  AE16               	btfss	___lwdiv@divisor+1,7,c
  1336  0017EA  D7FA               	goto	l2008
  1337  0017EC                     l2012:
  1338  0017EC  90D8               	bcf	status,0,c
  1339  0017EE  3618               	rlcf	___lwdiv@quotient,f,c
  1340  0017F0  3619               	rlcf	___lwdiv@quotient+1,f,c
  1341  0017F2  5015               	movf	___lwdiv@divisor,w,c
  1342  0017F4  5C13               	subwf	___lwdiv@dividend,w,c
  1343  0017F6  5016               	movf	___lwdiv@divisor+1,w,c
  1344  0017F8  5814               	subwfb	___lwdiv@dividend+1,w,c
  1345  0017FA  A0D8               	btfss	status,0,c
  1346  0017FC  D005               	goto	l2020
  1347  0017FE  5015               	movf	___lwdiv@divisor,w,c
  1348  001800  5E13               	subwf	___lwdiv@dividend,f,c
  1349  001802  5016               	movf	___lwdiv@divisor+1,w,c
  1350  001804  5A14               	subwfb	___lwdiv@dividend+1,f,c
  1351  001806  8018               	bsf	___lwdiv@quotient,0,c
  1352  001808                     l2020:
  1353  001808  90D8               	bcf	status,0,c
  1354  00180A  3216               	rrcf	___lwdiv@divisor+1,f,c
  1355  00180C  3215               	rrcf	___lwdiv@divisor,f,c
  1356  00180E  2E17               	decfsz	___lwdiv@counter,f,c
  1357  001810  D7ED               	goto	l2012
  1358  001812                     l801:
  1359  001812  C018  F013         	movff	___lwdiv@quotient,?___lwdiv
  1360  001816  C019  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1361  00181A  0012               	return		;funcret
  1362  00181C                     __end_of___lwdiv:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           prodh	equ	0xFF4
  1369                           prodl	equ	0xFF3
  1370                           intcon	equ	0xFF2
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           indf2	equ	0xFDF
  1374                           postinc2	equ	0xFDE
  1375                           postdec2	equ	0xFDD
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _TMR_SysTick_configure *****************
  1381 ;; Defined at:
  1382 ;;		line 86 in file "TMR_SysTick.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  interrupt_pr    1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  interrupt_pr    1   22[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        1 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    7
  1403 ;; This function calls:
  1404 ;;		TMR_SysTick@enable_interrupt
  1405 ;;		_reload_timer
  1406 ;;		_start_timer
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text6
  1413  0018CC                     __ptext6:
  1414                           	opt stack 0
  1415  0018CC                     _TMR_SysTick_configure:
  1416                           	opt stack 23
  1417                           
  1418                           ;incstack = 0
  1419                           ;TMR_SysTick_configure@interrupt_priority stored from wreg
  1420  0018CC  6E17               	movwf	TMR_SysTick_configure@interrupt_priority,c
  1421                           
  1422                           ;TMR_SysTick.c: 88: T0CON = 0x08;
  1423  0018CE  0E08               	movlw	8
  1424  0018D0  6ED5               	movwf	4053,c	;volatile
  1425                           
  1426                           ;TMR_SysTick.c: 89: TMR0H = 0;
  1427  0018D2  0E00               	movlw	0
  1428  0018D4  6ED7               	movwf	4055,c	;volatile
  1429                           
  1430                           ;TMR_SysTick.c: 90: TMR0L = 0;
  1431  0018D6  0E00               	movlw	0
  1432  0018D8  6ED6               	movwf	4054,c	;volatile
  1433                           
  1434                           ;TMR_SysTick.c: 92: systick_tmr_reload = 65535 - (10000000 / 1000 / 4);
  1435  0018DA  0EF6               	movlw	246
  1436  0018DC  6E41               	movwf	_systick_tmr_reload+1,c	;volatile
  1437  0018DE  0E3B               	movlw	59
  1438  0018E0  6E40               	movwf	_systick_tmr_reload,c	;volatile
  1439                           
  1440                           ;TMR_SysTick.c: 94: reload_timer();
  1441  0018E2  EC01  F00D         	call	_reload_timer	;wreg free
  1442                           
  1443                           ;TMR_SysTick.c: 96: systick_interrupt_priority = interrupt_priority;
  1444  0018E6  C017  F042         	movff	TMR_SysTick_configure@interrupt_priority,_systick_interrupt_priority	;volatile
  1445                           
  1446                           ;TMR_SysTick.c: 98: enable_interrupt();
  1447  0018EA  ECAA  F00C         	call	TMR_SysTick@enable_interrupt	;wreg free
  1448                           
  1449                           ;TMR_SysTick.c: 100: start_timer();
  1450  0018EE  EC15  F00D         	call	_start_timer	;wreg free
  1451  0018F2  0012               	return		;funcret
  1452  0018F4                     __end_of_TMR_SysTick_configure:
  1453                           	opt stack 0
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           prodh	equ	0xFF4
  1459                           prodl	equ	0xFF3
  1460                           intcon	equ	0xFF2
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           indf2	equ	0xFDF
  1464                           postinc2	equ	0xFDE
  1465                           postdec2	equ	0xFDD
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _start_timer *****************
  1471 ;; Defined at:
  1472 ;;		line 21 in file "TMR_SysTick.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		None
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    4
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_TMR_SysTick_configure
  1497 ;;		_TMR_SysTick_startTimer
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text7
  1502  001A2A                     __ptext7:
  1503                           	opt stack 0
  1504  001A2A                     _start_timer:
  1505                           	opt stack 25
  1506                           
  1507                           ;TMR_SysTick.c: 23: T0CONbits.TMR0ON = 1;
  1508                           
  1509                           ;incstack = 0
  1510  001A2A  8ED5               	bsf	4053,7,c	;volatile
  1511  001A2C  0012               	return		;funcret
  1512  001A2E                     __end_of_start_timer:
  1513                           	opt stack 0
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           prodh	equ	0xFF4
  1519                           prodl	equ	0xFF3
  1520                           intcon	equ	0xFF2
  1521                           postinc0	equ	0xFEE
  1522                           wreg	equ	0xFE8
  1523                           indf2	equ	0xFDF
  1524                           postinc2	equ	0xFDE
  1525                           postdec2	equ	0xFDD
  1526                           fsr2h	equ	0xFDA
  1527                           fsr2l	equ	0xFD9
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function TMR_SysTick@enable_interrupt *****************
  1531 ;; Defined at:
  1532 ;;		line 46 in file "TMR_SysTick.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    6
  1553 ;; This function calls:
  1554 ;;		_reload_timer
  1555 ;; This function is called by:
  1556 ;;		_TMR_SysTick_configure
  1557 ;;		_TMR_SysTick_enableInterrupt
  1558 ;;		_TMR_SysTick_switchInterruptPriority
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text8
  1563  001954                     __ptext8:
  1564                           	opt stack 0
  1565  001954                     TMR_SysTick@enable_interrupt:
  1566                           	opt stack 23
  1567                           
  1568                           ;TMR_SysTick.c: 48: if(systick_interrupt_priority == 0) {
  1569                           
  1570                           ;incstack = 0
  1571  001954  5042               	movf	_systick_interrupt_priority,w,c	;volatile
  1572  001956  A4D8               	btfss	status,2,c
  1573  001958  D002               	goto	l1974
  1574                           
  1575                           ;TMR_SysTick.c: 49: INTCON2bits.TMR0IP = 0;
  1576  00195A  94F1               	bcf	intcon2,2,c	;volatile
  1577                           
  1578                           ;TMR_SysTick.c: 50: }
  1579  00195C  D003               	goto	l1978
  1580  00195E                     l1974:
  1581                           
  1582                           ;TMR_SysTick.c: 52: else if(systick_interrupt_priority == 1) {
  1583  00195E  0442               	decf	_systick_interrupt_priority,w,c	;volatile
  1584  001960  B4D8               	btfsc	status,2,c
  1585                           
  1586                           ;TMR_SysTick.c: 53: INTCON2bits.TMR0IP = 1;
  1587  001962  84F1               	bsf	intcon2,2,c	;volatile
  1588  001964                     l1978:
  1589                           
  1590                           ;TMR_SysTick.c: 54: }
  1591                           ;TMR_SysTick.c: 56: reload_timer();
  1592  001964  EC01  F00D         	call	_reload_timer	;wreg free
  1593                           
  1594                           ;TMR_SysTick.c: 58: INTCONbits.TMR0IF = 0;
  1595  001968  94F2               	bcf	intcon,2,c	;volatile
  1596                           
  1597                           ;TMR_SysTick.c: 59: INTCONbits.TMR0IE = 1;
  1598  00196A  8AF2               	bsf	intcon,5,c	;volatile
  1599  00196C  0012               	return		;funcret
  1600  00196E                     __end_ofTMR_SysTick@enable_interrupt:
  1601                           	opt stack 0
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           intcon	equ	0xFF2
  1609                           intcon2	equ	0xFF1
  1610                           postinc0	equ	0xFEE
  1611                           wreg	equ	0xFE8
  1612                           indf2	equ	0xFDF
  1613                           postinc2	equ	0xFDE
  1614                           postdec2	equ	0xFDD
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _reload_timer *****************
  1620 ;; Defined at:
  1621 ;;		line 33 in file "TMR_SysTick.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        0 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    5
  1642 ;; This function calls:
  1643 ;;		_WriteTimer0
  1644 ;; This function is called by:
  1645 ;;		TMR_SysTick@enable_interrupt
  1646 ;;		_TMR_SysTick_configure
  1647 ;;		_TMR_SysTick_resetCounter
  1648 ;;		_TMR_SysTick_setCounter
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text9
  1653  001A02                     __ptext9:
  1654                           	opt stack 0
  1655  001A02                     _reload_timer:
  1656                           	opt stack 24
  1657                           
  1658                           ;TMR_SysTick.c: 35: WriteTimer0(systick_tmr_reload);
  1659                           
  1660                           ;incstack = 0
  1661  001A02  C040  F013         	movff	_systick_tmr_reload,WriteTimer0@timer0	;volatile
  1662  001A06  C041  F014         	movff	_systick_tmr_reload+1,WriteTimer0@timer0+1	;volatile
  1663  001A0A  ECE6  F00C         	call	_WriteTimer0	;wreg free
  1664  001A0E  0012               	return		;funcret
  1665  001A10                     __end_of_reload_timer:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           prodh	equ	0xFF4
  1672                           prodl	equ	0xFF3
  1673                           intcon	equ	0xFF2
  1674                           intcon2	equ	0xFF1
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           indf2	equ	0xFDF
  1678                           postinc2	equ	0xFDE
  1679                           postdec2	equ	0xFDD
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _WriteTimer0 *****************
  1685 ;; Defined at:
  1686 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t0write.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  timer0          2   18[COMRAM] unsigned int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  timer           2   20[COMRAM] struct Timers
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		None
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;Total ram usage:        4 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_reload_timer
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text10
  1715  0019CC                     __ptext10:
  1716                           	opt stack 0
  1717  0019CC                     _WriteTimer0:
  1718                           	opt stack 24
  1719                           
  1720                           ;incstack = 0
  1721  0019CC  C013  F015         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1722  0019D0  C014  F016         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1723  0019D4  C016  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1724  0019D8  C015  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1725  0019DC  0012               	return		;funcret
  1726  0019DE                     __end_of_WriteTimer0:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           tblptrh	equ	0xFF7
  1730                           tblptrl	equ	0xFF6
  1731                           tablat	equ	0xFF5
  1732                           prodh	equ	0xFF4
  1733                           prodl	equ	0xFF3
  1734                           intcon	equ	0xFF2
  1735                           intcon2	equ	0xFF1
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           indf2	equ	0xFDF
  1739                           postinc2	equ	0xFDE
  1740                           postdec2	equ	0xFDD
  1741                           fsr2h	equ	0xFDA
  1742                           fsr2l	equ	0xFD9
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _IO_LED_configureIO *****************
  1746 ;; Defined at:
  1747 ;;		line 5 in file "IO_LED.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		None
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    4
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text11
  1776  0019DE                     __ptext11:
  1777                           	opt stack 0
  1778  0019DE                     _IO_LED_configureIO:
  1779                           	opt stack 26
  1780                           
  1781                           ;IO_LED.c: 7: TRISHbits.TRISH0 = 0;
  1782                           
  1783                           ;incstack = 0
  1784  0019DE  9099               	bcf	3993,0,c	;volatile
  1785                           
  1786                           ;IO_LED.c: 8: TRISHbits.TRISH1 = 0;
  1787  0019E0  9299               	bcf	3993,1,c	;volatile
  1788                           
  1789                           ;IO_LED.c: 9: TRISHbits.TRISH2 = 0;
  1790  0019E2  9499               	bcf	3993,2,c	;volatile
  1791                           
  1792                           ;IO_LED.c: 10: TRISHbits.TRISH3 = 0;
  1793  0019E4  9699               	bcf	3993,3,c	;volatile
  1794                           
  1795                           ;IO_LED.c: 12: LATHbits.LATH0 = 1;
  1796  0019E6  8090               	bsf	3984,0,c	;volatile
  1797                           
  1798                           ;IO_LED.c: 13: LATHbits.LATH1 = 1;
  1799  0019E8  8290               	bsf	3984,1,c	;volatile
  1800                           
  1801                           ;IO_LED.c: 14: LATHbits.LATH2 = 1;
  1802  0019EA  8490               	bsf	3984,2,c	;volatile
  1803                           
  1804                           ;IO_LED.c: 15: LATHbits.LATH3 = 1;
  1805  0019EC  8690               	bsf	3984,3,c	;volatile
  1806  0019EE  0012               	return		;funcret
  1807  0019F0                     __end_of_IO_LED_configureIO:
  1808                           	opt stack 0
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           prodh	equ	0xFF4
  1814                           prodl	equ	0xFF3
  1815                           intcon	equ	0xFF2
  1816                           intcon2	equ	0xFF1
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           indf2	equ	0xFDF
  1820                           postinc2	equ	0xFDE
  1821                           postdec2	equ	0xFDD
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _IO_LCD_puts *****************
  1827 ;; Defined at:
  1828 ;;		line 243 in file "IO_LCD.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  str             2   21[COMRAM] PTR unsigned char 
  1831 ;;		 -> main@buff(20), 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  i               1   23[COMRAM] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        3 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    5
  1850 ;; This function calls:
  1851 ;;		_write_data
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text12
  1858  001896                     __ptext12:
  1859                           	opt stack 0
  1860  001896                     _IO_LCD_puts:
  1861                           	opt stack 25
  1862                           
  1863                           ;IO_LCD.c: 245: char i =0;
  1864                           
  1865                           ;incstack = 0
  1866  001896  0E00               	movlw	0
  1867  001898  6E18               	movwf	IO_LCD_puts@i,c
  1868                           
  1869                           ;IO_LCD.c: 247: while(str[i] != (0)) {
  1870  00189A  D00C               	goto	l2244
  1871  00189C                     l2240:
  1872                           
  1873                           ;IO_LCD.c: 249: write_data(str[i]);
  1874  00189C  5018               	movf	IO_LCD_puts@i,w,c
  1875  00189E  0D01               	mullw	1
  1876  0018A0  50F3               	movf	prodl,w,c
  1877  0018A2  2416               	addwf	IO_LCD_puts@str,w,c
  1878  0018A4  6ED9               	movwf	fsr2l,c
  1879  0018A6  50F4               	movf	prodh,w,c
  1880  0018A8  2017               	addwfc	IO_LCD_puts@str+1,w,c
  1881  0018AA  6EDA               	movwf	fsr2h,c
  1882  0018AC  50DF               	movf	indf2,w,c
  1883  0018AE  EC64  F009         	call	_write_data
  1884                           
  1885                           ;IO_LCD.c: 250: i++;
  1886  0018B2  2A18               	incf	IO_LCD_puts@i,f,c
  1887  0018B4                     l2244:
  1888  0018B4  5018               	movf	IO_LCD_puts@i,w,c
  1889  0018B6  0D01               	mullw	1
  1890  0018B8  50F3               	movf	prodl,w,c
  1891  0018BA  2416               	addwf	IO_LCD_puts@str,w,c
  1892  0018BC  6ED9               	movwf	fsr2l,c
  1893  0018BE  50F4               	movf	prodh,w,c
  1894  0018C0  2017               	addwfc	IO_LCD_puts@str+1,w,c
  1895  0018C2  6EDA               	movwf	fsr2h,c
  1896  0018C4  50DF               	movf	indf2,w,c
  1897  0018C6  B4D8               	btfsc	status,2,c
  1898  0018C8  0012               	return	
  1899  0018CA  D7E8               	goto	l2240
  1900  0018CC                     __end_of_IO_LCD_puts:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           prodh	equ	0xFF4
  1907                           prodl	equ	0xFF3
  1908                           intcon	equ	0xFF2
  1909                           intcon2	equ	0xFF1
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           indf2	equ	0xFDF
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           fsr2h	equ	0xFDA
  1916                           fsr2l	equ	0xFD9
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _IO_LCD_putrs *****************
  1920 ;; Defined at:
  1921 ;;		line 256 in file "IO_LCD.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  str             2   21[COMRAM] PTR const unsigned char 
  1924 ;;		 -> STR_2(8), STR_1(12), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  i               1   25[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        5 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    5
  1943 ;; This function calls:
  1944 ;;		_write_data
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text13
  1951  00171A                     __ptext13:
  1952                           	opt stack 0
  1953  00171A                     _IO_LCD_putrs:
  1954                           	opt stack 25
  1955                           
  1956                           ;IO_LCD.c: 258: char i = 0;
  1957                           
  1958                           ;incstack = 0
  1959  00171A  0E00               	movlw	0
  1960  00171C  6E1A               	movwf	IO_LCD_putrs@i,c
  1961                           
  1962                           ;IO_LCD.c: 260: while(str[i] != (0)) {
  1963  00171E  D015               	goto	l2104
  1964  001720                     l2100:
  1965                           
  1966                           ;IO_LCD.c: 262: write_data(str[i]);
  1967  001720  501A               	movf	IO_LCD_putrs@i,w,c
  1968  001722  0D01               	mullw	1
  1969  001724  C016  F018         	movff	IO_LCD_putrs@str,??_IO_LCD_putrs
  1970  001728  C017  F019         	movff	IO_LCD_putrs@str+1,??_IO_LCD_putrs+1
  1971  00172C  50F3               	movf	prodl,w,c
  1972  00172E  2618               	addwf	??_IO_LCD_putrs,f,c
  1973  001730  50F4               	movf	prodh,w,c
  1974  001732  2219               	addwfc	??_IO_LCD_putrs+1,f,c
  1975  001734  C018  FFF6         	movff	??_IO_LCD_putrs,tblptrl
  1976  001738  C019  FFF7         	movff	??_IO_LCD_putrs+1,tblptrh
  1977  00173C                     	if	0	;tblptru may be non-zero
  1978  00173C                     	endif
  1979  00173C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1980  00173C  0E00               	movlw	low (__mediumconst shr (0+16))
  1981  00173E  6EF8               	movwf	tblptru,c
  1982  001740                     	endif
  1983  001740  0008               	tblrd		*
  1984  001742  50F5               	movf	tablat,w,c
  1985  001744  EC64  F009         	call	_write_data
  1986                           
  1987                           ;IO_LCD.c: 263: i++;
  1988  001748  2A1A               	incf	IO_LCD_putrs@i,f,c
  1989  00174A                     l2104:
  1990  00174A  501A               	movf	IO_LCD_putrs@i,w,c
  1991  00174C  0D01               	mullw	1
  1992  00174E  C016  F018         	movff	IO_LCD_putrs@str,??_IO_LCD_putrs
  1993  001752  C017  F019         	movff	IO_LCD_putrs@str+1,??_IO_LCD_putrs+1
  1994  001756  50F3               	movf	prodl,w,c
  1995  001758  2618               	addwf	??_IO_LCD_putrs,f,c
  1996  00175A  50F4               	movf	prodh,w,c
  1997  00175C  2219               	addwfc	??_IO_LCD_putrs+1,f,c
  1998  00175E  C018  FFF6         	movff	??_IO_LCD_putrs,tblptrl
  1999  001762  C019  FFF7         	movff	??_IO_LCD_putrs+1,tblptrh
  2000  001766                     	if	0	;tblptru may be non-zero
  2001  001766                     	endif
  2002  001766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2003  001766  0E00               	movlw	low (__mediumconst shr (0+16))
  2004  001768  6EF8               	movwf	tblptru,c
  2005  00176A                     	endif
  2006  00176A  0008               	tblrd		*
  2007  00176C  50F5               	movf	tablat,w,c
  2008  00176E  0900               	iorlw	0
  2009  001770  B4D8               	btfsc	status,2,c
  2010  001772  0012               	return	
  2011  001774  D7D5               	goto	l2100
  2012  001776                     __end_of_IO_LCD_putrs:
  2013                           	opt stack 0
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           prodh	equ	0xFF4
  2019                           prodl	equ	0xFF3
  2020                           intcon	equ	0xFF2
  2021                           intcon2	equ	0xFF1
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           indf2	equ	0xFDF
  2025                           postinc2	equ	0xFDE
  2026                           postdec2	equ	0xFDD
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _write_data *****************
  2032 ;; Defined at:
  2033 ;;		line 84 in file "IO_LCD.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  data            1    wreg     unsigned char 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  data            1   20[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        3 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    4
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_IO_LCD_puts
  2058 ;;		_IO_LCD_putrs
  2059 ;;		_IO_LCD_putc
  2060 ;;		_IO_LCD_putrc
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text14
  2065  0012C8                     __ptext14:
  2066                           	opt stack 0
  2067  0012C8                     _write_data:
  2068                           	opt stack 25
  2069                           
  2070                           ;incstack = 0
  2071                           ;write_data@data stored from wreg
  2072  0012C8  6E15               	movwf	write_data@data,c
  2073                           
  2074                           ;IO_LCD.c: 86: LATHbits.LATH7 = 1;
  2075  0012CA  8E90               	bsf	3984,7,c	;volatile
  2076                           
  2077                           ;IO_LCD.c: 111: LATJbits.LATJ7 = (data >> 7) & 0x01;
  2078  0012CC  6A13               	clrf	??_write_data& (0+255),c
  2079  0012CE  AE15               	btfss	write_data@data,7,c
  2080  0012D0  D001               	bra	u1205
  2081  0012D2  2A13               	incf	??_write_data& (0+255),f,c
  2082  0012D4                     u1205:
  2083  0012D4  0E01               	movlw	1
  2084  0012D6  1613               	andwf	??_write_data,f,c
  2085  0012D8  3213               	rrcf	??_write_data,f,c
  2086  0012DA  3213               	rrcf	??_write_data,f,c
  2087  0012DC  5091               	movf	3985,w,c	;volatile
  2088  0012DE  1813               	xorwf	??_write_data,w,c
  2089  0012E0  0B7F               	andlw	-129
  2090  0012E2  1813               	xorwf	??_write_data,w,c
  2091  0012E4  6E91               	movwf	3985,c	;volatile
  2092                           
  2093                           ;IO_LCD.c: 112: LATJbits.LATJ6 = (data >> 6) & 0x01;
  2094  0012E6  C015  F013         	movff	write_data@data,??_write_data
  2095  0012EA  0E06               	movlw	6
  2096  0012EC  6E14               	movwf	(??_write_data+1)& (0+255),c
  2097  0012EE                     u1215:
  2098  0012EE  90D8               	bcf	status,0,c
  2099  0012F0  3213               	rrcf	??_write_data,f,c
  2100  0012F2  2E14               	decfsz	(??_write_data+1)& (0+255),f,c
  2101  0012F4  D7FC               	goto	u1215
  2102  0012F6  0E01               	movlw	1
  2103  0012F8  1613               	andwf	??_write_data,f,c
  2104  0012FA  3A13               	swapf	??_write_data,f,c
  2105  0012FC  4613               	rlncf	??_write_data,f,c
  2106  0012FE  4613               	rlncf	??_write_data,f,c
  2107  001300  5091               	movf	3985,w,c	;volatile
  2108  001302  1813               	xorwf	??_write_data,w,c
  2109  001304  0BBF               	andlw	-65
  2110  001306  1813               	xorwf	??_write_data,w,c
  2111  001308  6E91               	movwf	3985,c	;volatile
  2112                           
  2113                           ;IO_LCD.c: 113: LATJbits.LATJ5 = (data >> 5) & 0x01;
  2114  00130A  C015  F013         	movff	write_data@data,??_write_data
  2115  00130E  0E05               	movlw	5
  2116  001310  6E14               	movwf	(??_write_data+1)& (0+255),c
  2117  001312                     u1225:
  2118  001312  90D8               	bcf	status,0,c
  2119  001314  3213               	rrcf	??_write_data,f,c
  2120  001316  2E14               	decfsz	(??_write_data+1)& (0+255),f,c
  2121  001318  D7FC               	goto	u1225
  2122  00131A  0E01               	movlw	1
  2123  00131C  1613               	andwf	??_write_data,f,c
  2124  00131E  3A13               	swapf	??_write_data,f,c
  2125  001320  4613               	rlncf	??_write_data,f,c
  2126  001322  5091               	movf	3985,w,c	;volatile
  2127  001324  1813               	xorwf	??_write_data,w,c
  2128  001326  0BDF               	andlw	-33
  2129  001328  1813               	xorwf	??_write_data,w,c
  2130  00132A  6E91               	movwf	3985,c	;volatile
  2131                           
  2132                           ;IO_LCD.c: 114: LATJbits.LATJ4 = (data >> 4) & 0x01;
  2133  00132C  C015  F013         	movff	write_data@data,??_write_data
  2134  001330  3A13               	swapf	??_write_data,f,c
  2135  001332  0E0F               	movlw	15
  2136  001334  1613               	andwf	??_write_data,f,c
  2137  001336  0E01               	movlw	1
  2138  001338  1613               	andwf	??_write_data,f,c
  2139  00133A  3A13               	swapf	??_write_data,f,c
  2140  00133C  5091               	movf	3985,w,c	;volatile
  2141  00133E  1813               	xorwf	??_write_data,w,c
  2142  001340  0BEF               	andlw	-17
  2143  001342  1813               	xorwf	??_write_data,w,c
  2144  001344  6E91               	movwf	3985,c	;volatile
  2145                           
  2146                           ;IO_LCD.c: 116: LATHbits.LATH6 = 1;
  2147  001346  8C90               	bsf	3984,6,c	;volatile
  2148                           
  2149                           ;IO_LCD.c: 117: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2150  001348  0E10               	movlw	16
  2151  00134A                     u1687:
  2152  00134A  2EE8               	decfsz	wreg,f,c
  2153  00134C  D7FE               	goto	u1687
  2154  00134E  D000               	nop2		;nop
  2155                           
  2156                           ;IO_LCD.c: 118: LATHbits.LATH6 = 0;
  2157  001350  9C90               	bcf	3984,6,c	;volatile
  2158                           
  2159                           ;IO_LCD.c: 120: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2160  001352  0E10               	movlw	16
  2161  001354                     u1697:
  2162  001354  2EE8               	decfsz	wreg,f,c
  2163  001356  D7FE               	goto	u1697
  2164  001358  D000               	nop2		;nop
  2165                           
  2166                           ;IO_LCD.c: 122: LATJbits.LATJ7 = (data >> 3) & 0x01;
  2167  00135A  C015  F013         	movff	write_data@data,??_write_data
  2168  00135E  90D8               	bcf	status,0,c
  2169  001360  3213               	rrcf	??_write_data,f,c
  2170  001362  90D8               	bcf	status,0,c
  2171  001364  3213               	rrcf	??_write_data,f,c
  2172  001366  90D8               	bcf	status,0,c
  2173  001368  3213               	rrcf	??_write_data,f,c
  2174  00136A  0E01               	movlw	1
  2175  00136C  1613               	andwf	??_write_data,f,c
  2176  00136E  3213               	rrcf	??_write_data,f,c
  2177  001370  3213               	rrcf	??_write_data,f,c
  2178  001372  5091               	movf	3985,w,c	;volatile
  2179  001374  1813               	xorwf	??_write_data,w,c
  2180  001376  0B7F               	andlw	-129
  2181  001378  1813               	xorwf	??_write_data,w,c
  2182  00137A  6E91               	movwf	3985,c	;volatile
  2183                           
  2184                           ;IO_LCD.c: 123: LATJbits.LATJ6 = (data >> 2) & 0x01;
  2185  00137C  C015  F013         	movff	write_data@data,??_write_data
  2186  001380  90D8               	bcf	status,0,c
  2187  001382  3213               	rrcf	??_write_data,f,c
  2188  001384  90D8               	bcf	status,0,c
  2189  001386  3213               	rrcf	??_write_data,f,c
  2190  001388  0E01               	movlw	1
  2191  00138A  1613               	andwf	??_write_data,f,c
  2192  00138C  3A13               	swapf	??_write_data,f,c
  2193  00138E  4613               	rlncf	??_write_data,f,c
  2194  001390  4613               	rlncf	??_write_data,f,c
  2195  001392  5091               	movf	3985,w,c	;volatile
  2196  001394  1813               	xorwf	??_write_data,w,c
  2197  001396  0BBF               	andlw	-65
  2198  001398  1813               	xorwf	??_write_data,w,c
  2199  00139A  6E91               	movwf	3985,c	;volatile
  2200                           
  2201                           ;IO_LCD.c: 124: LATJbits.LATJ5 = (data >> 1) & 0x01;
  2202  00139C  C015  F013         	movff	write_data@data,??_write_data
  2203  0013A0  90D8               	bcf	status,0,c
  2204  0013A2  3213               	rrcf	??_write_data,f,c
  2205  0013A4  0E01               	movlw	1
  2206  0013A6  1613               	andwf	??_write_data,f,c
  2207  0013A8  3A13               	swapf	??_write_data,f,c
  2208  0013AA  4613               	rlncf	??_write_data,f,c
  2209  0013AC  5091               	movf	3985,w,c	;volatile
  2210  0013AE  1813               	xorwf	??_write_data,w,c
  2211  0013B0  0BDF               	andlw	-33
  2212  0013B2  1813               	xorwf	??_write_data,w,c
  2213  0013B4  6E91               	movwf	3985,c	;volatile
  2214                           
  2215                           ;IO_LCD.c: 125: LATJbits.LATJ4 = data & 0x01;
  2216  0013B6  C015  F013         	movff	write_data@data,??_write_data
  2217  0013BA  0E01               	movlw	1
  2218  0013BC  1613               	andwf	??_write_data,f,c
  2219  0013BE  3A13               	swapf	??_write_data,f,c
  2220  0013C0  5091               	movf	3985,w,c	;volatile
  2221  0013C2  1813               	xorwf	??_write_data,w,c
  2222  0013C4  0BEF               	andlw	-17
  2223  0013C6  1813               	xorwf	??_write_data,w,c
  2224  0013C8  6E91               	movwf	3985,c	;volatile
  2225                           
  2226                           ;IO_LCD.c: 127: LATHbits.LATH6 = 1;
  2227  0013CA  8C90               	bsf	3984,6,c	;volatile
  2228                           
  2229                           ;IO_LCD.c: 128: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2230  0013CC  0E10               	movlw	16
  2231  0013CE                     u1707:
  2232  0013CE  2EE8               	decfsz	wreg,f,c
  2233  0013D0  D7FE               	goto	u1707
  2234  0013D2  D000               	nop2		;nop
  2235                           
  2236                           ;IO_LCD.c: 129: LATHbits.LATH6 = 0;
  2237  0013D4  9C90               	bcf	3984,6,c	;volatile
  2238                           
  2239                           ;IO_LCD.c: 131: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2240  0013D6  0E10               	movlw	16
  2241  0013D8                     u1717:
  2242  0013D8  2EE8               	decfsz	wreg,f,c
  2243  0013DA  D7FE               	goto	u1717
  2244  0013DC  D000               	nop2		;nop
  2245                           
  2246                           ;IO_LCD.c: 135: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2247  0013DE  0E32               	movlw	50
  2248  0013E0                     u1727:
  2249  0013E0  2EE8               	decfsz	wreg,f,c
  2250  0013E2  D7FE               	goto	u1727
  2251                           
  2252                           ;IO_LCD.c: 137: LATHbits.LATH7 = 0;
  2253  0013E4  9E90               	bcf	3984,7,c	;volatile
  2254  0013E6  0012               	return		;funcret
  2255  0013E8                     __end_of_write_data:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           intcon	equ	0xFF2
  2264                           intcon2	equ	0xFF1
  2265                           postinc0	equ	0xFEE
  2266                           wreg	equ	0xFE8
  2267                           indf2	equ	0xFDF
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _IO_LCD_configureIO *****************
  2275 ;; Defined at:
  2276 ;;		line 141 in file "IO_LCD.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    5
  2297 ;; This function calls:
  2298 ;;		_write_port
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text15
  2305  001988                     __ptext15:
  2306                           	opt stack 0
  2307  001988                     _IO_LCD_configureIO:
  2308                           	opt stack 25
  2309                           
  2310                           ;IO_LCD.c: 158: TRISJbits.TRISJ7 = 0;
  2311                           
  2312                           ;incstack = 0
  2313  001988  9E9A               	bcf	3994,7,c	;volatile
  2314                           
  2315                           ;IO_LCD.c: 159: TRISJbits.TRISJ6 = 0;
  2316  00198A  9C9A               	bcf	3994,6,c	;volatile
  2317                           
  2318                           ;IO_LCD.c: 160: TRISJbits.TRISJ5 = 0;
  2319  00198C  9A9A               	bcf	3994,5,c	;volatile
  2320                           
  2321                           ;IO_LCD.c: 161: TRISJbits.TRISJ4 = 0;
  2322  00198E  989A               	bcf	3994,4,c	;volatile
  2323                           
  2324                           ;IO_LCD.c: 165: TRISHbits.TRISH6 = 0;
  2325  001990  9C99               	bcf	3993,6,c	;volatile
  2326                           
  2327                           ;IO_LCD.c: 166: TRISHbits.TRISH7 = 0;
  2328  001992  9E99               	bcf	3993,7,c	;volatile
  2329                           
  2330                           ;IO_LCD.c: 168: LATHbits.LATH6 = 0;
  2331  001994  9C90               	bcf	3984,6,c	;volatile
  2332                           
  2333                           ;IO_LCD.c: 169: LATHbits.LATH7 = 0;
  2334  001996  9E90               	bcf	3984,7,c	;volatile
  2335                           
  2336                           ;IO_LCD.c: 171: write_port(0x00);
  2337  001998  0E00               	movlw	0
  2338  00199A  EC53  F00B         	call	_write_port
  2339  00199E  0012               	return		;funcret
  2340  0019A0                     __end_of_IO_LCD_configureIO:
  2341                           	opt stack 0
  2342                           tblptru	equ	0xFF8
  2343                           tblptrh	equ	0xFF7
  2344                           tblptrl	equ	0xFF6
  2345                           tablat	equ	0xFF5
  2346                           prodh	equ	0xFF4
  2347                           prodl	equ	0xFF3
  2348                           intcon	equ	0xFF2
  2349                           intcon2	equ	0xFF1
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           indf2	equ	0xFDF
  2353                           postinc2	equ	0xFDE
  2354                           postdec2	equ	0xFDD
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           status	equ	0xFD8
  2358                           
  2359 ;; *************** function _write_port *****************
  2360 ;; Defined at:
  2361 ;;		line 7 in file "IO_LCD.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  data            1    wreg     unsigned char 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  data            1   19[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    4
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_IO_LCD_configureIO
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text16
  2390  0016A6                     __ptext16:
  2391                           	opt stack 0
  2392  0016A6                     _write_port:
  2393                           	opt stack 25
  2394                           
  2395                           ;incstack = 0
  2396                           ;write_port@data stored from wreg
  2397  0016A6  6E14               	movwf	write_port@data,c
  2398                           
  2399                           ;IO_LCD.c: 24: LATJbits.LATJ7 = (data >> 3) & 0x01;
  2400  0016A8  C014  F013         	movff	write_port@data,??_write_port
  2401  0016AC  90D8               	bcf	status,0,c
  2402  0016AE  3213               	rrcf	??_write_port,f,c
  2403  0016B0  90D8               	bcf	status,0,c
  2404  0016B2  3213               	rrcf	??_write_port,f,c
  2405  0016B4  90D8               	bcf	status,0,c
  2406  0016B6  3213               	rrcf	??_write_port,f,c
  2407  0016B8  0E01               	movlw	1
  2408  0016BA  1613               	andwf	??_write_port,f,c
  2409  0016BC  3213               	rrcf	??_write_port,f,c
  2410  0016BE  3213               	rrcf	??_write_port,f,c
  2411  0016C0  5091               	movf	3985,w,c	;volatile
  2412  0016C2  1813               	xorwf	??_write_port,w,c
  2413  0016C4  0B7F               	andlw	-129
  2414  0016C6  1813               	xorwf	??_write_port,w,c
  2415  0016C8  6E91               	movwf	3985,c	;volatile
  2416                           
  2417                           ;IO_LCD.c: 25: LATJbits.LATJ6 = (data >> 2) & 0x01;
  2418  0016CA  C014  F013         	movff	write_port@data,??_write_port
  2419  0016CE  90D8               	bcf	status,0,c
  2420  0016D0  3213               	rrcf	??_write_port,f,c
  2421  0016D2  90D8               	bcf	status,0,c
  2422  0016D4  3213               	rrcf	??_write_port,f,c
  2423  0016D6  0E01               	movlw	1
  2424  0016D8  1613               	andwf	??_write_port,f,c
  2425  0016DA  3A13               	swapf	??_write_port,f,c
  2426  0016DC  4613               	rlncf	??_write_port,f,c
  2427  0016DE  4613               	rlncf	??_write_port,f,c
  2428  0016E0  5091               	movf	3985,w,c	;volatile
  2429  0016E2  1813               	xorwf	??_write_port,w,c
  2430  0016E4  0BBF               	andlw	-65
  2431  0016E6  1813               	xorwf	??_write_port,w,c
  2432  0016E8  6E91               	movwf	3985,c	;volatile
  2433                           
  2434                           ;IO_LCD.c: 26: LATJbits.LATJ5 = (data >> 1) & 0x01;
  2435  0016EA  C014  F013         	movff	write_port@data,??_write_port
  2436  0016EE  90D8               	bcf	status,0,c
  2437  0016F0  3213               	rrcf	??_write_port,f,c
  2438  0016F2  0E01               	movlw	1
  2439  0016F4  1613               	andwf	??_write_port,f,c
  2440  0016F6  3A13               	swapf	??_write_port,f,c
  2441  0016F8  4613               	rlncf	??_write_port,f,c
  2442  0016FA  5091               	movf	3985,w,c	;volatile
  2443  0016FC  1813               	xorwf	??_write_port,w,c
  2444  0016FE  0BDF               	andlw	-33
  2445  001700  1813               	xorwf	??_write_port,w,c
  2446  001702  6E91               	movwf	3985,c	;volatile
  2447                           
  2448                           ;IO_LCD.c: 27: LATJbits.LATJ4 = data & 0x01;
  2449  001704  C014  F013         	movff	write_port@data,??_write_port
  2450  001708  0E01               	movlw	1
  2451  00170A  1613               	andwf	??_write_port,f,c
  2452  00170C  3A13               	swapf	??_write_port,f,c
  2453  00170E  5091               	movf	3985,w,c	;volatile
  2454  001710  1813               	xorwf	??_write_port,w,c
  2455  001712  0BEF               	andlw	-17
  2456  001714  1813               	xorwf	??_write_port,w,c
  2457  001716  6E91               	movwf	3985,c	;volatile
  2458  001718  0012               	return		;funcret
  2459  00171A                     __end_of_write_port:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           intcon	equ	0xFF2
  2468                           intcon2	equ	0xFF1
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           indf2	equ	0xFDF
  2472                           postinc2	equ	0xFDE
  2473                           postdec2	equ	0xFDD
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _IO_LCD_SetCursor *****************
  2479 ;; Defined at:
  2480 ;;		line 269 in file "IO_LCD.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  row             1    wreg     unsigned char 
  2483 ;;  col             1   21[COMRAM] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  row             1   22[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    5
  2502 ;; This function calls:
  2503 ;;		_write_cmd
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text17
  2510  001776                     __ptext17:
  2511                           	opt stack 0
  2512  001776                     _IO_LCD_SetCursor:
  2513                           	opt stack 25
  2514                           
  2515                           ;incstack = 0
  2516                           ;IO_LCD_SetCursor@row stored from wreg
  2517  001776  6E17               	movwf	IO_LCD_SetCursor@row,c
  2518                           
  2519                           ;IO_LCD.c: 271: switch(row) {
  2520  001778  D017               	goto	l2118
  2521  00177A                     l2108:
  2522                           
  2523                           ;IO_LCD.c: 273: write_cmd(0x80 | col - 1);
  2524  00177A  0416               	decf	IO_LCD_SetCursor@col,w,c
  2525  00177C  0980               	iorlw	128
  2526  00177E  ECF4  F009         	call	_write_cmd
  2527                           
  2528                           ;IO_LCD.c: 274: break;
  2529  001782  D01F               	goto	l2120
  2530  001784                     l2110:
  2531                           
  2532                           ;IO_LCD.c: 276: write_cmd(0x80 | col + 39);
  2533  001784  5016               	movf	IO_LCD_SetCursor@col,w,c
  2534  001786  0F27               	addlw	39
  2535  001788  0980               	iorlw	128
  2536  00178A  ECF4  F009         	call	_write_cmd
  2537                           
  2538                           ;IO_LCD.c: 277: break;
  2539  00178E  D019               	goto	l2120
  2540  001790                     l2112:
  2541                           
  2542                           ;IO_LCD.c: 279: write_cmd(0x80 | col + 19);
  2543  001790  5016               	movf	IO_LCD_SetCursor@col,w,c
  2544  001792  0F13               	addlw	19
  2545  001794  0980               	iorlw	128
  2546  001796  ECF4  F009         	call	_write_cmd
  2547                           
  2548                           ;IO_LCD.c: 280: break;
  2549  00179A  D013               	goto	l2120
  2550  00179C                     l2114:
  2551                           
  2552                           ;IO_LCD.c: 282: write_cmd(0x80 | col + 83);
  2553  00179C  5016               	movf	IO_LCD_SetCursor@col,w,c
  2554  00179E  0F53               	addlw	83
  2555  0017A0  0980               	iorlw	128
  2556  0017A2  ECF4  F009         	call	_write_cmd
  2557                           
  2558                           ;IO_LCD.c: 286: }
  2559                           
  2560                           ;IO_LCD.c: 285: break;
  2561                           
  2562                           ;IO_LCD.c: 284: default:
  2563                           
  2564                           ;IO_LCD.c: 283: break;
  2565  0017A6  D00D               	goto	l2120
  2566  0017A8                     l2118:
  2567  0017A8  5017               	movf	IO_LCD_SetCursor@row,w,c
  2568                           
  2569                           ; Switch size 1, requested type "space"
  2570                           ; Number of cases is 4, Range of values is 1 to 4
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte           13     7 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575  0017AA  0A01               	xorlw	1	; case 1
  2576  0017AC  B4D8               	btfsc	status,2,c
  2577  0017AE  D7E5               	goto	l2108
  2578  0017B0  0A03               	xorlw	3	; case 2
  2579  0017B2  B4D8               	btfsc	status,2,c
  2580  0017B4  D7E7               	goto	l2110
  2581  0017B6  0A01               	xorlw	1	; case 3
  2582  0017B8  B4D8               	btfsc	status,2,c
  2583  0017BA  D7EA               	goto	l2112
  2584  0017BC  0A07               	xorlw	7	; case 4
  2585  0017BE  B4D8               	btfsc	status,2,c
  2586  0017C0  D7ED               	goto	l2114
  2587  0017C2                     l2120:
  2588                           
  2589                           ;IO_LCD.c: 288: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2590  0017C2  0E32               	movlw	50
  2591  0017C4                     u1737:
  2592  0017C4  2EE8               	decfsz	wreg,f,c
  2593  0017C6  D7FE               	goto	u1737
  2594  0017C8  0012               	return		;funcret
  2595  0017CA                     __end_of_IO_LCD_SetCursor:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           intcon2	equ	0xFF1
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           indf2	equ	0xFDF
  2608                           postinc2	equ	0xFDE
  2609                           postdec2	equ	0xFDD
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _IO_LCD_Init *****************
  2615 ;; Defined at:
  2616 ;;		line 176 in file "IO_LCD.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;Total ram usage:        1 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    5
  2637 ;; This function calls:
  2638 ;;		_write_cmd
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text18
  2645  00159C                     __ptext18:
  2646                           	opt stack 0
  2647  00159C                     _IO_LCD_Init:
  2648                           	opt stack 25
  2649                           
  2650                           ;IO_LCD.c: 178: _delay((unsigned long)((40)*(10000000/4000.0)));
  2651                           
  2652                           ;incstack = 0
  2653  00159C  0E82               	movlw	130
  2654  00159E  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  2655  0015A0  0EDE               	movlw	222
  2656  0015A2                     u1747:
  2657  0015A2  2EE8               	decfsz	wreg,f,c
  2658  0015A4  D7FE               	goto	u1747
  2659  0015A6  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  2660  0015A8  D7FC               	goto	u1747
  2661                           
  2662                           ;IO_LCD.c: 180: write_cmd(0x30);
  2663  0015AA  0E30               	movlw	48
  2664  0015AC  ECF4  F009         	call	_write_cmd
  2665                           
  2666                           ;IO_LCD.c: 181: _delay((unsigned long)((5)*(10000000/4000.0)));
  2667  0015B0  0E11               	movlw	17
  2668  0015B2  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  2669  0015B4  0E3A               	movlw	58
  2670  0015B6                     u1757:
  2671  0015B6  2EE8               	decfsz	wreg,f,c
  2672  0015B8  D7FE               	goto	u1757
  2673  0015BA  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  2674  0015BC  D7FC               	goto	u1757
  2675  0015BE  D000               	nop2	
  2676                           
  2677                           ;IO_LCD.c: 182: write_cmd(0x30);
  2678  0015C0  0E30               	movlw	48
  2679  0015C2  ECF4  F009         	call	_write_cmd
  2680                           
  2681                           ;IO_LCD.c: 183: _delay((unsigned long)((150)*(10000000/4000000.0)));
  2682  0015C6  0E7D               	movlw	125
  2683  0015C8                     u1767:
  2684  0015C8  2EE8               	decfsz	wreg,f,c
  2685  0015CA  D7FE               	goto	u1767
  2686                           
  2687                           ;IO_LCD.c: 184: write_cmd(0x30);
  2688  0015CC  0E30               	movlw	48
  2689  0015CE  ECF4  F009         	call	_write_cmd
  2690                           
  2691                           ;IO_LCD.c: 185: _delay((unsigned long)((150)*(10000000/4000000.0)));
  2692  0015D2  0E7D               	movlw	125
  2693  0015D4                     u1777:
  2694  0015D4  2EE8               	decfsz	wreg,f,c
  2695  0015D6  D7FE               	goto	u1777
  2696                           
  2697                           ;IO_LCD.c: 195: write_cmd(0x20);
  2698  0015D8  0E20               	movlw	32
  2699  0015DA  ECF4  F009         	call	_write_cmd
  2700                           
  2701                           ;IO_LCD.c: 199: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2702  0015DE  0E32               	movlw	50
  2703  0015E0                     u1787:
  2704  0015E0  2EE8               	decfsz	wreg,f,c
  2705  0015E2  D7FE               	goto	u1787
  2706                           
  2707                           ;IO_LCD.c: 200: write_cmd(0x08);
  2708  0015E4  0E08               	movlw	8
  2709  0015E6  ECF4  F009         	call	_write_cmd
  2710                           
  2711                           ;IO_LCD.c: 201: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2712  0015EA  0E32               	movlw	50
  2713  0015EC                     u1797:
  2714  0015EC  2EE8               	decfsz	wreg,f,c
  2715  0015EE  D7FE               	goto	u1797
  2716                           
  2717                           ;IO_LCD.c: 202: write_cmd(0x01);
  2718  0015F0  0E01               	movlw	1
  2719  0015F2  ECF4  F009         	call	_write_cmd
  2720                           
  2721                           ;IO_LCD.c: 203: _delay((unsigned long)((4)*(10000000/4000.0)));
  2722  0015F6  0E0D               	movlw	13
  2723  0015F8  6E16               	movwf	??_IO_LCD_Init& (0+255),c
  2724  0015FA  0EFC               	movlw	252
  2725  0015FC                     u1807:
  2726  0015FC  2EE8               	decfsz	wreg,f,c
  2727  0015FE  D7FE               	goto	u1807
  2728  001600  2E16               	decfsz	??_IO_LCD_Init& (0+255),f,c
  2729  001602  D7FC               	goto	u1807
  2730                           
  2731                           ;IO_LCD.c: 204: write_cmd(0x06);
  2732  001604  0E06               	movlw	6
  2733  001606  ECF4  F009         	call	_write_cmd
  2734                           
  2735                           ;IO_LCD.c: 205: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2736  00160A  0E32               	movlw	50
  2737  00160C                     u1817:
  2738  00160C  2EE8               	decfsz	wreg,f,c
  2739  00160E  D7FE               	goto	u1817
  2740                           
  2741                           ;IO_LCD.c: 206: write_cmd(0x0C);
  2742  001610  0E0C               	movlw	12
  2743  001612  ECF4  F009         	call	_write_cmd
  2744                           
  2745                           ;IO_LCD.c: 207: _delay((unsigned long)((60)*(10000000/4000000.0)));
  2746  001616  0E32               	movlw	50
  2747  001618                     u1827:
  2748  001618  2EE8               	decfsz	wreg,f,c
  2749  00161A  D7FE               	goto	u1827
  2750                           
  2751                           ;IO_LCD.c: 209: lcd_state.blink_on = 0;
  2752  00161C  943E               	bcf	_lcd_state+2,2,c
  2753                           
  2754                           ;IO_LCD.c: 210: lcd_state.cursor_on = 0;
  2755  00161E  923E               	bcf	_lcd_state+2,1,c
  2756                           
  2757                           ;IO_LCD.c: 211: lcd_state.display_on = 1;
  2758  001620  803E               	bsf	_lcd_state+2,0,c
  2759                           
  2760                           ;IO_LCD.c: 212: lcd_state.DDRAM_addr = 0x00;
  2761  001622  0E00               	movlw	0
  2762  001624  6E3C               	movwf	_lcd_state,c
  2763                           
  2764                           ;IO_LCD.c: 213: lcd_state.CGRAM_addr = 0x00;
  2765  001626  0E00               	movlw	0
  2766  001628  6E3D               	movwf	_lcd_state+1,c
  2767  00162A  0012               	return		;funcret
  2768  00162C                     __end_of_IO_LCD_Init:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           intcon2	equ	0xFF1
  2778                           postinc0	equ	0xFEE
  2779                           wreg	equ	0xFE8
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           postdec2	equ	0xFDD
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           status	equ	0xFD8
  2786                           
  2787 ;; *************** function _write_cmd *****************
  2788 ;; Defined at:
  2789 ;;		line 33 in file "IO_LCD.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  cmd             1    wreg     unsigned char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  cmd             1   20[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;Total ram usage:        3 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    4
  2810 ;; This function calls:
  2811 ;;		Nothing
  2812 ;; This function is called by:
  2813 ;;		_IO_LCD_Init
  2814 ;;		_IO_LCD_SetCursor
  2815 ;;		_IO_LCD_CursorHome
  2816 ;;		_IO_LCD_ClearDisplay
  2817 ;;		_IO_LCD_EnableCursor
  2818 ;;		_IO_LCD_DisableCursor
  2819 ;;		_IO_LCD_EnableDisplay
  2820 ;;		_IO_LCD_DisableDisplay
  2821 ;;		_IO_LCD_EnableBlink
  2822 ;;		_IO_LCD_DisableBlink
  2823 ;;		_IO_LCD_SetEntryMode
  2824 ;;		_IO_LCD_ShiftCursor
  2825 ;;		_IO_LCD_ShiftDisplay
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text19
  2830  0013E8                     __ptext19:
  2831                           	opt stack 0
  2832  0013E8                     _write_cmd:
  2833                           	opt stack 25
  2834                           
  2835                           ;incstack = 0
  2836                           ;write_cmd@cmd stored from wreg
  2837  0013E8  6E15               	movwf	write_cmd@cmd,c
  2838                           
  2839                           ;IO_LCD.c: 35: LATHbits.LATH7 = 0;
  2840  0013EA  9E90               	bcf	3984,7,c	;volatile
  2841                           
  2842                           ;IO_LCD.c: 60: LATJbits.LATJ7 = (cmd >> 7) & 0x01;
  2843  0013EC  6A13               	clrf	??_write_cmd& (0+255),c
  2844  0013EE  AE15               	btfss	write_cmd@cmd,7,c
  2845  0013F0  D001               	bra	u1175
  2846  0013F2  2A13               	incf	??_write_cmd& (0+255),f,c
  2847  0013F4                     u1175:
  2848  0013F4  0E01               	movlw	1
  2849  0013F6  1613               	andwf	??_write_cmd,f,c
  2850  0013F8  3213               	rrcf	??_write_cmd,f,c
  2851  0013FA  3213               	rrcf	??_write_cmd,f,c
  2852  0013FC  5091               	movf	3985,w,c	;volatile
  2853  0013FE  1813               	xorwf	??_write_cmd,w,c
  2854  001400  0B7F               	andlw	-129
  2855  001402  1813               	xorwf	??_write_cmd,w,c
  2856  001404  6E91               	movwf	3985,c	;volatile
  2857                           
  2858                           ;IO_LCD.c: 61: LATJbits.LATJ6 = (cmd >> 6) & 0x01;
  2859  001406  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2860  00140A  0E06               	movlw	6
  2861  00140C  6E14               	movwf	(??_write_cmd+1)& (0+255),c
  2862  00140E                     u1185:
  2863  00140E  90D8               	bcf	status,0,c
  2864  001410  3213               	rrcf	??_write_cmd,f,c
  2865  001412  2E14               	decfsz	(??_write_cmd+1)& (0+255),f,c
  2866  001414  D7FC               	goto	u1185
  2867  001416  0E01               	movlw	1
  2868  001418  1613               	andwf	??_write_cmd,f,c
  2869  00141A  3A13               	swapf	??_write_cmd,f,c
  2870  00141C  4613               	rlncf	??_write_cmd,f,c
  2871  00141E  4613               	rlncf	??_write_cmd,f,c
  2872  001420  5091               	movf	3985,w,c	;volatile
  2873  001422  1813               	xorwf	??_write_cmd,w,c
  2874  001424  0BBF               	andlw	-65
  2875  001426  1813               	xorwf	??_write_cmd,w,c
  2876  001428  6E91               	movwf	3985,c	;volatile
  2877                           
  2878                           ;IO_LCD.c: 62: LATJbits.LATJ5 = (cmd >> 5) & 0x01;
  2879  00142A  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2880  00142E  0E05               	movlw	5
  2881  001430  6E14               	movwf	(??_write_cmd+1)& (0+255),c
  2882  001432                     u1195:
  2883  001432  90D8               	bcf	status,0,c
  2884  001434  3213               	rrcf	??_write_cmd,f,c
  2885  001436  2E14               	decfsz	(??_write_cmd+1)& (0+255),f,c
  2886  001438  D7FC               	goto	u1195
  2887  00143A  0E01               	movlw	1
  2888  00143C  1613               	andwf	??_write_cmd,f,c
  2889  00143E  3A13               	swapf	??_write_cmd,f,c
  2890  001440  4613               	rlncf	??_write_cmd,f,c
  2891  001442  5091               	movf	3985,w,c	;volatile
  2892  001444  1813               	xorwf	??_write_cmd,w,c
  2893  001446  0BDF               	andlw	-33
  2894  001448  1813               	xorwf	??_write_cmd,w,c
  2895  00144A  6E91               	movwf	3985,c	;volatile
  2896                           
  2897                           ;IO_LCD.c: 63: LATJbits.LATJ4 = (cmd >> 4) & 0x01;
  2898  00144C  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2899  001450  3A13               	swapf	??_write_cmd,f,c
  2900  001452  0E0F               	movlw	15
  2901  001454  1613               	andwf	??_write_cmd,f,c
  2902  001456  0E01               	movlw	1
  2903  001458  1613               	andwf	??_write_cmd,f,c
  2904  00145A  3A13               	swapf	??_write_cmd,f,c
  2905  00145C  5091               	movf	3985,w,c	;volatile
  2906  00145E  1813               	xorwf	??_write_cmd,w,c
  2907  001460  0BEF               	andlw	-17
  2908  001462  1813               	xorwf	??_write_cmd,w,c
  2909  001464  6E91               	movwf	3985,c	;volatile
  2910                           
  2911                           ;IO_LCD.c: 65: LATHbits.LATH6 = 1;
  2912  001466  8C90               	bsf	3984,6,c	;volatile
  2913                           
  2914                           ;IO_LCD.c: 66: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2915  001468  0E10               	movlw	16
  2916  00146A                     u1837:
  2917  00146A  2EE8               	decfsz	wreg,f,c
  2918  00146C  D7FE               	goto	u1837
  2919  00146E  D000               	nop2		;nop
  2920                           
  2921                           ;IO_LCD.c: 67: LATHbits.LATH6 = 0;
  2922  001470  9C90               	bcf	3984,6,c	;volatile
  2923                           
  2924                           ;IO_LCD.c: 68: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2925  001472  0E10               	movlw	16
  2926  001474                     u1847:
  2927  001474  2EE8               	decfsz	wreg,f,c
  2928  001476  D7FE               	goto	u1847
  2929  001478  D000               	nop2		;nop
  2930                           
  2931                           ;IO_LCD.c: 70: LATJbits.LATJ7 = (cmd >> 3) & 0x01;
  2932  00147A  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2933  00147E  90D8               	bcf	status,0,c
  2934  001480  3213               	rrcf	??_write_cmd,f,c
  2935  001482  90D8               	bcf	status,0,c
  2936  001484  3213               	rrcf	??_write_cmd,f,c
  2937  001486  90D8               	bcf	status,0,c
  2938  001488  3213               	rrcf	??_write_cmd,f,c
  2939  00148A  0E01               	movlw	1
  2940  00148C  1613               	andwf	??_write_cmd,f,c
  2941  00148E  3213               	rrcf	??_write_cmd,f,c
  2942  001490  3213               	rrcf	??_write_cmd,f,c
  2943  001492  5091               	movf	3985,w,c	;volatile
  2944  001494  1813               	xorwf	??_write_cmd,w,c
  2945  001496  0B7F               	andlw	-129
  2946  001498  1813               	xorwf	??_write_cmd,w,c
  2947  00149A  6E91               	movwf	3985,c	;volatile
  2948                           
  2949                           ;IO_LCD.c: 71: LATJbits.LATJ6 = (cmd >> 2) & 0x01;
  2950  00149C  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2951  0014A0  90D8               	bcf	status,0,c
  2952  0014A2  3213               	rrcf	??_write_cmd,f,c
  2953  0014A4  90D8               	bcf	status,0,c
  2954  0014A6  3213               	rrcf	??_write_cmd,f,c
  2955  0014A8  0E01               	movlw	1
  2956  0014AA  1613               	andwf	??_write_cmd,f,c
  2957  0014AC  3A13               	swapf	??_write_cmd,f,c
  2958  0014AE  4613               	rlncf	??_write_cmd,f,c
  2959  0014B0  4613               	rlncf	??_write_cmd,f,c
  2960  0014B2  5091               	movf	3985,w,c	;volatile
  2961  0014B4  1813               	xorwf	??_write_cmd,w,c
  2962  0014B6  0BBF               	andlw	-65
  2963  0014B8  1813               	xorwf	??_write_cmd,w,c
  2964  0014BA  6E91               	movwf	3985,c	;volatile
  2965                           
  2966                           ;IO_LCD.c: 72: LATJbits.LATJ5 = (cmd >> 1) & 0x01;
  2967  0014BC  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2968  0014C0  90D8               	bcf	status,0,c
  2969  0014C2  3213               	rrcf	??_write_cmd,f,c
  2970  0014C4  0E01               	movlw	1
  2971  0014C6  1613               	andwf	??_write_cmd,f,c
  2972  0014C8  3A13               	swapf	??_write_cmd,f,c
  2973  0014CA  4613               	rlncf	??_write_cmd,f,c
  2974  0014CC  5091               	movf	3985,w,c	;volatile
  2975  0014CE  1813               	xorwf	??_write_cmd,w,c
  2976  0014D0  0BDF               	andlw	-33
  2977  0014D2  1813               	xorwf	??_write_cmd,w,c
  2978  0014D4  6E91               	movwf	3985,c	;volatile
  2979                           
  2980                           ;IO_LCD.c: 73: LATJbits.LATJ4 = cmd & 0x01;
  2981  0014D6  C015  F013         	movff	write_cmd@cmd,??_write_cmd
  2982  0014DA  0E01               	movlw	1
  2983  0014DC  1613               	andwf	??_write_cmd,f,c
  2984  0014DE  3A13               	swapf	??_write_cmd,f,c
  2985  0014E0  5091               	movf	3985,w,c	;volatile
  2986  0014E2  1813               	xorwf	??_write_cmd,w,c
  2987  0014E4  0BEF               	andlw	-17
  2988  0014E6  1813               	xorwf	??_write_cmd,w,c
  2989  0014E8  6E91               	movwf	3985,c	;volatile
  2990                           
  2991                           ;IO_LCD.c: 75: LATHbits.LATH6 = 1;
  2992  0014EA  8C90               	bsf	3984,6,c	;volatile
  2993                           
  2994                           ;IO_LCD.c: 76: _delay((unsigned long)((20)*(10000000/4000000.0)));
  2995  0014EC  0E10               	movlw	16
  2996  0014EE                     u1857:
  2997  0014EE  2EE8               	decfsz	wreg,f,c
  2998  0014F0  D7FE               	goto	u1857
  2999  0014F2  D000               	nop2		;nop
  3000                           
  3001                           ;IO_LCD.c: 77: LATHbits.LATH6 = 0;
  3002  0014F4  9C90               	bcf	3984,6,c	;volatile
  3003                           
  3004                           ;IO_LCD.c: 78: _delay((unsigned long)((20)*(10000000/4000000.0)));
  3005  0014F6  0E10               	movlw	16
  3006  0014F8                     u1867:
  3007  0014F8  2EE8               	decfsz	wreg,f,c
  3008  0014FA  D7FE               	goto	u1867
  3009  0014FC  D000               	nop2		;nop
  3010  0014FE  0012               	return		;funcret
  3011  001500                     __end_of_write_cmd:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           intcon2	equ	0xFF1
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           indf2	equ	0xFDF
  3024                           postinc2	equ	0xFDE
  3025                           postdec2	equ	0xFDD
  3026                           fsr2h	equ	0xFDA
  3027                           fsr2l	equ	0xFD9
  3028                           status	equ	0xFD8
  3029                           
  3030 ;; *************** function _IO_Encoder_getCount *****************
  3031 ;; Defined at:
  3032 ;;		line 45 in file "IO_Encoder.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  count           2   20[COMRAM] unsigned int 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2   18[COMRAM] unsigned int 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        4 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; Hardware stack levels required when called:    4
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text20
  3061  00196E                     __ptext20:
  3062                           	opt stack 0
  3063  00196E                     _IO_Encoder_getCount:
  3064                           	opt stack 26
  3065                           
  3066                           ;IO_Encoder.c: 47: unsigned int count = enc_state.count;
  3067                           
  3068                           ;incstack = 0
  3069  00196E  C039  F015         	movff	_enc_state,IO_Encoder_getCount@count	;volatile
  3070  001972  C03A  F016         	movff	_enc_state+1,IO_Encoder_getCount@count+1	;volatile
  3071                           
  3072                           ;IO_Encoder.c: 49: enc_state.count = 0;
  3073  001976  0E00               	movlw	0
  3074  001978  6E3A               	movwf	_enc_state+1,c	;volatile
  3075  00197A  0E00               	movlw	0
  3076  00197C  6E39               	movwf	_enc_state,c	;volatile
  3077                           
  3078                           ;IO_Encoder.c: 50: return(count);
  3079  00197E  C015  F013         	movff	IO_Encoder_getCount@count,?_IO_Encoder_getCount
  3080  001982  C016  F014         	movff	IO_Encoder_getCount@count+1,?_IO_Encoder_getCount+1
  3081  001986  0012               	return	
  3082  001988                     __end_of_IO_Encoder_getCount:
  3083                           	opt stack 0
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           intcon	equ	0xFF2
  3091                           intcon2	equ	0xFF1
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           indf2	equ	0xFDF
  3095                           postinc2	equ	0xFDE
  3096                           postdec2	equ	0xFDD
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _IO_Encoder_configureIO *****************
  3102 ;; Defined at:
  3103 ;;		line 32 in file "IO_Encoder.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    4
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text21
  3132  001938                     __ptext21:
  3133                           	opt stack 0
  3134  001938                     _IO_Encoder_configureIO:
  3135                           	opt stack 26
  3136                           
  3137                           ;IO_Encoder.c: 34: enc_A = 0;
  3138                           
  3139                           ;incstack = 0
  3140  001938  0E00               	movlw	0
  3141  00193A  6E36               	movwf	_enc_A,c	;volatile
  3142                           
  3143                           ;IO_Encoder.c: 35: enc_B = 0;
  3144  00193C  0E00               	movlw	0
  3145  00193E  6E38               	movwf	_enc_B,c	;volatile
  3146                           
  3147                           ;IO_Encoder.c: 36: enc_A_prev = 0;
  3148  001940  0E00               	movlw	0
  3149  001942  6E37               	movwf	_enc_A_prev,c	;volatile
  3150                           
  3151                           ;IO_Encoder.c: 37: enc_state.count = 0;
  3152  001944  0E00               	movlw	0
  3153  001946  6E3A               	movwf	_enc_state+1,c	;volatile
  3154  001948  0E00               	movlw	0
  3155  00194A  6E39               	movwf	_enc_state,c	;volatile
  3156                           
  3157                           ;IO_Encoder.c: 38: enc_state.direction = 1;
  3158  00194C  803B               	bsf	_enc_state+2,0,c	;volatile
  3159                           
  3160                           ;IO_Encoder.c: 40: TRISGbits.TRISG3 = 1;
  3161  00194E  8698               	bsf	3992,3,c	;volatile
  3162                           
  3163                           ;IO_Encoder.c: 41: TRISGbits.TRISG4 = 1;
  3164  001950  8898               	bsf	3992,4,c	;volatile
  3165  001952  0012               	return		;funcret
  3166  001954                     __end_of_IO_Encoder_configureIO:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           intcon2	equ	0xFF1
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           postdec2	equ	0xFDD
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _Delay10KTCYx *****************
  3186 ;; Defined at:
  3187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\d10ktcyx.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  unit            1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  unit            1   19[COMRAM] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;Total ram usage:        2 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    4
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text22
  3216  0019B6                     __ptext22:
  3217                           	opt stack 0
  3218  0019B6                     _Delay10KTCYx:
  3219                           	opt stack 26
  3220                           
  3221                           ;incstack = 0
  3222                           ;Delay10KTCYx@unit stored from wreg
  3223  0019B6  6E14               	movwf	Delay10KTCYx@unit,c
  3224  0019B8  0E0D               	movlw	13
  3225  0019BA  6E13               	movwf	??_Delay10KTCYx& (0+255),c
  3226  0019BC  0EFC               	movlw	252
  3227  0019BE                     u1877:
  3228  0019BE  2EE8               	decfsz	wreg,f,c
  3229  0019C0  D7FE               	goto	u1877
  3230  0019C2  2E13               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3231  0019C4  D7FC               	goto	u1877
  3232  0019C6  2E14               	decfsz	Delay10KTCYx@unit,f,c
  3233  0019C8  D7F7               	goto	l2246
  3234  0019CA  0012               	return	
  3235  0019CC                     __end_of_Delay10KTCYx:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           intcon2	equ	0xFF1
  3245                           postinc0	equ	0xFEE
  3246                           wreg	equ	0xFE8
  3247                           indf2	equ	0xFDF
  3248                           postinc2	equ	0xFDE
  3249                           postdec2	equ	0xFDD
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _ISR *****************
  3255 ;; Defined at:
  3256 ;;		line 16 in file "test.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;Total ram usage:       14 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		_IO_Encoder_ISR
  3279 ;;		_TMR_SysTick_ISR
  3280 ;; This function is called by:
  3281 ;;		Interrupt level 2
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	intcode
  3286  000008                     __pintcode:
  3287                           	opt stack 0
  3288  000008                     _ISR:
  3289                           	opt stack 23
  3290                           
  3291                           ;incstack = 0
  3292  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3293  00000A  CFFA F005          	movff	pclath,??_ISR
  3294  00000E  CFFB F006          	movff	pclatu,??_ISR+1
  3295  000012  ED16  F00B         	call	int_func,f	;refresh shadow registers
  3296                           pclatu	equ	0xFFB
  3297                           pclath	equ	0xFFA
  3298                           tblptru	equ	0xFF8
  3299                           tblptrh	equ	0xFF7
  3300                           tblptrl	equ	0xFF6
  3301                           tablat	equ	0xFF5
  3302                           prodh	equ	0xFF4
  3303                           prodl	equ	0xFF3
  3304                           intcon	equ	0xFF2
  3305                           intcon2	equ	0xFF1
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315                           	psect	intcode_body
  3316  00162C                     __pintcode_body:
  3317                           	opt stack 23
  3318  00162C                     int_func:
  3319                           	opt stack 23
  3320  00162C  0006               	pop		; remove dummy address from shadow register refresh
  3321  00162E  CFE9 F007          	movff	fsr0l,??_ISR+2
  3322  001632  CFEA F008          	movff	fsr0h,??_ISR+3
  3323  001636  CFE1 F009          	movff	fsr1l,??_ISR+4
  3324  00163A  CFE2 F00A          	movff	fsr1h,??_ISR+5
  3325  00163E  CFD9 F00B          	movff	fsr2l,??_ISR+6
  3326  001642  CFDA F00C          	movff	fsr2h,??_ISR+7
  3327  001646  CFF3 F00D          	movff	prodl,??_ISR+8
  3328  00164A  CFF4 F00E          	movff	prodh,??_ISR+9
  3329  00164E  CFF6 F00F          	movff	tblptrl,??_ISR+10
  3330  001652  CFF7 F010          	movff	tblptrh,??_ISR+11
  3331  001656  CFF8 F011          	movff	tblptru,??_ISR+12
  3332  00165A  CFF5 F012          	movff	tablat,??_ISR+13
  3333                           
  3334                           ;test.c: 18: if(INTCONbits.TMR0IF == 1) {
  3335  00165E  A4F2               	btfss	intcon,2,c	;volatile
  3336  001660  D004               	goto	i2l34
  3337                           
  3338                           ;test.c: 19: TMR_SysTick_ISR();
  3339  001662  EC0F  F00D         	call	_TMR_SysTick_ISR	;wreg free
  3340                           
  3341                           ;test.c: 21: IO_Encoder_ISR();
  3342  001666  EC2F  F00C         	call	_IO_Encoder_ISR	;wreg free
  3343  00166A                     i2l34:
  3344  00166A  C012  FFF5         	movff	??_ISR+13,tablat
  3345  00166E  C011  FFF8         	movff	??_ISR+12,tblptru
  3346  001672  C010  FFF7         	movff	??_ISR+11,tblptrh
  3347  001676  C00F  FFF6         	movff	??_ISR+10,tblptrl
  3348  00167A  C00E  FFF4         	movff	??_ISR+9,prodh
  3349  00167E  C00D  FFF3         	movff	??_ISR+8,prodl
  3350  001682  C00C  FFDA         	movff	??_ISR+7,fsr2h
  3351  001686  C00B  FFD9         	movff	??_ISR+6,fsr2l
  3352  00168A  C00A  FFE2         	movff	??_ISR+5,fsr1h
  3353  00168E  C009  FFE1         	movff	??_ISR+4,fsr1l
  3354  001692  C008  FFEA         	movff	??_ISR+3,fsr0h
  3355  001696  C007  FFE9         	movff	??_ISR+2,fsr0l
  3356  00169A  C006  FFFB         	movff	??_ISR+1,pclatu
  3357  00169E  C005  FFFA         	movff	??_ISR,pclath
  3358  0016A2  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3359  0016A4  0011               	retfie		f
  3360  0016A6                     __end_of_ISR:
  3361                           	opt stack 0
  3362                           pclatu	equ	0xFFB
  3363                           pclath	equ	0xFFA
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodh	equ	0xFF4
  3369                           prodl	equ	0xFF3
  3370                           intcon	equ	0xFF2
  3371                           intcon2	equ	0xFF1
  3372                           postinc0	equ	0xFEE
  3373                           fsr0h	equ	0xFEA
  3374                           fsr0l	equ	0xFE9
  3375                           wreg	equ	0xFE8
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           postinc2	equ	0xFDE
  3380                           postdec2	equ	0xFDD
  3381                           fsr2h	equ	0xFDA
  3382                           fsr2l	equ	0xFD9
  3383                           status	equ	0xFD8
  3384                           
  3385 ;; *************** function _TMR_SysTick_ISR *****************
  3386 ;; Defined at:
  3387 ;;		line 11 in file "TMR_SysTick.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    2
  3408 ;; This function calls:
  3409 ;;		i2_reload_timer
  3410 ;; This function is called by:
  3411 ;;		_ISR
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text24
  3416  001A1E                     __ptext24:
  3417                           	opt stack 0
  3418  001A1E                     _TMR_SysTick_ISR:
  3419                           	opt stack 23
  3420                           
  3421                           ;TMR_SysTick.c: 13: INTCONbits.TMR0IF = 0;
  3422                           
  3423                           ;incstack = 0
  3424  001A1E  94F2               	bcf	intcon,2,c	;volatile
  3425                           
  3426                           ;TMR_SysTick.c: 15: counter++;
  3427  001A20  4A32               	infsnz	_counter,f,c	;volatile
  3428  001A22  2A33               	incf	_counter+1,f,c	;volatile
  3429                           
  3430                           ;TMR_SysTick.c: 17: reload_timer();
  3431  001A24  EC08  F00D         	call	i2_reload_timer	;wreg free
  3432  001A28  0012               	return		;funcret
  3433  001A2A                     __end_of_TMR_SysTick_ISR:
  3434                           	opt stack 0
  3435                           pclatu	equ	0xFFB
  3436                           pclath	equ	0xFFA
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           intcon2	equ	0xFF1
  3445                           postinc0	equ	0xFEE
  3446                           fsr0h	equ	0xFEA
  3447                           fsr0l	equ	0xFE9
  3448                           wreg	equ	0xFE8
  3449                           fsr1h	equ	0xFE2
  3450                           fsr1l	equ	0xFE1
  3451                           indf2	equ	0xFDF
  3452                           postinc2	equ	0xFDE
  3453                           postdec2	equ	0xFDD
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function i2_reload_timer *****************
  3459 ;; Defined at:
  3460 ;;		line 33 in file "TMR_SysTick.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		i2_WriteTimer0
  3483 ;; This function is called by:
  3484 ;;		_TMR_SysTick_ISR
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text25
  3489  001A10                     __ptext25:
  3490                           	opt stack 0
  3491  001A10                     i2_reload_timer:
  3492                           	opt stack 23
  3493                           
  3494                           ;TMR_SysTick.c: 35: WriteTimer0(systick_tmr_reload);
  3495                           
  3496                           ;incstack = 0
  3497  001A10  C040  F001         	movff	_systick_tmr_reload,i2WriteTimer0@timer0	;volatile
  3498  001A14  C041  F002         	movff	_systick_tmr_reload+1,i2WriteTimer0@timer0+1	;volatile
  3499  001A18  ECF8  F00C         	call	i2_WriteTimer0	;wreg free
  3500  001A1C  0012               	return		;funcret
  3501  001A1E                     __end_ofi2_reload_timer:
  3502                           	opt stack 0
  3503                           pclatu	equ	0xFFB
  3504                           pclath	equ	0xFFA
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           fsr1h	equ	0xFE2
  3518                           fsr1l	equ	0xFE1
  3519                           indf2	equ	0xFDF
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function i2_WriteTimer0 *****************
  3527 ;; Defined at:
  3528 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t0write.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  timer0          2    0[COMRAM] unsigned int 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		None
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;Total ram usage:        4 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		i2_reload_timer
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text26
  3556  0019F0                     __ptext26:
  3557                           	opt stack 0
  3558  0019F0                     i2_WriteTimer0:
  3559                           	opt stack 23
  3560                           
  3561                           ;incstack = 0
  3562  0019F0  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  3563  0019F4  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  3564  0019F8  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  3565  0019FC  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  3566  001A00  0012               	return		;funcret
  3567  001A02                     __end_ofi2_WriteTimer0:
  3568                           	opt stack 0
  3569                           pclatu	equ	0xFFB
  3570                           pclath	equ	0xFFA
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           intcon	equ	0xFF2
  3578                           intcon2	equ	0xFF1
  3579                           postinc0	equ	0xFEE
  3580                           fsr0h	equ	0xFEA
  3581                           fsr0l	equ	0xFE9
  3582                           wreg	equ	0xFE8
  3583                           fsr1h	equ	0xFE2
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           fsr2h	equ	0xFDA
  3589                           fsr2l	equ	0xFD9
  3590                           status	equ	0xFD8
  3591                           
  3592 ;; *************** function _IO_Encoder_ISR *****************
  3593 ;; Defined at:
  3594 ;;		line 8 in file "IO_Encoder.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_ISR
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text27
  3622  00185E                     __ptext27:
  3623                           	opt stack 0
  3624  00185E                     _IO_Encoder_ISR:
  3625                           	opt stack 25
  3626                           
  3627                           ;IO_Encoder.c: 10: enc_A = PORTGbits.RG3;
  3628                           
  3629                           ;incstack = 0
  3630  00185E  0E00               	movlw	0
  3631  001860  B686               	btfsc	3974,3,c	;volatile
  3632  001862  0E01               	movlw	1
  3633  001864  6E36               	movwf	_enc_A,c	;volatile
  3634                           
  3635                           ;IO_Encoder.c: 11: enc_B = PORTGbits.RG4;
  3636  001866  0E00               	movlw	0
  3637  001868  B886               	btfsc	3974,4,c	;volatile
  3638  00186A  0E01               	movlw	1
  3639  00186C  6E38               	movwf	_enc_B,c	;volatile
  3640                           
  3641                           ;IO_Encoder.c: 13: if(!enc_A && enc_A_prev){
  3642  00186E  5036               	movf	_enc_A,w,c	;volatile
  3643  001870  A4D8               	btfss	status,2,c
  3644  001872  D00E               	goto	i2l1160
  3645  001874  5037               	movf	_enc_A_prev,w,c	;volatile
  3646  001876  B4D8               	btfsc	status,2,c
  3647  001878  D00B               	goto	i2l1160
  3648                           
  3649                           ;IO_Encoder.c: 16: if(enc_B) {
  3650  00187A  5038               	movf	_enc_B,w,c	;volatile
  3651  00187C  B4D8               	btfsc	status,2,c
  3652  00187E  D004               	goto	i2l1156
  3653                           
  3654                           ;IO_Encoder.c: 18: enc_state.count++;
  3655  001880  4A39               	infsnz	_enc_state,f,c	;volatile
  3656  001882  2A3A               	incf	_enc_state+1,f,c	;volatile
  3657                           
  3658                           ;IO_Encoder.c: 19: enc_state.direction = 1;
  3659  001884  803B               	bsf	_enc_state+2,0,c	;volatile
  3660                           
  3661                           ;IO_Encoder.c: 20: }
  3662  001886  D004               	goto	i2l1160
  3663  001888                     i2l1156:
  3664                           
  3665                           ;IO_Encoder.c: 21: else {
  3666                           ;IO_Encoder.c: 23: enc_state.count--;
  3667  001888  0639               	decf	_enc_state,f,c	;volatile
  3668  00188A  A0D8               	btfss	status,0,c
  3669  00188C  063A               	decf	_enc_state+1,f,c	;volatile
  3670                           
  3671                           ;IO_Encoder.c: 24: enc_state.direction = 0;
  3672  00188E  903B               	bcf	_enc_state+2,0,c	;volatile
  3673  001890                     i2l1160:
  3674                           
  3675                           ;IO_Encoder.c: 25: }
  3676                           ;IO_Encoder.c: 26: }
  3677                           ;IO_Encoder.c: 28: enc_A_prev = enc_A;
  3678  001890  C036  F037         	movff	_enc_A,_enc_A_prev	;volatile
  3679  001894  0012               	return		;funcret
  3680  001896                     __end_of_IO_Encoder_ISR:
  3681                           	opt stack 0
  3682                           pclatu	equ	0xFFB
  3683                           pclath	equ	0xFFA
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           intcon2	equ	0xFF1
  3692                           postinc0	equ	0xFEE
  3693                           fsr0h	equ	0xFEA
  3694                           fsr0l	equ	0xFE9
  3695                           wreg	equ	0xFE8
  3696                           fsr1h	equ	0xFE2
  3697                           fsr1l	equ	0xFE1
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           pclatu	equ	0xFFB
  3705                           pclath	equ	0xFFA
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           intcon2	equ	0xFF1
  3714                           postinc0	equ	0xFEE
  3715                           fsr0h	equ	0xFEA
  3716                           fsr0l	equ	0xFE9
  3717                           wreg	equ	0xFE8
  3718                           fsr1h	equ	0xFE2
  3719                           fsr1l	equ	0xFE1
  3720                           indf2	equ	0xFDF
  3721                           postinc2	equ	0xFDE
  3722                           postdec2	equ	0xFDD
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727                           	psect	rparam
  3728  0000                     pclatu	equ	0xFFB
  3729                           pclath	equ	0xFFA
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           intcon2	equ	0xFF1
  3738                           postinc0	equ	0xFEE
  3739                           fsr0h	equ	0xFEA
  3740                           fsr0l	equ	0xFE9
  3741                           wreg	equ	0xFE8
  3742                           fsr1h	equ	0xFE2
  3743                           fsr1l	equ	0xFE1
  3744                           indf2	equ	0xFDF
  3745                           postinc2	equ	0xFDE
  3746                           postdec2	equ	0xFDD
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751                           	psect	temp
  3752  000043                     btemp:
  3753                           	opt stack 0
  3754  000043                     	ds	1
  3755  0000                     int$flags	set	btemp
  3756                           pclatu	equ	0xFFB
  3757                           pclath	equ	0xFFA
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           intcon2	equ	0xFF1
  3766                           postinc0	equ	0xFEE
  3767                           fsr0h	equ	0xFEA
  3768                           fsr0l	equ	0xFE9
  3769                           wreg	equ	0xFE8
  3770                           fsr1h	equ	0xFE2
  3771                           fsr1l	equ	0xFE1
  3772                           indf2	equ	0xFDF
  3773                           postinc2	equ	0xFDE
  3774                           postdec2	equ	0xFDD
  3775                           fsr2h	equ	0xFDA
  3776                           fsr2l	equ	0xFD9
  3777                           status	equ	0xFD8


Data Sizes:
    Strings     25
    Constant    10
    Data        0
    BSS         14
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      66
    BANK0           160     22      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@buff(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    IO_LCD_putrs@str	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[8]), STR_1(CODE[12]), 

    IO_LCD_puts@str	PTR unsigned char  size(2) Largest target is 20
		 -> main@buff(BANK0[20]), 

    sp__IO_Encoder_getState	PTR volatile struct . size(2) Largest target is 3
		 -> enc_state(COMRAM[3]), 

    sp__IO_Buttons_getAllButtons	PTR volatile struct . size(2) Largest target is 1
		 -> button_state_bits(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _reload_timer->_WriteTimer0
    _IO_LCD_puts->_write_data
    _IO_LCD_putrs->_write_data
    _IO_LCD_configureIO->_write_port
    _IO_LCD_SetCursor->_write_cmd
    _IO_LCD_Init->_write_cmd

Critical Paths under _ISR in COMRAM

    i2_reload_timer->i2_WriteTimer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4965
                                              0 BANK0     22    22      0
                       _Delay10KTCYx
             _IO_Encoder_configureIO
                _IO_Encoder_getCount
                        _IO_LCD_Init
                   _IO_LCD_SetCursor
                 _IO_LCD_configureIO
                       _IO_LCD_putrs
                        _IO_LCD_puts
                 _IO_LED_configureIO
              _TMR_SysTick_configure
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2710
                                             30 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             25 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TMR_SysTick_configure                                1     1      0     389
                                             22 COMRAM     1     1      0
        TMR_SysTick@enable_interrupt
                       _reload_timer
                        _start_timer
 ---------------------------------------------------------------------------------
 (2) _start_timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) TMR_SysTick@enable_interrupt                          0     0      0     179
                       _reload_timer
 ---------------------------------------------------------------------------------
 (2) _reload_timer                                         0     0      0     179
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (3) _WriteTimer0                                          4     2      2     179
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _IO_LED_configureIO                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_puts                                          3     1      2     383
                                             21 COMRAM     3     1      2
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_putrs                                         5     3      2     460
                                             21 COMRAM     5     3      2
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           3     3      0     176
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_configureIO                                   0     0      0      88
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           2     2      0      88
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_SetCursor                                     2     1      1     562
                                             21 COMRAM     2     1      1
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _IO_LCD_Init                                          1     1      0     176
                                             21 COMRAM     1     1      0
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _write_cmd                                            3     3      0     176
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _IO_Encoder_getCount                                  4     2      2      34
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _IO_Encoder_configureIO                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     2      0      22
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0      93
                                              4 COMRAM    14    14      0
                     _IO_Encoder_ISR
                    _TMR_SysTick_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR_SysTick_ISR                                      0     0      0      93
                     i2_reload_timer
 ---------------------------------------------------------------------------------
 (7) i2_reload_timer                                       0     0      0      93
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (8) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _IO_Encoder_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _IO_Encoder_configureIO
   _IO_Encoder_getCount
   _IO_LCD_Init
     _write_cmd
   _IO_LCD_SetCursor
     _write_cmd
   _IO_LCD_configureIO
     _write_port
   _IO_LCD_putrs
     _write_data
   _IO_LCD_puts
     _write_data
   _IO_LED_configureIO
   _TMR_SysTick_configure
     TMR_SysTick@enable_interrupt
       _reload_timer
         _WriteTimer0
     _reload_timer
       _WriteTimer0
     _start_timer
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   _IO_Encoder_ISR
   _TMR_SysTick_ISR
     i2_reload_timer
       i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      16       5       13.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      42       1       70.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      32        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Nov 11 21:18:11 2017

                    ___wmul@multiplicand 0015                              __CFG_BORV$3 000000  
                         i2_reload_timer 1A10                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                              __CFG_OSC$HS 000000  
                           __CFG_CP4$OFF 000000                             __CFG_CP5$OFF 000000  
                           __CFG_CP6$OFF 000000                             __CFG_CP7$OFF 000000  
                                    l801 1812                                      l811 1854  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
                                    _ISR 0008                     __size_of_WriteTimer0 0012  
                            _start_timer 1A2A                                      wreg 000FE8  
                          IO_LCD_putrs@i 001A                             __CFG_MODE$MC 000000  
                           __CFG_LVP$OFF 000000                                     ?_ISR 0001  
                           __CFG_WDT$OFF 000000                                     l2010 17E8  
                                   l2100 1720                                     l2020 1808  
                                   l2012 17EC                                     l2110 1784  
                                   l2030 1832                                     l2112 1790  
                                   l2120 17C2                                     l2104 174A  
                                   l2008 17E0                                     l2032 1836  
                                   l2114 179C                                     l2202 11D0  
                                   l2108 177A                                     l2036 184A  
                                   l2028 182A                                     l2140 1058  
                                   l2132 1030                                     l2118 17A8  
                                   l2222 1268                                     l2214 120A  
                                   l2150 1094                                     l2240 189C  
                                   l2216 1210                                     l2208 11EE  
                                   l2160 10F8                                     l2144 105E  
                                   l2232 129E                                     l2226 1280  
                                   l2162 1122                                     l2234 12BA  
                                   l2138 104A                                     l2244 18B4  
                                   l2172 114A                                     l2246 19B8  
                                   l2174 114E                                     l2192 119A  
                                   l2186 1180                                     l2274 1552  
                                   l2196 11BE                                     l2198 11C6  
                                   l1974 195E                                     l1992 1930  
                                   l1978 1964                 ??_IO_Encoder_configureIO 0013  
             _buttons_interrupt_priority 0034                                     STR_1 100B  
                                   STR_2 1017                                     STR_3 101F  
                                   u1205 12D4                                     u1215 12EE  
                                   u1225 1312                                     u1175 13F4  
                                   u1185 140E                                     u1195 1432  
                                   u1707 13CE                                     u1717 13D8  
                                   u1807 15FC                                     u1727 13E0  
                                   u1817 160C                                     u1737 17C4  
                                   u1827 1618                                     u1747 15A2  
                                   u1837 146A                                     u1757 15B6  
                                   u1847 1474                                     u1767 15C8  
                                   u1687 134A                                     u1857 14EE  
                                   u1777 15D4                                     u1697 1354  
                                   u1867 14F8                                     u1787 15E0  
                                   u1877 19BE                                     u1797 15EC  
                                   i2l34 166A                                     _main 1500  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     btemp 0043  
                 __size_ofi2_WriteTimer0 0012                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 0016                            __CFG_IESO$OFF 000000  
                         IO_LCD_puts@str 0016                           write_data@data 0015  
                          __CFG_MCLRE$ON 000000                             ___param_bank 000010  
                                  ??_ISR 0005                   __end_ofi2_reload_timer 1A1E  
                 ?_TMR_SysTick_configure 0001                            __CFG_WAIT$OFF 000000  
                                  ?_main 0001                                    _T0CON 000FD5  
                        __end_of___lwdiv 181C                          __end_of___lwmod 185E  
                                  _TMR0H 000FD7                                    _TMR0L 000FD6  
                                  _PORTB 000F81                    __size_of_Delay10KTCYx 0016  
                          __CFG_PWRT$OFF 000000                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                         __CFG_EBTR4$OFF 000000                           __CFG_EBTR5$OFF 000000  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                                  _enc_A 0036                                    _enc_B 0038  
                           ?_IO_LCD_Init 0001                          __end_of_dpowers 100B  
                        __end_of_isdigit 1938                             ?_IO_LCD_puts 0016  
               __end_of_IO_LCD_SetCursor 17CA                                    tablat 000FF5  
                                  status 000FD8                          __end_of_sprintf 12C8  
                        IO_LCD_putrs@str 0016                          __initialization 19A0  
                           __end_of_main 159C                          ?i2_reload_timer 0001  
                           _Delay10KTCYx 19B6                           _IO_Encoder_ISR 185E  
                                 ??_main 0032                           write_port@data 0014  
                          i2_WriteTimer0 19F0                            __activetblptr 000003  
                     _IO_LED_configureIO 19DE          __size_of_IO_Encoder_configureIO 001C  
                        __CFG_BBSIZ$BB2K 000000                                   i2l1160 1890  
                                 i2l1156 1888                      ?_IO_LED_configureIO 0001  
           ?TMR_SysTick@enable_interrupt 0001              __end_of_IO_Encoder_getCount 1988  
                         __CFG_XINST$OFF 000000                   __end_of_IO_Encoder_ISR 1896  
                                 ___wmul 18F4                           __CFG_STVREN$ON 000000  
                              ??___lwdiv 0017                                ??___lwmod 001E  
                   ??_IO_LED_configureIO 0013                                   clear_0 19A6  
                         ?i2_WriteTimer0 0001                            ?_IO_LCD_putrs 0016  
                              ??_isdigit 0013                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                                ??_sprintf 0025  
                             __accesstop 0060                  __end_of__initialization 19AC  
          ??TMR_SysTick@enable_interrupt 0017                            ___rparam_used 000001  
                      _button_state_bits 003F                           __pcstackCOMRAM 0001  
                        ?_IO_Encoder_ISR 0001                   _IO_Encoder_configureIO 1938  
            __size_of_IO_LCD_configureIO 0018                           ??_IO_LCD_putrs 0018  
                           ?_start_timer 0001                             sprintf@width 002F  
                   __size_of_IO_LCD_Init 0090                      IO_LCD_SetCursor@col 0016  
                    IO_LCD_SetCursor@row 0017                 __size_of_TMR_SysTick_ISR 000C  
                   __size_of_IO_LCD_puts 0036                               __pnvCOMRAM 0040  
                             _enc_A_prev 0037                  ??_TMR_SysTick_configure 0017  
             _systick_interrupt_priority 0042                            ?_reload_timer 0001  
                                ?___wmul 0013                          ??i2_WriteTimer0 0003  
                       WriteTimer0@timer 0015                            ??_WriteTimer0 0015  
   __size_ofTMR_SysTick@enable_interrupt 001A                        ?_IO_LCD_SetCursor 0016  
                     ??_IO_LCD_SetCursor 0017                      i2WriteTimer0@timer0 0001  
                       ??i2_reload_timer 0005                       __size_of_write_cmd 0118  
                                __Hparam 0000                                  __Lparam 0000  
                         ??_reload_timer 0017                          __size_of___wmul 0026  
                                ___lwdiv 17CA                                  ___lwmod 181C  
                           __psmallconst 1000                                  __pcinit 19A0  
                                __ramtop 1000                                  __ptext0 1500  
                                __ptext1 1026                                  __ptext2 191A  
                                __ptext3 18F4                                  __ptext4 181C  
                                __ptext5 17CA                                  __ptext6 18CC  
                                __ptext7 1A2A                                  __ptext8 1954  
                                __ptext9 1A02                                _T0CONbits 000FD5  
                           __size_of_ISR 169E                                  _counter 0032  
                                _dpowers 1001                                  _isdigit 191A  
                    __end_of_WriteTimer0 19DE                                  _sprintf 1026  
                         __pintcode_body 162C                     end_of_initialization 19AC  
                                int_func 162C                     __end_of_IO_LCD_putrs 1776  
                      ??_TMR_SysTick_ISR 0005                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                              _PORTBbits 000F81                                _PORTGbits 000F86  
                      __end_of_write_cmd 1500                                _TRISBbits 000F93  
                              _TRISDbits 000F95                                _TRISGbits 000F98  
                              _TRISHbits 000F99                                _TRISJbits 000F9A  
                   __size_of_start_timer 0004                             IO_LCD_puts@i 0018  
                           write_cmd@cmd 0015                         ??_IO_Encoder_ISR 0001  
                ?_IO_Encoder_configureIO 0001             __size_of_IO_Encoder_getCount 001A  
                         __end_of___wmul 191A              __size_of_IO_LED_configureIO 0012  
                             _write_data 12C8                              _WriteTimer0 19CC  
                             _write_port 16A6                      start_initialization 19A0  
                            __end_of_ISR 16A6                     __end_of_reload_timer 1A10  
                 _buttons_use_interrupts 0035           __end_of_IO_Encoder_configureIO 1954  
             __end_of_IO_LCD_configureIO 19A0                                 ??___wmul 0017  
         __size_of_TMR_SysTick_configure 0028            __end_of_TMR_SysTick_configure 18F4  
                       __CFG_LPT1OSC$OFF 000000                              __pbssCOMRAM 0032  
                          __pcstackBANK0 0060                            ??_IO_LCD_Init 0016  
                           _isdigit$1535 0014                    __size_of_IO_LCD_putrs 005C  
                          ??_IO_LCD_puts 0018      __end_ofTMR_SysTick@enable_interrupt 196E  
            TMR_SysTick@enable_interrupt 1954                              sprintf@flag 002E  
                            sprintf@prec 002B                         ___lwdiv@dividend 0013  
                      __CFG_CCP2MX$PORTC 000000                                __pintcode 0008  
                          ?_Delay10KTCYx 0001                                 ?___lwdiv 0013  
                               ?___lwmod 001A                __size_of_IO_LCD_SetCursor 0054  
                              _enc_state 0039                              ?_write_data 0001  
                            ?_write_port 0001                    __end_ofi2_WriteTimer0 1A02  
                              _lcd_state 003C                             _IO_LCD_putrs 171A  
                            __smallconst 1000                        WriteTimer0@timer0 0013  
                               ?_isdigit 0001                       i2WriteTimer0@timer 0003  
                     _systick_tmr_reload 0040                         ___lwdiv@quotient 0018  
                               ?_sprintf 001F                          _TMR_SysTick_ISR 1A1E  
                         ___wmul@product 0017                                 _LATDbits 000F8C  
                    __end_of_IO_LCD_Init 162C                                 _LATHbits 000F90  
                               _LATJbits 000F91                      __end_of_IO_LCD_puts 18CC  
                  __CFG_DATABW$DATA16BIT 000000                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                           ??_Delay10KTCYx 0013  
                      __CFG_ECCPMX$PORTE 000000                        ___wmul@multiplier 0013  
                  __size_of_reload_timer 000E                                main@count 0074  
                       Delay10KTCYx@unit 0014                                _write_cmd 13E8  
                            _INTCON2bits 000FF1                      _IO_Encoder_getCount 196E  
                    __size_of_write_data 0120                      __size_of_write_port 0074  
                               __Hrparam 0000                                 __Lrparam 0000  
                     __CFG_BOREN$SBORDIS 000000                             _reload_timer 1A02  
                   ?_IO_Encoder_getCount 0013                         __size_of___lwdiv 0052  
                       __size_of___lwmod 0042                             ?_WriteTimer0 0013  
                __size_ofi2_reload_timer 000E                            ??_start_timer 0013  
                             sprintf@val 002C                         __size_of_isdigit 001E  
                __end_of_TMR_SysTick_ISR 1A2A                          ___lwdiv@divisor 0015  
                        ___lwdiv@counter 0017                                 __ptext10 19CC  
                               __ptext11 19DE                                 __ptext20 196E  
                               __ptext12 1896                                 __ptext21 1938  
                               __ptext13 171A                                 __ptext22 19B6  
                               __ptext14 12C8                                 __ptext15 1988  
                               __ptext24 1A1E                                 __ptext16 16A6  
                               __ptext25 1A10                                 __ptext17 1776  
                               __ptext26 19F0                                 __ptext18 159C  
                               __ptext27 185E                                 __ptext19 13E8  
                            _IO_LCD_Init 159C                               ?_write_cmd 0001  
                       __size_of_sprintf 02A2                              _IO_LCD_puts 1896  
TMR_SysTick_configure@interrupt_priority 0017                            __size_of_main 009C  
             __end_of_IO_LED_configureIO 19F0                                 int$flags 0043  
                  ??_IO_Encoder_getCount 0015                         _IO_LCD_SetCursor 1776  
                               main@buff 0060                    __CFG_ADDRBW$ADDR20BIT 000000  
                     _IO_LCD_configureIO 1988                               _INTCONbits 000FF2  
                               isdigit@c 0015                 IO_Encoder_getCount@count 0015  
                   __end_of_Delay10KTCYx 19CC                      ?_IO_LCD_configureIO 0001  
                    __end_of_start_timer 1A2E                                 intlevel2 0000  
                              sprintf@ap 0029                                sprintf@sp 001F  
                       ___lwmod@dividend 001A                     ??_IO_LCD_configureIO 0015  
                           ??_write_data 0013                  __size_of_IO_Encoder_ISR 0038  
                           ??_write_port 0013                    _TMR_SysTick_configure 18CC  
                               sprintf@c 0031                                 sprintf@f 0021  
                        ___lwmod@divisor 001C                          ___lwmod@counter 001E  
                       ?_TMR_SysTick_ISR 0001                              ??_write_cmd 0013  
                     __end_of_write_data 13E8                       __end_of_write_port 171A  
